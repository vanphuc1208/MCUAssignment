
Assignment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005d54  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000023c  08005e60  08005e60  00015e60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800609c  0800609c  000200d0  2**0
                  CONTENTS
  4 .ARM          00000000  0800609c  0800609c  000200d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800609c  0800609c  000200d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800609c  0800609c  0001609c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080060a0  080060a0  000160a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000d0  20000000  080060a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000019c  200000d0  08006174  000200d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000026c  08006174  0002026c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012c8e  00000000  00000000  000200f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002b39  00000000  00000000  00032d87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e78  00000000  00000000  000358c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000d38  00000000  00000000  00036738  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000190cf  00000000  00000000  00037470  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011ce9  00000000  00000000  0005053f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008c129  00000000  00000000  00062228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000ee351  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003f34  00000000  00000000  000ee3a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000d0 	.word	0x200000d0
 8000128:	00000000 	.word	0x00000000
 800012c:	08005e48 	.word	0x08005e48

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000d4 	.word	0x200000d4
 8000148:	08005e48 	.word	0x08005e48

0800014c <__aeabi_dmul>:
 800014c:	b570      	push	{r4, r5, r6, lr}
 800014e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000152:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000156:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800015a:	bf1d      	ittte	ne
 800015c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000160:	ea94 0f0c 	teqne	r4, ip
 8000164:	ea95 0f0c 	teqne	r5, ip
 8000168:	f000 f8de 	bleq	8000328 <__aeabi_dmul+0x1dc>
 800016c:	442c      	add	r4, r5
 800016e:	ea81 0603 	eor.w	r6, r1, r3
 8000172:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000176:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800017a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800017e:	bf18      	it	ne
 8000180:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000184:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000188:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800018c:	d038      	beq.n	8000200 <__aeabi_dmul+0xb4>
 800018e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000192:	f04f 0500 	mov.w	r5, #0
 8000196:	fbe1 e502 	umlal	lr, r5, r1, r2
 800019a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800019e:	fbe0 e503 	umlal	lr, r5, r0, r3
 80001a2:	f04f 0600 	mov.w	r6, #0
 80001a6:	fbe1 5603 	umlal	r5, r6, r1, r3
 80001aa:	f09c 0f00 	teq	ip, #0
 80001ae:	bf18      	it	ne
 80001b0:	f04e 0e01 	orrne.w	lr, lr, #1
 80001b4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80001b8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80001bc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80001c0:	d204      	bcs.n	80001cc <__aeabi_dmul+0x80>
 80001c2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80001c6:	416d      	adcs	r5, r5
 80001c8:	eb46 0606 	adc.w	r6, r6, r6
 80001cc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80001d0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80001d4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80001d8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80001dc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80001e0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80001e4:	bf88      	it	hi
 80001e6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80001ea:	d81e      	bhi.n	800022a <__aeabi_dmul+0xde>
 80001ec:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80001f0:	bf08      	it	eq
 80001f2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80001f6:	f150 0000 	adcs.w	r0, r0, #0
 80001fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80001fe:	bd70      	pop	{r4, r5, r6, pc}
 8000200:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000204:	ea46 0101 	orr.w	r1, r6, r1
 8000208:	ea40 0002 	orr.w	r0, r0, r2
 800020c:	ea81 0103 	eor.w	r1, r1, r3
 8000210:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000214:	bfc2      	ittt	gt
 8000216:	ebd4 050c 	rsbsgt	r5, r4, ip
 800021a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800021e:	bd70      	popgt	{r4, r5, r6, pc}
 8000220:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000224:	f04f 0e00 	mov.w	lr, #0
 8000228:	3c01      	subs	r4, #1
 800022a:	f300 80ab 	bgt.w	8000384 <__aeabi_dmul+0x238>
 800022e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000232:	bfde      	ittt	le
 8000234:	2000      	movle	r0, #0
 8000236:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800023a:	bd70      	pople	{r4, r5, r6, pc}
 800023c:	f1c4 0400 	rsb	r4, r4, #0
 8000240:	3c20      	subs	r4, #32
 8000242:	da35      	bge.n	80002b0 <__aeabi_dmul+0x164>
 8000244:	340c      	adds	r4, #12
 8000246:	dc1b      	bgt.n	8000280 <__aeabi_dmul+0x134>
 8000248:	f104 0414 	add.w	r4, r4, #20
 800024c:	f1c4 0520 	rsb	r5, r4, #32
 8000250:	fa00 f305 	lsl.w	r3, r0, r5
 8000254:	fa20 f004 	lsr.w	r0, r0, r4
 8000258:	fa01 f205 	lsl.w	r2, r1, r5
 800025c:	ea40 0002 	orr.w	r0, r0, r2
 8000260:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000264:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000268:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800026c:	fa21 f604 	lsr.w	r6, r1, r4
 8000270:	eb42 0106 	adc.w	r1, r2, r6
 8000274:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000278:	bf08      	it	eq
 800027a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800027e:	bd70      	pop	{r4, r5, r6, pc}
 8000280:	f1c4 040c 	rsb	r4, r4, #12
 8000284:	f1c4 0520 	rsb	r5, r4, #32
 8000288:	fa00 f304 	lsl.w	r3, r0, r4
 800028c:	fa20 f005 	lsr.w	r0, r0, r5
 8000290:	fa01 f204 	lsl.w	r2, r1, r4
 8000294:	ea40 0002 	orr.w	r0, r0, r2
 8000298:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800029c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80002a0:	f141 0100 	adc.w	r1, r1, #0
 80002a4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80002a8:	bf08      	it	eq
 80002aa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80002ae:	bd70      	pop	{r4, r5, r6, pc}
 80002b0:	f1c4 0520 	rsb	r5, r4, #32
 80002b4:	fa00 f205 	lsl.w	r2, r0, r5
 80002b8:	ea4e 0e02 	orr.w	lr, lr, r2
 80002bc:	fa20 f304 	lsr.w	r3, r0, r4
 80002c0:	fa01 f205 	lsl.w	r2, r1, r5
 80002c4:	ea43 0302 	orr.w	r3, r3, r2
 80002c8:	fa21 f004 	lsr.w	r0, r1, r4
 80002cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80002d0:	fa21 f204 	lsr.w	r2, r1, r4
 80002d4:	ea20 0002 	bic.w	r0, r0, r2
 80002d8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80002dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80002e0:	bf08      	it	eq
 80002e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80002e6:	bd70      	pop	{r4, r5, r6, pc}
 80002e8:	f094 0f00 	teq	r4, #0
 80002ec:	d10f      	bne.n	800030e <__aeabi_dmul+0x1c2>
 80002ee:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80002f2:	0040      	lsls	r0, r0, #1
 80002f4:	eb41 0101 	adc.w	r1, r1, r1
 80002f8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80002fc:	bf08      	it	eq
 80002fe:	3c01      	subeq	r4, #1
 8000300:	d0f7      	beq.n	80002f2 <__aeabi_dmul+0x1a6>
 8000302:	ea41 0106 	orr.w	r1, r1, r6
 8000306:	f095 0f00 	teq	r5, #0
 800030a:	bf18      	it	ne
 800030c:	4770      	bxne	lr
 800030e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000312:	0052      	lsls	r2, r2, #1
 8000314:	eb43 0303 	adc.w	r3, r3, r3
 8000318:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 800031c:	bf08      	it	eq
 800031e:	3d01      	subeq	r5, #1
 8000320:	d0f7      	beq.n	8000312 <__aeabi_dmul+0x1c6>
 8000322:	ea43 0306 	orr.w	r3, r3, r6
 8000326:	4770      	bx	lr
 8000328:	ea94 0f0c 	teq	r4, ip
 800032c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000330:	bf18      	it	ne
 8000332:	ea95 0f0c 	teqne	r5, ip
 8000336:	d00c      	beq.n	8000352 <__aeabi_dmul+0x206>
 8000338:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800033c:	bf18      	it	ne
 800033e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000342:	d1d1      	bne.n	80002e8 <__aeabi_dmul+0x19c>
 8000344:	ea81 0103 	eor.w	r1, r1, r3
 8000348:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800034c:	f04f 0000 	mov.w	r0, #0
 8000350:	bd70      	pop	{r4, r5, r6, pc}
 8000352:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000356:	bf06      	itte	eq
 8000358:	4610      	moveq	r0, r2
 800035a:	4619      	moveq	r1, r3
 800035c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000360:	d019      	beq.n	8000396 <__aeabi_dmul+0x24a>
 8000362:	ea94 0f0c 	teq	r4, ip
 8000366:	d102      	bne.n	800036e <__aeabi_dmul+0x222>
 8000368:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800036c:	d113      	bne.n	8000396 <__aeabi_dmul+0x24a>
 800036e:	ea95 0f0c 	teq	r5, ip
 8000372:	d105      	bne.n	8000380 <__aeabi_dmul+0x234>
 8000374:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000378:	bf1c      	itt	ne
 800037a:	4610      	movne	r0, r2
 800037c:	4619      	movne	r1, r3
 800037e:	d10a      	bne.n	8000396 <__aeabi_dmul+0x24a>
 8000380:	ea81 0103 	eor.w	r1, r1, r3
 8000384:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000388:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800038c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000390:	f04f 0000 	mov.w	r0, #0
 8000394:	bd70      	pop	{r4, r5, r6, pc}
 8000396:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800039a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800039e:	bd70      	pop	{r4, r5, r6, pc}

080003a0 <__aeabi_drsub>:
 80003a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80003a4:	e002      	b.n	80003ac <__adddf3>
 80003a6:	bf00      	nop

080003a8 <__aeabi_dsub>:
 80003a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080003ac <__adddf3>:
 80003ac:	b530      	push	{r4, r5, lr}
 80003ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80003b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80003b6:	ea94 0f05 	teq	r4, r5
 80003ba:	bf08      	it	eq
 80003bc:	ea90 0f02 	teqeq	r0, r2
 80003c0:	bf1f      	itttt	ne
 80003c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80003c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80003ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80003ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003d2:	f000 80e2 	beq.w	800059a <__adddf3+0x1ee>
 80003d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80003da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80003de:	bfb8      	it	lt
 80003e0:	426d      	neglt	r5, r5
 80003e2:	dd0c      	ble.n	80003fe <__adddf3+0x52>
 80003e4:	442c      	add	r4, r5
 80003e6:	ea80 0202 	eor.w	r2, r0, r2
 80003ea:	ea81 0303 	eor.w	r3, r1, r3
 80003ee:	ea82 0000 	eor.w	r0, r2, r0
 80003f2:	ea83 0101 	eor.w	r1, r3, r1
 80003f6:	ea80 0202 	eor.w	r2, r0, r2
 80003fa:	ea81 0303 	eor.w	r3, r1, r3
 80003fe:	2d36      	cmp	r5, #54	; 0x36
 8000400:	bf88      	it	hi
 8000402:	bd30      	pophi	{r4, r5, pc}
 8000404:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000408:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800040c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000410:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000414:	d002      	beq.n	800041c <__adddf3+0x70>
 8000416:	4240      	negs	r0, r0
 8000418:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800041c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000420:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000424:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000428:	d002      	beq.n	8000430 <__adddf3+0x84>
 800042a:	4252      	negs	r2, r2
 800042c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000430:	ea94 0f05 	teq	r4, r5
 8000434:	f000 80a7 	beq.w	8000586 <__adddf3+0x1da>
 8000438:	f1a4 0401 	sub.w	r4, r4, #1
 800043c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000440:	db0d      	blt.n	800045e <__adddf3+0xb2>
 8000442:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000446:	fa22 f205 	lsr.w	r2, r2, r5
 800044a:	1880      	adds	r0, r0, r2
 800044c:	f141 0100 	adc.w	r1, r1, #0
 8000450:	fa03 f20e 	lsl.w	r2, r3, lr
 8000454:	1880      	adds	r0, r0, r2
 8000456:	fa43 f305 	asr.w	r3, r3, r5
 800045a:	4159      	adcs	r1, r3
 800045c:	e00e      	b.n	800047c <__adddf3+0xd0>
 800045e:	f1a5 0520 	sub.w	r5, r5, #32
 8000462:	f10e 0e20 	add.w	lr, lr, #32
 8000466:	2a01      	cmp	r2, #1
 8000468:	fa03 fc0e 	lsl.w	ip, r3, lr
 800046c:	bf28      	it	cs
 800046e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000472:	fa43 f305 	asr.w	r3, r3, r5
 8000476:	18c0      	adds	r0, r0, r3
 8000478:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800047c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000480:	d507      	bpl.n	8000492 <__adddf3+0xe6>
 8000482:	f04f 0e00 	mov.w	lr, #0
 8000486:	f1dc 0c00 	rsbs	ip, ip, #0
 800048a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800048e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000492:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000496:	d31b      	bcc.n	80004d0 <__adddf3+0x124>
 8000498:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800049c:	d30c      	bcc.n	80004b8 <__adddf3+0x10c>
 800049e:	0849      	lsrs	r1, r1, #1
 80004a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80004a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80004a8:	f104 0401 	add.w	r4, r4, #1
 80004ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80004b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80004b4:	f080 809a 	bcs.w	80005ec <__adddf3+0x240>
 80004b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80004bc:	bf08      	it	eq
 80004be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80004c2:	f150 0000 	adcs.w	r0, r0, #0
 80004c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80004ca:	ea41 0105 	orr.w	r1, r1, r5
 80004ce:	bd30      	pop	{r4, r5, pc}
 80004d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80004d4:	4140      	adcs	r0, r0
 80004d6:	eb41 0101 	adc.w	r1, r1, r1
 80004da:	3c01      	subs	r4, #1
 80004dc:	bf28      	it	cs
 80004de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004e2:	d2e9      	bcs.n	80004b8 <__adddf3+0x10c>
 80004e4:	f091 0f00 	teq	r1, #0
 80004e8:	bf04      	itt	eq
 80004ea:	4601      	moveq	r1, r0
 80004ec:	2000      	moveq	r0, #0
 80004ee:	fab1 f381 	clz	r3, r1
 80004f2:	bf08      	it	eq
 80004f4:	3320      	addeq	r3, #32
 80004f6:	f1a3 030b 	sub.w	r3, r3, #11
 80004fa:	f1b3 0220 	subs.w	r2, r3, #32
 80004fe:	da0c      	bge.n	800051a <__adddf3+0x16e>
 8000500:	320c      	adds	r2, #12
 8000502:	dd08      	ble.n	8000516 <__adddf3+0x16a>
 8000504:	f102 0c14 	add.w	ip, r2, #20
 8000508:	f1c2 020c 	rsb	r2, r2, #12
 800050c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000510:	fa21 f102 	lsr.w	r1, r1, r2
 8000514:	e00c      	b.n	8000530 <__adddf3+0x184>
 8000516:	f102 0214 	add.w	r2, r2, #20
 800051a:	bfd8      	it	le
 800051c:	f1c2 0c20 	rsble	ip, r2, #32
 8000520:	fa01 f102 	lsl.w	r1, r1, r2
 8000524:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000528:	bfdc      	itt	le
 800052a:	ea41 010c 	orrle.w	r1, r1, ip
 800052e:	4090      	lslle	r0, r2
 8000530:	1ae4      	subs	r4, r4, r3
 8000532:	bfa2      	ittt	ge
 8000534:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000538:	4329      	orrge	r1, r5
 800053a:	bd30      	popge	{r4, r5, pc}
 800053c:	ea6f 0404 	mvn.w	r4, r4
 8000540:	3c1f      	subs	r4, #31
 8000542:	da1c      	bge.n	800057e <__adddf3+0x1d2>
 8000544:	340c      	adds	r4, #12
 8000546:	dc0e      	bgt.n	8000566 <__adddf3+0x1ba>
 8000548:	f104 0414 	add.w	r4, r4, #20
 800054c:	f1c4 0220 	rsb	r2, r4, #32
 8000550:	fa20 f004 	lsr.w	r0, r0, r4
 8000554:	fa01 f302 	lsl.w	r3, r1, r2
 8000558:	ea40 0003 	orr.w	r0, r0, r3
 800055c:	fa21 f304 	lsr.w	r3, r1, r4
 8000560:	ea45 0103 	orr.w	r1, r5, r3
 8000564:	bd30      	pop	{r4, r5, pc}
 8000566:	f1c4 040c 	rsb	r4, r4, #12
 800056a:	f1c4 0220 	rsb	r2, r4, #32
 800056e:	fa20 f002 	lsr.w	r0, r0, r2
 8000572:	fa01 f304 	lsl.w	r3, r1, r4
 8000576:	ea40 0003 	orr.w	r0, r0, r3
 800057a:	4629      	mov	r1, r5
 800057c:	bd30      	pop	{r4, r5, pc}
 800057e:	fa21 f004 	lsr.w	r0, r1, r4
 8000582:	4629      	mov	r1, r5
 8000584:	bd30      	pop	{r4, r5, pc}
 8000586:	f094 0f00 	teq	r4, #0
 800058a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800058e:	bf06      	itte	eq
 8000590:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000594:	3401      	addeq	r4, #1
 8000596:	3d01      	subne	r5, #1
 8000598:	e74e      	b.n	8000438 <__adddf3+0x8c>
 800059a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800059e:	bf18      	it	ne
 80005a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005a4:	d029      	beq.n	80005fa <__adddf3+0x24e>
 80005a6:	ea94 0f05 	teq	r4, r5
 80005aa:	bf08      	it	eq
 80005ac:	ea90 0f02 	teqeq	r0, r2
 80005b0:	d005      	beq.n	80005be <__adddf3+0x212>
 80005b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80005b6:	bf04      	itt	eq
 80005b8:	4619      	moveq	r1, r3
 80005ba:	4610      	moveq	r0, r2
 80005bc:	bd30      	pop	{r4, r5, pc}
 80005be:	ea91 0f03 	teq	r1, r3
 80005c2:	bf1e      	ittt	ne
 80005c4:	2100      	movne	r1, #0
 80005c6:	2000      	movne	r0, #0
 80005c8:	bd30      	popne	{r4, r5, pc}
 80005ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80005ce:	d105      	bne.n	80005dc <__adddf3+0x230>
 80005d0:	0040      	lsls	r0, r0, #1
 80005d2:	4149      	adcs	r1, r1
 80005d4:	bf28      	it	cs
 80005d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80005da:	bd30      	pop	{r4, r5, pc}
 80005dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005e0:	bf3c      	itt	cc
 80005e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005e6:	bd30      	popcc	{r4, r5, pc}
 80005e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005f4:	f04f 0000 	mov.w	r0, #0
 80005f8:	bd30      	pop	{r4, r5, pc}
 80005fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005fe:	bf1a      	itte	ne
 8000600:	4619      	movne	r1, r3
 8000602:	4610      	movne	r0, r2
 8000604:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000608:	bf1c      	itt	ne
 800060a:	460b      	movne	r3, r1
 800060c:	4602      	movne	r2, r0
 800060e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000612:	bf06      	itte	eq
 8000614:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000618:	ea91 0f03 	teqeq	r1, r3
 800061c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000620:	bd30      	pop	{r4, r5, pc}
 8000622:	bf00      	nop

08000624 <__aeabi_ui2d>:
 8000624:	f090 0f00 	teq	r0, #0
 8000628:	bf04      	itt	eq
 800062a:	2100      	moveq	r1, #0
 800062c:	4770      	bxeq	lr
 800062e:	b530      	push	{r4, r5, lr}
 8000630:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000634:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000638:	f04f 0500 	mov.w	r5, #0
 800063c:	f04f 0100 	mov.w	r1, #0
 8000640:	e750      	b.n	80004e4 <__adddf3+0x138>
 8000642:	bf00      	nop

08000644 <__aeabi_i2d>:
 8000644:	f090 0f00 	teq	r0, #0
 8000648:	bf04      	itt	eq
 800064a:	2100      	moveq	r1, #0
 800064c:	4770      	bxeq	lr
 800064e:	b530      	push	{r4, r5, lr}
 8000650:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000654:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000658:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800065c:	bf48      	it	mi
 800065e:	4240      	negmi	r0, r0
 8000660:	f04f 0100 	mov.w	r1, #0
 8000664:	e73e      	b.n	80004e4 <__adddf3+0x138>
 8000666:	bf00      	nop

08000668 <__aeabi_f2d>:
 8000668:	0042      	lsls	r2, r0, #1
 800066a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800066e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000672:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000676:	bf1f      	itttt	ne
 8000678:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800067c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000680:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000684:	4770      	bxne	lr
 8000686:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800068a:	bf08      	it	eq
 800068c:	4770      	bxeq	lr
 800068e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000692:	bf04      	itt	eq
 8000694:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000698:	4770      	bxeq	lr
 800069a:	b530      	push	{r4, r5, lr}
 800069c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80006a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80006a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006a8:	e71c      	b.n	80004e4 <__adddf3+0x138>
 80006aa:	bf00      	nop

080006ac <__aeabi_ul2d>:
 80006ac:	ea50 0201 	orrs.w	r2, r0, r1
 80006b0:	bf08      	it	eq
 80006b2:	4770      	bxeq	lr
 80006b4:	b530      	push	{r4, r5, lr}
 80006b6:	f04f 0500 	mov.w	r5, #0
 80006ba:	e00a      	b.n	80006d2 <__aeabi_l2d+0x16>

080006bc <__aeabi_l2d>:
 80006bc:	ea50 0201 	orrs.w	r2, r0, r1
 80006c0:	bf08      	it	eq
 80006c2:	4770      	bxeq	lr
 80006c4:	b530      	push	{r4, r5, lr}
 80006c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80006ca:	d502      	bpl.n	80006d2 <__aeabi_l2d+0x16>
 80006cc:	4240      	negs	r0, r0
 80006ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80006de:	f43f aed8 	beq.w	8000492 <__adddf3+0xe6>
 80006e2:	f04f 0203 	mov.w	r2, #3
 80006e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006ea:	bf18      	it	ne
 80006ec:	3203      	addne	r2, #3
 80006ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006f2:	bf18      	it	ne
 80006f4:	3203      	addne	r2, #3
 80006f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006fa:	f1c2 0320 	rsb	r3, r2, #32
 80006fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000702:	fa20 f002 	lsr.w	r0, r0, r2
 8000706:	fa01 fe03 	lsl.w	lr, r1, r3
 800070a:	ea40 000e 	orr.w	r0, r0, lr
 800070e:	fa21 f102 	lsr.w	r1, r1, r2
 8000712:	4414      	add	r4, r2
 8000714:	e6bd      	b.n	8000492 <__adddf3+0xe6>
 8000716:	bf00      	nop

08000718 <__aeabi_d2iz>:
 8000718:	ea4f 0241 	mov.w	r2, r1, lsl #1
 800071c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000720:	d215      	bcs.n	800074e <__aeabi_d2iz+0x36>
 8000722:	d511      	bpl.n	8000748 <__aeabi_d2iz+0x30>
 8000724:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000728:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 800072c:	d912      	bls.n	8000754 <__aeabi_d2iz+0x3c>
 800072e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000732:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000736:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800073a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800073e:	fa23 f002 	lsr.w	r0, r3, r2
 8000742:	bf18      	it	ne
 8000744:	4240      	negne	r0, r0
 8000746:	4770      	bx	lr
 8000748:	f04f 0000 	mov.w	r0, #0
 800074c:	4770      	bx	lr
 800074e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000752:	d105      	bne.n	8000760 <__aeabi_d2iz+0x48>
 8000754:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000758:	bf08      	it	eq
 800075a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800075e:	4770      	bx	lr
 8000760:	f04f 0000 	mov.w	r0, #0
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop

08000768 <__aeabi_frsub>:
 8000768:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 800076c:	e002      	b.n	8000774 <__addsf3>
 800076e:	bf00      	nop

08000770 <__aeabi_fsub>:
 8000770:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000774 <__addsf3>:
 8000774:	0042      	lsls	r2, r0, #1
 8000776:	bf1f      	itttt	ne
 8000778:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 800077c:	ea92 0f03 	teqne	r2, r3
 8000780:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000784:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000788:	d06a      	beq.n	8000860 <__addsf3+0xec>
 800078a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800078e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000792:	bfc1      	itttt	gt
 8000794:	18d2      	addgt	r2, r2, r3
 8000796:	4041      	eorgt	r1, r0
 8000798:	4048      	eorgt	r0, r1
 800079a:	4041      	eorgt	r1, r0
 800079c:	bfb8      	it	lt
 800079e:	425b      	neglt	r3, r3
 80007a0:	2b19      	cmp	r3, #25
 80007a2:	bf88      	it	hi
 80007a4:	4770      	bxhi	lr
 80007a6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 80007aa:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80007ae:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 80007b2:	bf18      	it	ne
 80007b4:	4240      	negne	r0, r0
 80007b6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80007ba:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80007be:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80007c2:	bf18      	it	ne
 80007c4:	4249      	negne	r1, r1
 80007c6:	ea92 0f03 	teq	r2, r3
 80007ca:	d03f      	beq.n	800084c <__addsf3+0xd8>
 80007cc:	f1a2 0201 	sub.w	r2, r2, #1
 80007d0:	fa41 fc03 	asr.w	ip, r1, r3
 80007d4:	eb10 000c 	adds.w	r0, r0, ip
 80007d8:	f1c3 0320 	rsb	r3, r3, #32
 80007dc:	fa01 f103 	lsl.w	r1, r1, r3
 80007e0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80007e4:	d502      	bpl.n	80007ec <__addsf3+0x78>
 80007e6:	4249      	negs	r1, r1
 80007e8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80007ec:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80007f0:	d313      	bcc.n	800081a <__addsf3+0xa6>
 80007f2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80007f6:	d306      	bcc.n	8000806 <__addsf3+0x92>
 80007f8:	0840      	lsrs	r0, r0, #1
 80007fa:	ea4f 0131 	mov.w	r1, r1, rrx
 80007fe:	f102 0201 	add.w	r2, r2, #1
 8000802:	2afe      	cmp	r2, #254	; 0xfe
 8000804:	d251      	bcs.n	80008aa <__addsf3+0x136>
 8000806:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 800080a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800080e:	bf08      	it	eq
 8000810:	f020 0001 	biceq.w	r0, r0, #1
 8000814:	ea40 0003 	orr.w	r0, r0, r3
 8000818:	4770      	bx	lr
 800081a:	0049      	lsls	r1, r1, #1
 800081c:	eb40 0000 	adc.w	r0, r0, r0
 8000820:	3a01      	subs	r2, #1
 8000822:	bf28      	it	cs
 8000824:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000828:	d2ed      	bcs.n	8000806 <__addsf3+0x92>
 800082a:	fab0 fc80 	clz	ip, r0
 800082e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000832:	ebb2 020c 	subs.w	r2, r2, ip
 8000836:	fa00 f00c 	lsl.w	r0, r0, ip
 800083a:	bfaa      	itet	ge
 800083c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000840:	4252      	neglt	r2, r2
 8000842:	4318      	orrge	r0, r3
 8000844:	bfbc      	itt	lt
 8000846:	40d0      	lsrlt	r0, r2
 8000848:	4318      	orrlt	r0, r3
 800084a:	4770      	bx	lr
 800084c:	f092 0f00 	teq	r2, #0
 8000850:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000854:	bf06      	itte	eq
 8000856:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 800085a:	3201      	addeq	r2, #1
 800085c:	3b01      	subne	r3, #1
 800085e:	e7b5      	b.n	80007cc <__addsf3+0x58>
 8000860:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000864:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000868:	bf18      	it	ne
 800086a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800086e:	d021      	beq.n	80008b4 <__addsf3+0x140>
 8000870:	ea92 0f03 	teq	r2, r3
 8000874:	d004      	beq.n	8000880 <__addsf3+0x10c>
 8000876:	f092 0f00 	teq	r2, #0
 800087a:	bf08      	it	eq
 800087c:	4608      	moveq	r0, r1
 800087e:	4770      	bx	lr
 8000880:	ea90 0f01 	teq	r0, r1
 8000884:	bf1c      	itt	ne
 8000886:	2000      	movne	r0, #0
 8000888:	4770      	bxne	lr
 800088a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 800088e:	d104      	bne.n	800089a <__addsf3+0x126>
 8000890:	0040      	lsls	r0, r0, #1
 8000892:	bf28      	it	cs
 8000894:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000898:	4770      	bx	lr
 800089a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 800089e:	bf3c      	itt	cc
 80008a0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 80008a4:	4770      	bxcc	lr
 80008a6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80008aa:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 80008ae:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80008b2:	4770      	bx	lr
 80008b4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80008b8:	bf16      	itet	ne
 80008ba:	4608      	movne	r0, r1
 80008bc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80008c0:	4601      	movne	r1, r0
 80008c2:	0242      	lsls	r2, r0, #9
 80008c4:	bf06      	itte	eq
 80008c6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80008ca:	ea90 0f01 	teqeq	r0, r1
 80008ce:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80008d2:	4770      	bx	lr

080008d4 <__aeabi_ui2f>:
 80008d4:	f04f 0300 	mov.w	r3, #0
 80008d8:	e004      	b.n	80008e4 <__aeabi_i2f+0x8>
 80008da:	bf00      	nop

080008dc <__aeabi_i2f>:
 80008dc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80008e0:	bf48      	it	mi
 80008e2:	4240      	negmi	r0, r0
 80008e4:	ea5f 0c00 	movs.w	ip, r0
 80008e8:	bf08      	it	eq
 80008ea:	4770      	bxeq	lr
 80008ec:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80008f0:	4601      	mov	r1, r0
 80008f2:	f04f 0000 	mov.w	r0, #0
 80008f6:	e01c      	b.n	8000932 <__aeabi_l2f+0x2a>

080008f8 <__aeabi_ul2f>:
 80008f8:	ea50 0201 	orrs.w	r2, r0, r1
 80008fc:	bf08      	it	eq
 80008fe:	4770      	bxeq	lr
 8000900:	f04f 0300 	mov.w	r3, #0
 8000904:	e00a      	b.n	800091c <__aeabi_l2f+0x14>
 8000906:	bf00      	nop

08000908 <__aeabi_l2f>:
 8000908:	ea50 0201 	orrs.w	r2, r0, r1
 800090c:	bf08      	it	eq
 800090e:	4770      	bxeq	lr
 8000910:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000914:	d502      	bpl.n	800091c <__aeabi_l2f+0x14>
 8000916:	4240      	negs	r0, r0
 8000918:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800091c:	ea5f 0c01 	movs.w	ip, r1
 8000920:	bf02      	ittt	eq
 8000922:	4684      	moveq	ip, r0
 8000924:	4601      	moveq	r1, r0
 8000926:	2000      	moveq	r0, #0
 8000928:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 800092c:	bf08      	it	eq
 800092e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000932:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000936:	fabc f28c 	clz	r2, ip
 800093a:	3a08      	subs	r2, #8
 800093c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000940:	db10      	blt.n	8000964 <__aeabi_l2f+0x5c>
 8000942:	fa01 fc02 	lsl.w	ip, r1, r2
 8000946:	4463      	add	r3, ip
 8000948:	fa00 fc02 	lsl.w	ip, r0, r2
 800094c:	f1c2 0220 	rsb	r2, r2, #32
 8000950:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000954:	fa20 f202 	lsr.w	r2, r0, r2
 8000958:	eb43 0002 	adc.w	r0, r3, r2
 800095c:	bf08      	it	eq
 800095e:	f020 0001 	biceq.w	r0, r0, #1
 8000962:	4770      	bx	lr
 8000964:	f102 0220 	add.w	r2, r2, #32
 8000968:	fa01 fc02 	lsl.w	ip, r1, r2
 800096c:	f1c2 0220 	rsb	r2, r2, #32
 8000970:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000974:	fa21 f202 	lsr.w	r2, r1, r2
 8000978:	eb43 0002 	adc.w	r0, r3, r2
 800097c:	bf08      	it	eq
 800097e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000982:	4770      	bx	lr

08000984 <__aeabi_fmul>:
 8000984:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000988:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800098c:	bf1e      	ittt	ne
 800098e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000992:	ea92 0f0c 	teqne	r2, ip
 8000996:	ea93 0f0c 	teqne	r3, ip
 800099a:	d06f      	beq.n	8000a7c <__aeabi_fmul+0xf8>
 800099c:	441a      	add	r2, r3
 800099e:	ea80 0c01 	eor.w	ip, r0, r1
 80009a2:	0240      	lsls	r0, r0, #9
 80009a4:	bf18      	it	ne
 80009a6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80009aa:	d01e      	beq.n	80009ea <__aeabi_fmul+0x66>
 80009ac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80009b0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80009b4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80009b8:	fba0 3101 	umull	r3, r1, r0, r1
 80009bc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80009c0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80009c4:	bf3e      	ittt	cc
 80009c6:	0049      	lslcc	r1, r1, #1
 80009c8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80009cc:	005b      	lslcc	r3, r3, #1
 80009ce:	ea40 0001 	orr.w	r0, r0, r1
 80009d2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80009d6:	2afd      	cmp	r2, #253	; 0xfd
 80009d8:	d81d      	bhi.n	8000a16 <__aeabi_fmul+0x92>
 80009da:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80009de:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80009e2:	bf08      	it	eq
 80009e4:	f020 0001 	biceq.w	r0, r0, #1
 80009e8:	4770      	bx	lr
 80009ea:	f090 0f00 	teq	r0, #0
 80009ee:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80009f2:	bf08      	it	eq
 80009f4:	0249      	lsleq	r1, r1, #9
 80009f6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80009fa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80009fe:	3a7f      	subs	r2, #127	; 0x7f
 8000a00:	bfc2      	ittt	gt
 8000a02:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000a06:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000a0a:	4770      	bxgt	lr
 8000a0c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000a10:	f04f 0300 	mov.w	r3, #0
 8000a14:	3a01      	subs	r2, #1
 8000a16:	dc5d      	bgt.n	8000ad4 <__aeabi_fmul+0x150>
 8000a18:	f112 0f19 	cmn.w	r2, #25
 8000a1c:	bfdc      	itt	le
 8000a1e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000a22:	4770      	bxle	lr
 8000a24:	f1c2 0200 	rsb	r2, r2, #0
 8000a28:	0041      	lsls	r1, r0, #1
 8000a2a:	fa21 f102 	lsr.w	r1, r1, r2
 8000a2e:	f1c2 0220 	rsb	r2, r2, #32
 8000a32:	fa00 fc02 	lsl.w	ip, r0, r2
 8000a36:	ea5f 0031 	movs.w	r0, r1, rrx
 8000a3a:	f140 0000 	adc.w	r0, r0, #0
 8000a3e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000a42:	bf08      	it	eq
 8000a44:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000a48:	4770      	bx	lr
 8000a4a:	f092 0f00 	teq	r2, #0
 8000a4e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000a52:	bf02      	ittt	eq
 8000a54:	0040      	lsleq	r0, r0, #1
 8000a56:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000a5a:	3a01      	subeq	r2, #1
 8000a5c:	d0f9      	beq.n	8000a52 <__aeabi_fmul+0xce>
 8000a5e:	ea40 000c 	orr.w	r0, r0, ip
 8000a62:	f093 0f00 	teq	r3, #0
 8000a66:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a6a:	bf02      	ittt	eq
 8000a6c:	0049      	lsleq	r1, r1, #1
 8000a6e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000a72:	3b01      	subeq	r3, #1
 8000a74:	d0f9      	beq.n	8000a6a <__aeabi_fmul+0xe6>
 8000a76:	ea41 010c 	orr.w	r1, r1, ip
 8000a7a:	e78f      	b.n	800099c <__aeabi_fmul+0x18>
 8000a7c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000a80:	ea92 0f0c 	teq	r2, ip
 8000a84:	bf18      	it	ne
 8000a86:	ea93 0f0c 	teqne	r3, ip
 8000a8a:	d00a      	beq.n	8000aa2 <__aeabi_fmul+0x11e>
 8000a8c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000a90:	bf18      	it	ne
 8000a92:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000a96:	d1d8      	bne.n	8000a4a <__aeabi_fmul+0xc6>
 8000a98:	ea80 0001 	eor.w	r0, r0, r1
 8000a9c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000aa0:	4770      	bx	lr
 8000aa2:	f090 0f00 	teq	r0, #0
 8000aa6:	bf17      	itett	ne
 8000aa8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000aac:	4608      	moveq	r0, r1
 8000aae:	f091 0f00 	teqne	r1, #0
 8000ab2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000ab6:	d014      	beq.n	8000ae2 <__aeabi_fmul+0x15e>
 8000ab8:	ea92 0f0c 	teq	r2, ip
 8000abc:	d101      	bne.n	8000ac2 <__aeabi_fmul+0x13e>
 8000abe:	0242      	lsls	r2, r0, #9
 8000ac0:	d10f      	bne.n	8000ae2 <__aeabi_fmul+0x15e>
 8000ac2:	ea93 0f0c 	teq	r3, ip
 8000ac6:	d103      	bne.n	8000ad0 <__aeabi_fmul+0x14c>
 8000ac8:	024b      	lsls	r3, r1, #9
 8000aca:	bf18      	it	ne
 8000acc:	4608      	movne	r0, r1
 8000ace:	d108      	bne.n	8000ae2 <__aeabi_fmul+0x15e>
 8000ad0:	ea80 0001 	eor.w	r0, r0, r1
 8000ad4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ad8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000adc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ae0:	4770      	bx	lr
 8000ae2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ae6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000aea:	4770      	bx	lr

08000aec <__aeabi_fdiv>:
 8000aec:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000af0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000af4:	bf1e      	ittt	ne
 8000af6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000afa:	ea92 0f0c 	teqne	r2, ip
 8000afe:	ea93 0f0c 	teqne	r3, ip
 8000b02:	d069      	beq.n	8000bd8 <__aeabi_fdiv+0xec>
 8000b04:	eba2 0203 	sub.w	r2, r2, r3
 8000b08:	ea80 0c01 	eor.w	ip, r0, r1
 8000b0c:	0249      	lsls	r1, r1, #9
 8000b0e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000b12:	d037      	beq.n	8000b84 <__aeabi_fdiv+0x98>
 8000b14:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000b18:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000b1c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000b20:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000b24:	428b      	cmp	r3, r1
 8000b26:	bf38      	it	cc
 8000b28:	005b      	lslcc	r3, r3, #1
 8000b2a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000b2e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000b32:	428b      	cmp	r3, r1
 8000b34:	bf24      	itt	cs
 8000b36:	1a5b      	subcs	r3, r3, r1
 8000b38:	ea40 000c 	orrcs.w	r0, r0, ip
 8000b3c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000b40:	bf24      	itt	cs
 8000b42:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000b46:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000b4a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000b4e:	bf24      	itt	cs
 8000b50:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000b54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000b58:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000b5c:	bf24      	itt	cs
 8000b5e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000b62:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000b66:	011b      	lsls	r3, r3, #4
 8000b68:	bf18      	it	ne
 8000b6a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000b6e:	d1e0      	bne.n	8000b32 <__aeabi_fdiv+0x46>
 8000b70:	2afd      	cmp	r2, #253	; 0xfd
 8000b72:	f63f af50 	bhi.w	8000a16 <__aeabi_fmul+0x92>
 8000b76:	428b      	cmp	r3, r1
 8000b78:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b7c:	bf08      	it	eq
 8000b7e:	f020 0001 	biceq.w	r0, r0, #1
 8000b82:	4770      	bx	lr
 8000b84:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000b88:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000b8c:	327f      	adds	r2, #127	; 0x7f
 8000b8e:	bfc2      	ittt	gt
 8000b90:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000b94:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000b98:	4770      	bxgt	lr
 8000b9a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b9e:	f04f 0300 	mov.w	r3, #0
 8000ba2:	3a01      	subs	r2, #1
 8000ba4:	e737      	b.n	8000a16 <__aeabi_fmul+0x92>
 8000ba6:	f092 0f00 	teq	r2, #0
 8000baa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000bae:	bf02      	ittt	eq
 8000bb0:	0040      	lsleq	r0, r0, #1
 8000bb2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000bb6:	3a01      	subeq	r2, #1
 8000bb8:	d0f9      	beq.n	8000bae <__aeabi_fdiv+0xc2>
 8000bba:	ea40 000c 	orr.w	r0, r0, ip
 8000bbe:	f093 0f00 	teq	r3, #0
 8000bc2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bc6:	bf02      	ittt	eq
 8000bc8:	0049      	lsleq	r1, r1, #1
 8000bca:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000bce:	3b01      	subeq	r3, #1
 8000bd0:	d0f9      	beq.n	8000bc6 <__aeabi_fdiv+0xda>
 8000bd2:	ea41 010c 	orr.w	r1, r1, ip
 8000bd6:	e795      	b.n	8000b04 <__aeabi_fdiv+0x18>
 8000bd8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000bdc:	ea92 0f0c 	teq	r2, ip
 8000be0:	d108      	bne.n	8000bf4 <__aeabi_fdiv+0x108>
 8000be2:	0242      	lsls	r2, r0, #9
 8000be4:	f47f af7d 	bne.w	8000ae2 <__aeabi_fmul+0x15e>
 8000be8:	ea93 0f0c 	teq	r3, ip
 8000bec:	f47f af70 	bne.w	8000ad0 <__aeabi_fmul+0x14c>
 8000bf0:	4608      	mov	r0, r1
 8000bf2:	e776      	b.n	8000ae2 <__aeabi_fmul+0x15e>
 8000bf4:	ea93 0f0c 	teq	r3, ip
 8000bf8:	d104      	bne.n	8000c04 <__aeabi_fdiv+0x118>
 8000bfa:	024b      	lsls	r3, r1, #9
 8000bfc:	f43f af4c 	beq.w	8000a98 <__aeabi_fmul+0x114>
 8000c00:	4608      	mov	r0, r1
 8000c02:	e76e      	b.n	8000ae2 <__aeabi_fmul+0x15e>
 8000c04:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000c08:	bf18      	it	ne
 8000c0a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000c0e:	d1ca      	bne.n	8000ba6 <__aeabi_fdiv+0xba>
 8000c10:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000c14:	f47f af5c 	bne.w	8000ad0 <__aeabi_fmul+0x14c>
 8000c18:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000c1c:	f47f af3c 	bne.w	8000a98 <__aeabi_fmul+0x114>
 8000c20:	e75f      	b.n	8000ae2 <__aeabi_fmul+0x15e>
 8000c22:	bf00      	nop

08000c24 <Button_Reading>:
// Defining  counter for automatically increasing the value
// After the button is pressed more than 1 second.

int buttonFlag[N0_OF_BUTTONS] = {0};
void Button_Reading(void)
{
 8000c24:	b580      	push	{r7, lr}
 8000c26:	b082      	sub	sp, #8
 8000c28:	af00      	add	r7, sp, #0
	for(int i = 0; i < N0_OF_BUTTONS; i ++)
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	607b      	str	r3, [r7, #4]
 8000c2e:	e076      	b.n	8000d1e <Button_Reading+0xfa>
	{
		debounceButtonBuffer3[i] =debounceButtonBuffer2[i];
 8000c30:	4a3f      	ldr	r2, [pc, #252]	; (8000d30 <Button_Reading+0x10c>)
 8000c32:	687b      	ldr	r3, [r7, #4]
 8000c34:	4413      	add	r3, r2
 8000c36:	7819      	ldrb	r1, [r3, #0]
 8000c38:	4a3e      	ldr	r2, [pc, #248]	; (8000d34 <Button_Reading+0x110>)
 8000c3a:	687b      	ldr	r3, [r7, #4]
 8000c3c:	4413      	add	r3, r2
 8000c3e:	460a      	mov	r2, r1
 8000c40:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer2[i] =debounceButtonBuffer1[i];
 8000c42:	4a3d      	ldr	r2, [pc, #244]	; (8000d38 <Button_Reading+0x114>)
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	4413      	add	r3, r2
 8000c48:	7819      	ldrb	r1, [r3, #0]
 8000c4a:	4a39      	ldr	r2, [pc, #228]	; (8000d30 <Button_Reading+0x10c>)
 8000c4c:	687b      	ldr	r3, [r7, #4]
 8000c4e:	4413      	add	r3, r2
 8000c50:	460a      	mov	r2, r1
 8000c52:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = HAL_GPIO_ReadPin(buttonGPIO[i], buttonPin[i]);
 8000c54:	4a39      	ldr	r2, [pc, #228]	; (8000d3c <Button_Reading+0x118>)
 8000c56:	687b      	ldr	r3, [r7, #4]
 8000c58:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000c5c:	4938      	ldr	r1, [pc, #224]	; (8000d40 <Button_Reading+0x11c>)
 8000c5e:	687b      	ldr	r3, [r7, #4]
 8000c60:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000c64:	b29b      	uxth	r3, r3
 8000c66:	4619      	mov	r1, r3
 8000c68:	4610      	mov	r0, r2
 8000c6a:	f002 fa2d 	bl	80030c8 <HAL_GPIO_ReadPin>
 8000c6e:	4603      	mov	r3, r0
 8000c70:	4619      	mov	r1, r3
 8000c72:	4a31      	ldr	r2, [pc, #196]	; (8000d38 <Button_Reading+0x114>)
 8000c74:	687b      	ldr	r3, [r7, #4]
 8000c76:	4413      	add	r3, r2
 8000c78:	460a      	mov	r2, r1
 8000c7a:	701a      	strb	r2, [r3, #0]
		if(debounceButtonBuffer1[i] == debounceButtonBuffer2[i] && debounceButtonBuffer2[i] == debounceButtonBuffer3[i])
 8000c7c:	4a2e      	ldr	r2, [pc, #184]	; (8000d38 <Button_Reading+0x114>)
 8000c7e:	687b      	ldr	r3, [r7, #4]
 8000c80:	4413      	add	r3, r2
 8000c82:	781a      	ldrb	r2, [r3, #0]
 8000c84:	492a      	ldr	r1, [pc, #168]	; (8000d30 <Button_Reading+0x10c>)
 8000c86:	687b      	ldr	r3, [r7, #4]
 8000c88:	440b      	add	r3, r1
 8000c8a:	781b      	ldrb	r3, [r3, #0]
 8000c8c:	429a      	cmp	r2, r3
 8000c8e:	d12d      	bne.n	8000cec <Button_Reading+0xc8>
 8000c90:	4a27      	ldr	r2, [pc, #156]	; (8000d30 <Button_Reading+0x10c>)
 8000c92:	687b      	ldr	r3, [r7, #4]
 8000c94:	4413      	add	r3, r2
 8000c96:	781a      	ldrb	r2, [r3, #0]
 8000c98:	4926      	ldr	r1, [pc, #152]	; (8000d34 <Button_Reading+0x110>)
 8000c9a:	687b      	ldr	r3, [r7, #4]
 8000c9c:	440b      	add	r3, r1
 8000c9e:	781b      	ldrb	r3, [r3, #0]
 8000ca0:	429a      	cmp	r2, r3
 8000ca2:	d123      	bne.n	8000cec <Button_Reading+0xc8>
		{
			if(debounceButtonBuffer1[i] != buttonBuffer[i])
 8000ca4:	4a24      	ldr	r2, [pc, #144]	; (8000d38 <Button_Reading+0x114>)
 8000ca6:	687b      	ldr	r3, [r7, #4]
 8000ca8:	4413      	add	r3, r2
 8000caa:	781a      	ldrb	r2, [r3, #0]
 8000cac:	4925      	ldr	r1, [pc, #148]	; (8000d44 <Button_Reading+0x120>)
 8000cae:	687b      	ldr	r3, [r7, #4]
 8000cb0:	440b      	add	r3, r1
 8000cb2:	781b      	ldrb	r3, [r3, #0]
 8000cb4:	429a      	cmp	r2, r3
 8000cb6:	d02e      	beq.n	8000d16 <Button_Reading+0xf2>
			{
				buttonBuffer[i] = debounceButtonBuffer1[i];
 8000cb8:	4a1f      	ldr	r2, [pc, #124]	; (8000d38 <Button_Reading+0x114>)
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	4413      	add	r3, r2
 8000cbe:	7819      	ldrb	r1, [r3, #0]
 8000cc0:	4a20      	ldr	r2, [pc, #128]	; (8000d44 <Button_Reading+0x120>)
 8000cc2:	687b      	ldr	r3, [r7, #4]
 8000cc4:	4413      	add	r3, r2
 8000cc6:	460a      	mov	r2, r1
 8000cc8:	701a      	strb	r2, [r3, #0]
						if(buttonBuffer[i] == BUTTON_IS_PRESSED)
 8000cca:	4a1e      	ldr	r2, [pc, #120]	; (8000d44 <Button_Reading+0x120>)
 8000ccc:	687b      	ldr	r3, [r7, #4]
 8000cce:	4413      	add	r3, r2
 8000cd0:	781b      	ldrb	r3, [r3, #0]
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	d11f      	bne.n	8000d16 <Button_Reading+0xf2>
						{
							buttonFlag[i] = 1;
 8000cd6:	4a1c      	ldr	r2, [pc, #112]	; (8000d48 <Button_Reading+0x124>)
 8000cd8:	687b      	ldr	r3, [r7, #4]
 8000cda:	2101      	movs	r1, #1
 8000cdc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
							buttonTimeOut[i] = DURATION_FOR_AUTO_INCREASING;
 8000ce0:	4a1a      	ldr	r2, [pc, #104]	; (8000d4c <Button_Reading+0x128>)
 8000ce2:	687b      	ldr	r3, [r7, #4]
 8000ce4:	2164      	movs	r1, #100	; 0x64
 8000ce6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			if(debounceButtonBuffer1[i] != buttonBuffer[i])
 8000cea:	e014      	b.n	8000d16 <Button_Reading+0xf2>
						}
			}
		}
		else
		{
			buttonTimeOut[i]--;
 8000cec:	4a17      	ldr	r2, [pc, #92]	; (8000d4c <Button_Reading+0x128>)
 8000cee:	687b      	ldr	r3, [r7, #4]
 8000cf0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000cf4:	1e5a      	subs	r2, r3, #1
 8000cf6:	4915      	ldr	r1, [pc, #84]	; (8000d4c <Button_Reading+0x128>)
 8000cf8:	687b      	ldr	r3, [r7, #4]
 8000cfa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				if(buttonTimeOut[i] <= 0)
 8000cfe:	4a13      	ldr	r2, [pc, #76]	; (8000d4c <Button_Reading+0x128>)
 8000d00:	687b      	ldr	r3, [r7, #4]
 8000d02:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000d06:	2b00      	cmp	r3, #0
 8000d08:	dc06      	bgt.n	8000d18 <Button_Reading+0xf4>
					buttonBuffer[i] = BUTTON_IS_RELEASED;
 8000d0a:	4a0e      	ldr	r2, [pc, #56]	; (8000d44 <Button_Reading+0x120>)
 8000d0c:	687b      	ldr	r3, [r7, #4]
 8000d0e:	4413      	add	r3, r2
 8000d10:	2201      	movs	r2, #1
 8000d12:	701a      	strb	r2, [r3, #0]
 8000d14:	e000      	b.n	8000d18 <Button_Reading+0xf4>
			if(debounceButtonBuffer1[i] != buttonBuffer[i])
 8000d16:	bf00      	nop
	for(int i = 0; i < N0_OF_BUTTONS; i ++)
 8000d18:	687b      	ldr	r3, [r7, #4]
 8000d1a:	3301      	adds	r3, #1
 8000d1c:	607b      	str	r3, [r7, #4]
 8000d1e:	687b      	ldr	r3, [r7, #4]
 8000d20:	2b03      	cmp	r3, #3
 8000d22:	dd85      	ble.n	8000c30 <Button_Reading+0xc>
		}
	}
}
 8000d24:	bf00      	nop
 8000d26:	bf00      	nop
 8000d28:	3708      	adds	r7, #8
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	bd80      	pop	{r7, pc}
 8000d2e:	bf00      	nop
 8000d30:	20000100 	.word	0x20000100
 8000d34:	20000104 	.word	0x20000104
 8000d38:	200000fc 	.word	0x200000fc
 8000d3c:	20000004 	.word	0x20000004
 8000d40:	20000014 	.word	0x20000014
 8000d44:	20000000 	.word	0x20000000
 8000d48:	20000108 	.word	0x20000108
 8000d4c:	200000ec 	.word	0x200000ec

08000d50 <Is_Button_Pressed>:

int Is_Button_Pressed(int index)
{
 8000d50:	b480      	push	{r7}
 8000d52:	b083      	sub	sp, #12
 8000d54:	af00      	add	r7, sp, #0
 8000d56:	6078      	str	r0, [r7, #4]
	if(index >= N0_OF_BUTTONS || index < 0)	return 0;
 8000d58:	687b      	ldr	r3, [r7, #4]
 8000d5a:	2b03      	cmp	r3, #3
 8000d5c:	dc02      	bgt.n	8000d64 <Is_Button_Pressed+0x14>
 8000d5e:	687b      	ldr	r3, [r7, #4]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	da01      	bge.n	8000d68 <Is_Button_Pressed+0x18>
 8000d64:	2300      	movs	r3, #0
 8000d66:	e00d      	b.n	8000d84 <Is_Button_Pressed+0x34>

		if(buttonFlag[index] == 1)
 8000d68:	4a09      	ldr	r2, [pc, #36]	; (8000d90 <Is_Button_Pressed+0x40>)
 8000d6a:	687b      	ldr	r3, [r7, #4]
 8000d6c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000d70:	2b01      	cmp	r3, #1
 8000d72:	d106      	bne.n	8000d82 <Is_Button_Pressed+0x32>
		{
			buttonFlag[index] = 0;
 8000d74:	4a06      	ldr	r2, [pc, #24]	; (8000d90 <Is_Button_Pressed+0x40>)
 8000d76:	687b      	ldr	r3, [r7, #4]
 8000d78:	2100      	movs	r1, #0
 8000d7a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			return 1;
 8000d7e:	2301      	movs	r3, #1
 8000d80:	e000      	b.n	8000d84 <Is_Button_Pressed+0x34>
		}
		return 0;
 8000d82:	2300      	movs	r3, #0
}
 8000d84:	4618      	mov	r0, r3
 8000d86:	370c      	adds	r7, #12
 8000d88:	46bd      	mov	sp, r7
 8000d8a:	bc80      	pop	{r7}
 8000d8c:	4770      	bx	lr
 8000d8e:	bf00      	nop
 8000d90:	20000108 	.word	0x20000108

08000d94 <buzzer>:
 */

#include "buzzer.h"

void buzzer(int duty_cycle)
{
 8000d94:	b480      	push	{r7}
 8000d96:	b083      	sub	sp, #12
 8000d98:	af00      	add	r7, sp, #0
 8000d9a:	6078      	str	r0, [r7, #4]
	 htim3.Instance->CCR1 = duty_cycle;
 8000d9c:	4b04      	ldr	r3, [pc, #16]	; (8000db0 <buzzer+0x1c>)
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	687a      	ldr	r2, [r7, #4]
 8000da2:	635a      	str	r2, [r3, #52]	; 0x34
//     __HAL_TIM_SET_AUTORELOAD(&htim3, buzzerValue*2); // Increasing frequency : Auto-Reload Register - ARR
//     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, buzzerValue); // Increasing duty cycle: Capture/Compare Register - CCR
}
 8000da4:	bf00      	nop
 8000da6:	370c      	adds	r7, #12
 8000da8:	46bd      	mov	sp, r7
 8000daa:	bc80      	pop	{r7}
 8000dac:	4770      	bx	lr
 8000dae:	bf00      	nop
 8000db0:	20000140 	.word	0x20000140

08000db4 <clearAllLed1>:
 */
#include "main.h"
#include "displayLed.h"

void clearAllLed1()
{
 8000db4:	b580      	push	{r7, lr}
 8000db6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D2_GPIO_Port, D2_Pin, RESET);
 8000db8:	2200      	movs	r2, #0
 8000dba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000dbe:	4805      	ldr	r0, [pc, #20]	; (8000dd4 <clearAllLed1+0x20>)
 8000dc0:	f002 f999 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, RESET);
 8000dc4:	2200      	movs	r2, #0
 8000dc6:	2108      	movs	r1, #8
 8000dc8:	4803      	ldr	r0, [pc, #12]	; (8000dd8 <clearAllLed1+0x24>)
 8000dca:	f002 f994 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000dce:	bf00      	nop
 8000dd0:	bd80      	pop	{r7, pc}
 8000dd2:	bf00      	nop
 8000dd4:	40010800 	.word	0x40010800
 8000dd8:	40010c00 	.word	0x40010c00

08000ddc <clearAllLed2>:

void clearAllLed2()
{
 8000ddc:	b580      	push	{r7, lr}
 8000dde:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, RESET);
 8000de0:	2200      	movs	r2, #0
 8000de2:	2120      	movs	r1, #32
 8000de4:	4804      	ldr	r0, [pc, #16]	; (8000df8 <clearAllLed2+0x1c>)
 8000de6:	f002 f986 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, RESET);
 8000dea:	2200      	movs	r2, #0
 8000dec:	2110      	movs	r1, #16
 8000dee:	4802      	ldr	r0, [pc, #8]	; (8000df8 <clearAllLed2+0x1c>)
 8000df0:	f002 f981 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000df4:	bf00      	nop
 8000df6:	bd80      	pop	{r7, pc}
 8000df8:	40010c00 	.word	0x40010c00

08000dfc <displayRed1>:
void displayRed1()
{
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D2_GPIO_Port, D2_Pin, SET);
 8000e00:	2201      	movs	r2, #1
 8000e02:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e06:	4805      	ldr	r0, [pc, #20]	; (8000e1c <displayRed1+0x20>)
 8000e08:	f002 f975 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, RESET);
 8000e0c:	2200      	movs	r2, #0
 8000e0e:	2108      	movs	r1, #8
 8000e10:	4803      	ldr	r0, [pc, #12]	; (8000e20 <displayRed1+0x24>)
 8000e12:	f002 f970 	bl	80030f6 <HAL_GPIO_WritePin>

}
 8000e16:	bf00      	nop
 8000e18:	bd80      	pop	{r7, pc}
 8000e1a:	bf00      	nop
 8000e1c:	40010800 	.word	0x40010800
 8000e20:	40010c00 	.word	0x40010c00

08000e24 <displayYellow1>:

void displayYellow1()
{
 8000e24:	b580      	push	{r7, lr}
 8000e26:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D2_GPIO_Port, D2_Pin, SET);
 8000e28:	2201      	movs	r2, #1
 8000e2a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e2e:	4805      	ldr	r0, [pc, #20]	; (8000e44 <displayYellow1+0x20>)
 8000e30:	f002 f961 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, SET);
 8000e34:	2201      	movs	r2, #1
 8000e36:	2108      	movs	r1, #8
 8000e38:	4803      	ldr	r0, [pc, #12]	; (8000e48 <displayYellow1+0x24>)
 8000e3a:	f002 f95c 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000e3e:	bf00      	nop
 8000e40:	bd80      	pop	{r7, pc}
 8000e42:	bf00      	nop
 8000e44:	40010800 	.word	0x40010800
 8000e48:	40010c00 	.word	0x40010c00

08000e4c <displayGreen1>:

void displayGreen1()
{
 8000e4c:	b580      	push	{r7, lr}
 8000e4e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D2_GPIO_Port, D2_Pin, RESET);
 8000e50:	2200      	movs	r2, #0
 8000e52:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e56:	4805      	ldr	r0, [pc, #20]	; (8000e6c <displayGreen1+0x20>)
 8000e58:	f002 f94d 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, SET);
 8000e5c:	2201      	movs	r2, #1
 8000e5e:	2108      	movs	r1, #8
 8000e60:	4803      	ldr	r0, [pc, #12]	; (8000e70 <displayGreen1+0x24>)
 8000e62:	f002 f948 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000e66:	bf00      	nop
 8000e68:	bd80      	pop	{r7, pc}
 8000e6a:	bf00      	nop
 8000e6c:	40010800 	.word	0x40010800
 8000e70:	40010c00 	.word	0x40010c00

08000e74 <displayRed2>:

void displayRed2()
{
 8000e74:	b580      	push	{r7, lr}
 8000e76:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, SET);
 8000e78:	2201      	movs	r2, #1
 8000e7a:	2120      	movs	r1, #32
 8000e7c:	4804      	ldr	r0, [pc, #16]	; (8000e90 <displayRed2+0x1c>)
 8000e7e:	f002 f93a 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, RESET);
 8000e82:	2200      	movs	r2, #0
 8000e84:	2110      	movs	r1, #16
 8000e86:	4802      	ldr	r0, [pc, #8]	; (8000e90 <displayRed2+0x1c>)
 8000e88:	f002 f935 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000e8c:	bf00      	nop
 8000e8e:	bd80      	pop	{r7, pc}
 8000e90:	40010c00 	.word	0x40010c00

08000e94 <displayYellow2>:


void displayYellow2()
{
 8000e94:	b580      	push	{r7, lr}
 8000e96:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, SET);
 8000e98:	2201      	movs	r2, #1
 8000e9a:	2120      	movs	r1, #32
 8000e9c:	4804      	ldr	r0, [pc, #16]	; (8000eb0 <displayYellow2+0x1c>)
 8000e9e:	f002 f92a 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, SET);
 8000ea2:	2201      	movs	r2, #1
 8000ea4:	2110      	movs	r1, #16
 8000ea6:	4802      	ldr	r0, [pc, #8]	; (8000eb0 <displayYellow2+0x1c>)
 8000ea8:	f002 f925 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000eac:	bf00      	nop
 8000eae:	bd80      	pop	{r7, pc}
 8000eb0:	40010c00 	.word	0x40010c00

08000eb4 <displayGreen2>:

void displayGreen2()
{
 8000eb4:	b580      	push	{r7, lr}
 8000eb6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, RESET);
 8000eb8:	2200      	movs	r2, #0
 8000eba:	2120      	movs	r1, #32
 8000ebc:	4804      	ldr	r0, [pc, #16]	; (8000ed0 <displayGreen2+0x1c>)
 8000ebe:	f002 f91a 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, SET);
 8000ec2:	2201      	movs	r2, #1
 8000ec4:	2110      	movs	r1, #16
 8000ec6:	4802      	ldr	r0, [pc, #8]	; (8000ed0 <displayGreen2+0x1c>)
 8000ec8:	f002 f915 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000ecc:	bf00      	nop
 8000ece:	bd80      	pop	{r7, pc}
 8000ed0:	40010c00 	.word	0x40010c00

08000ed4 <toggleRed>:

void toggleRed()
{	// Remember to clear all led before toggle
 8000ed4:	b580      	push	{r7, lr}
 8000ed6:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(D2_GPIO_Port, D2_Pin);
 8000ed8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000edc:	4804      	ldr	r0, [pc, #16]	; (8000ef0 <toggleRed+0x1c>)
 8000ede:	f002 f922 	bl	8003126 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(D4_GPIO_Port, D4_Pin);
 8000ee2:	2120      	movs	r1, #32
 8000ee4:	4803      	ldr	r0, [pc, #12]	; (8000ef4 <toggleRed+0x20>)
 8000ee6:	f002 f91e 	bl	8003126 <HAL_GPIO_TogglePin>
}
 8000eea:	bf00      	nop
 8000eec:	bd80      	pop	{r7, pc}
 8000eee:	bf00      	nop
 8000ef0:	40010800 	.word	0x40010800
 8000ef4:	40010c00 	.word	0x40010c00

08000ef8 <toggleYellow>:

void toggleYellow()
{	// Remember to clear all led before toggle
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(D2_GPIO_Port, D2_Pin);
 8000efc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f00:	4808      	ldr	r0, [pc, #32]	; (8000f24 <toggleYellow+0x2c>)
 8000f02:	f002 f910 	bl	8003126 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(D3_GPIO_Port, D3_Pin);
 8000f06:	2108      	movs	r1, #8
 8000f08:	4807      	ldr	r0, [pc, #28]	; (8000f28 <toggleYellow+0x30>)
 8000f0a:	f002 f90c 	bl	8003126 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(D4_GPIO_Port, D4_Pin);
 8000f0e:	2120      	movs	r1, #32
 8000f10:	4805      	ldr	r0, [pc, #20]	; (8000f28 <toggleYellow+0x30>)
 8000f12:	f002 f908 	bl	8003126 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(D5_GPIO_Port, D5_Pin);
 8000f16:	2110      	movs	r1, #16
 8000f18:	4803      	ldr	r0, [pc, #12]	; (8000f28 <toggleYellow+0x30>)
 8000f1a:	f002 f904 	bl	8003126 <HAL_GPIO_TogglePin>
}
 8000f1e:	bf00      	nop
 8000f20:	bd80      	pop	{r7, pc}
 8000f22:	bf00      	nop
 8000f24:	40010800 	.word	0x40010800
 8000f28:	40010c00 	.word	0x40010c00

08000f2c <toggleGreen>:

void toggleGreen()
{	// Remember to clear all led before toggle
 8000f2c:	b580      	push	{r7, lr}
 8000f2e:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(D3_GPIO_Port, D3_Pin);
 8000f30:	2108      	movs	r1, #8
 8000f32:	4804      	ldr	r0, [pc, #16]	; (8000f44 <toggleGreen+0x18>)
 8000f34:	f002 f8f7 	bl	8003126 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(D5_GPIO_Port, D5_Pin);
 8000f38:	2110      	movs	r1, #16
 8000f3a:	4802      	ldr	r0, [pc, #8]	; (8000f44 <toggleGreen+0x18>)
 8000f3c:	f002 f8f3 	bl	8003126 <HAL_GPIO_TogglePin>
}
 8000f40:	bf00      	nop
 8000f42:	bd80      	pop	{r7, pc}
 8000f44:	40010c00 	.word	0x40010c00

08000f48 <clearPedestrian>:

void clearPedestrian()
{
 8000f48:	b580      	push	{r7, lr}
 8000f4a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, RESET);
 8000f4c:	2200      	movs	r2, #0
 8000f4e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f52:	4805      	ldr	r0, [pc, #20]	; (8000f68 <clearPedestrian+0x20>)
 8000f54:	f002 f8cf 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, RESET);
 8000f58:	2200      	movs	r2, #0
 8000f5a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f5e:	4803      	ldr	r0, [pc, #12]	; (8000f6c <clearPedestrian+0x24>)
 8000f60:	f002 f8c9 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000f64:	bf00      	nop
 8000f66:	bd80      	pop	{r7, pc}
 8000f68:	40010c00 	.word	0x40010c00
 8000f6c:	40010800 	.word	0x40010800

08000f70 <displayPedestrianRed>:

void displayPedestrianRed()
{
 8000f70:	b580      	push	{r7, lr}
 8000f72:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, SET);
 8000f74:	2201      	movs	r2, #1
 8000f76:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f7a:	4805      	ldr	r0, [pc, #20]	; (8000f90 <displayPedestrianRed+0x20>)
 8000f7c:	f002 f8bb 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, RESET);
 8000f80:	2200      	movs	r2, #0
 8000f82:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f86:	4803      	ldr	r0, [pc, #12]	; (8000f94 <displayPedestrianRed+0x24>)
 8000f88:	f002 f8b5 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000f8c:	bf00      	nop
 8000f8e:	bd80      	pop	{r7, pc}
 8000f90:	40010c00 	.word	0x40010c00
 8000f94:	40010800 	.word	0x40010800

08000f98 <displayPedestrianGreen>:
	HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, SET);
	HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, SET);
}

void displayPedestrianGreen()
{
 8000f98:	b580      	push	{r7, lr}
 8000f9a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, RESET);
 8000f9c:	2200      	movs	r2, #0
 8000f9e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000fa2:	4805      	ldr	r0, [pc, #20]	; (8000fb8 <displayPedestrianGreen+0x20>)
 8000fa4:	f002 f8a7 	bl	80030f6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, SET);
 8000fa8:	2201      	movs	r2, #1
 8000faa:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000fae:	4803      	ldr	r0, [pc, #12]	; (8000fbc <displayPedestrianGreen+0x24>)
 8000fb0:	f002 f8a1 	bl	80030f6 <HAL_GPIO_WritePin>
}
 8000fb4:	bf00      	nop
 8000fb6:	bd80      	pop	{r7, pc}
 8000fb8:	40010c00 	.word	0x40010c00
 8000fbc:	40010800 	.word	0x40010800

08000fc0 <increase>:

#include "global.h"
#include<math.h>

void increase()
{
 8000fc0:	b480      	push	{r7}
 8000fc2:	af00      	add	r7, sp, #0
	time1++;
 8000fc4:	4b07      	ldr	r3, [pc, #28]	; (8000fe4 <increase+0x24>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	3301      	adds	r3, #1
 8000fca:	4a06      	ldr	r2, [pc, #24]	; (8000fe4 <increase+0x24>)
 8000fcc:	6013      	str	r3, [r2, #0]
	if(time1 > 99)
 8000fce:	4b05      	ldr	r3, [pc, #20]	; (8000fe4 <increase+0x24>)
 8000fd0:	681b      	ldr	r3, [r3, #0]
 8000fd2:	2b63      	cmp	r3, #99	; 0x63
 8000fd4:	dd02      	ble.n	8000fdc <increase+0x1c>
		time1 = 1;
 8000fd6:	4b03      	ldr	r3, [pc, #12]	; (8000fe4 <increase+0x24>)
 8000fd8:	2201      	movs	r2, #1
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bf00      	nop
 8000fde:	46bd      	mov	sp, r7
 8000fe0:	bc80      	pop	{r7}
 8000fe2:	4770      	bx	lr
 8000fe4:	2000013c 	.word	0x2000013c

08000fe8 <balance>:

void balance(int RED, int AMBER, int GREEN)
{
 8000fe8:	b5b0      	push	{r4, r5, r7, lr}
 8000fea:	b084      	sub	sp, #16
 8000fec:	af00      	add	r7, sp, #0
 8000fee:	60f8      	str	r0, [r7, #12]
 8000ff0:	60b9      	str	r1, [r7, #8]
 8000ff2:	607a      	str	r2, [r7, #4]
	if(RED > timeRed)
 8000ff4:	4b91      	ldr	r3, [pc, #580]	; (800123c <balance+0x254>)
 8000ff6:	681b      	ldr	r3, [r3, #0]
 8000ff8:	68fa      	ldr	r2, [r7, #12]
 8000ffa:	429a      	cmp	r2, r3
 8000ffc:	dd5b      	ble.n	80010b6 <balance+0xce>
	{
		timeYellow	= round( ( (float)(timeYellow * 1.0f) * (float)( (RED * 1.0f) / (timeRed * 1.0f) ) ) );
 8000ffe:	4b90      	ldr	r3, [pc, #576]	; (8001240 <balance+0x258>)
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	4618      	mov	r0, r3
 8001004:	f7ff fc6a 	bl	80008dc <__aeabi_i2f>
 8001008:	4604      	mov	r4, r0
 800100a:	68f8      	ldr	r0, [r7, #12]
 800100c:	f7ff fc66 	bl	80008dc <__aeabi_i2f>
 8001010:	4605      	mov	r5, r0
 8001012:	4b8a      	ldr	r3, [pc, #552]	; (800123c <balance+0x254>)
 8001014:	681b      	ldr	r3, [r3, #0]
 8001016:	4618      	mov	r0, r3
 8001018:	f7ff fc60 	bl	80008dc <__aeabi_i2f>
 800101c:	4603      	mov	r3, r0
 800101e:	4619      	mov	r1, r3
 8001020:	4628      	mov	r0, r5
 8001022:	f7ff fd63 	bl	8000aec <__aeabi_fdiv>
 8001026:	4603      	mov	r3, r0
 8001028:	4619      	mov	r1, r3
 800102a:	4620      	mov	r0, r4
 800102c:	f7ff fcaa 	bl	8000984 <__aeabi_fmul>
 8001030:	4603      	mov	r3, r0
 8001032:	4618      	mov	r0, r3
 8001034:	f7ff fb18 	bl	8000668 <__aeabi_f2d>
 8001038:	4602      	mov	r2, r0
 800103a:	460b      	mov	r3, r1
 800103c:	4610      	mov	r0, r2
 800103e:	4619      	mov	r1, r3
 8001040:	f004 feba 	bl	8005db8 <round>
 8001044:	4602      	mov	r2, r0
 8001046:	460b      	mov	r3, r1
 8001048:	4610      	mov	r0, r2
 800104a:	4619      	mov	r1, r3
 800104c:	f7ff fb64 	bl	8000718 <__aeabi_d2iz>
 8001050:	4603      	mov	r3, r0
 8001052:	4a7b      	ldr	r2, [pc, #492]	; (8001240 <balance+0x258>)
 8001054:	6013      	str	r3, [r2, #0]
		timeGreen	= round( ( (float)(timeGreen * 1.0f) * (float)( (RED * 1.0f) / (timeRed * 1.0f) ) ) );
 8001056:	4b7b      	ldr	r3, [pc, #492]	; (8001244 <balance+0x25c>)
 8001058:	681b      	ldr	r3, [r3, #0]
 800105a:	4618      	mov	r0, r3
 800105c:	f7ff fc3e 	bl	80008dc <__aeabi_i2f>
 8001060:	4604      	mov	r4, r0
 8001062:	68f8      	ldr	r0, [r7, #12]
 8001064:	f7ff fc3a 	bl	80008dc <__aeabi_i2f>
 8001068:	4605      	mov	r5, r0
 800106a:	4b74      	ldr	r3, [pc, #464]	; (800123c <balance+0x254>)
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	4618      	mov	r0, r3
 8001070:	f7ff fc34 	bl	80008dc <__aeabi_i2f>
 8001074:	4603      	mov	r3, r0
 8001076:	4619      	mov	r1, r3
 8001078:	4628      	mov	r0, r5
 800107a:	f7ff fd37 	bl	8000aec <__aeabi_fdiv>
 800107e:	4603      	mov	r3, r0
 8001080:	4619      	mov	r1, r3
 8001082:	4620      	mov	r0, r4
 8001084:	f7ff fc7e 	bl	8000984 <__aeabi_fmul>
 8001088:	4603      	mov	r3, r0
 800108a:	4618      	mov	r0, r3
 800108c:	f7ff faec 	bl	8000668 <__aeabi_f2d>
 8001090:	4602      	mov	r2, r0
 8001092:	460b      	mov	r3, r1
 8001094:	4610      	mov	r0, r2
 8001096:	4619      	mov	r1, r3
 8001098:	f004 fe8e 	bl	8005db8 <round>
 800109c:	4602      	mov	r2, r0
 800109e:	460b      	mov	r3, r1
 80010a0:	4610      	mov	r0, r2
 80010a2:	4619      	mov	r1, r3
 80010a4:	f7ff fb38 	bl	8000718 <__aeabi_d2iz>
 80010a8:	4603      	mov	r3, r0
 80010aa:	4a66      	ldr	r2, [pc, #408]	; (8001244 <balance+0x25c>)
 80010ac:	6013      	str	r3, [r2, #0]
		timeRed		= RED;
 80010ae:	4a63      	ldr	r2, [pc, #396]	; (800123c <balance+0x254>)
 80010b0:	68fb      	ldr	r3, [r7, #12]
 80010b2:	6013      	str	r3, [r2, #0]
	{
		timeRed		= round( (float)(GREEN * 1.0f) / (3 * 1.0f) ) * (float)(5 * 1.0f);
		timeYellow	= round( (float)(GREEN * 1.0f) / (3 * 1.0f) ) * (float)(2 * 1.0f);
		timeGreen	= GREEN;
	}
}
 80010b4:	e1a2      	b.n	80013fc <balance+0x414>
	else if(AMBER > timeYellow)
 80010b6:	4b62      	ldr	r3, [pc, #392]	; (8001240 <balance+0x258>)
 80010b8:	681b      	ldr	r3, [r3, #0]
 80010ba:	68ba      	ldr	r2, [r7, #8]
 80010bc:	429a      	cmp	r2, r3
 80010be:	dd5b      	ble.n	8001178 <balance+0x190>
		timeRed		= round( ( (float)(timeRed * 1.0f) * (float)( (AMBER * 1.0f) / (timeYellow * 1.0f) ) ) ) ;
 80010c0:	4b5e      	ldr	r3, [pc, #376]	; (800123c <balance+0x254>)
 80010c2:	681b      	ldr	r3, [r3, #0]
 80010c4:	4618      	mov	r0, r3
 80010c6:	f7ff fc09 	bl	80008dc <__aeabi_i2f>
 80010ca:	4604      	mov	r4, r0
 80010cc:	68b8      	ldr	r0, [r7, #8]
 80010ce:	f7ff fc05 	bl	80008dc <__aeabi_i2f>
 80010d2:	4605      	mov	r5, r0
 80010d4:	4b5a      	ldr	r3, [pc, #360]	; (8001240 <balance+0x258>)
 80010d6:	681b      	ldr	r3, [r3, #0]
 80010d8:	4618      	mov	r0, r3
 80010da:	f7ff fbff 	bl	80008dc <__aeabi_i2f>
 80010de:	4603      	mov	r3, r0
 80010e0:	4619      	mov	r1, r3
 80010e2:	4628      	mov	r0, r5
 80010e4:	f7ff fd02 	bl	8000aec <__aeabi_fdiv>
 80010e8:	4603      	mov	r3, r0
 80010ea:	4619      	mov	r1, r3
 80010ec:	4620      	mov	r0, r4
 80010ee:	f7ff fc49 	bl	8000984 <__aeabi_fmul>
 80010f2:	4603      	mov	r3, r0
 80010f4:	4618      	mov	r0, r3
 80010f6:	f7ff fab7 	bl	8000668 <__aeabi_f2d>
 80010fa:	4602      	mov	r2, r0
 80010fc:	460b      	mov	r3, r1
 80010fe:	4610      	mov	r0, r2
 8001100:	4619      	mov	r1, r3
 8001102:	f004 fe59 	bl	8005db8 <round>
 8001106:	4602      	mov	r2, r0
 8001108:	460b      	mov	r3, r1
 800110a:	4610      	mov	r0, r2
 800110c:	4619      	mov	r1, r3
 800110e:	f7ff fb03 	bl	8000718 <__aeabi_d2iz>
 8001112:	4603      	mov	r3, r0
 8001114:	4a49      	ldr	r2, [pc, #292]	; (800123c <balance+0x254>)
 8001116:	6013      	str	r3, [r2, #0]
		timeGreen	= round( ( (float)(timeGreen * 1.0f) * (float)( (AMBER * 1.0f) / (timeYellow * 1.0f) ) ) );
 8001118:	4b4a      	ldr	r3, [pc, #296]	; (8001244 <balance+0x25c>)
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	4618      	mov	r0, r3
 800111e:	f7ff fbdd 	bl	80008dc <__aeabi_i2f>
 8001122:	4604      	mov	r4, r0
 8001124:	68b8      	ldr	r0, [r7, #8]
 8001126:	f7ff fbd9 	bl	80008dc <__aeabi_i2f>
 800112a:	4605      	mov	r5, r0
 800112c:	4b44      	ldr	r3, [pc, #272]	; (8001240 <balance+0x258>)
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	4618      	mov	r0, r3
 8001132:	f7ff fbd3 	bl	80008dc <__aeabi_i2f>
 8001136:	4603      	mov	r3, r0
 8001138:	4619      	mov	r1, r3
 800113a:	4628      	mov	r0, r5
 800113c:	f7ff fcd6 	bl	8000aec <__aeabi_fdiv>
 8001140:	4603      	mov	r3, r0
 8001142:	4619      	mov	r1, r3
 8001144:	4620      	mov	r0, r4
 8001146:	f7ff fc1d 	bl	8000984 <__aeabi_fmul>
 800114a:	4603      	mov	r3, r0
 800114c:	4618      	mov	r0, r3
 800114e:	f7ff fa8b 	bl	8000668 <__aeabi_f2d>
 8001152:	4602      	mov	r2, r0
 8001154:	460b      	mov	r3, r1
 8001156:	4610      	mov	r0, r2
 8001158:	4619      	mov	r1, r3
 800115a:	f004 fe2d 	bl	8005db8 <round>
 800115e:	4602      	mov	r2, r0
 8001160:	460b      	mov	r3, r1
 8001162:	4610      	mov	r0, r2
 8001164:	4619      	mov	r1, r3
 8001166:	f7ff fad7 	bl	8000718 <__aeabi_d2iz>
 800116a:	4603      	mov	r3, r0
 800116c:	4a35      	ldr	r2, [pc, #212]	; (8001244 <balance+0x25c>)
 800116e:	6013      	str	r3, [r2, #0]
		timeYellow	= AMBER;
 8001170:	4a33      	ldr	r2, [pc, #204]	; (8001240 <balance+0x258>)
 8001172:	68bb      	ldr	r3, [r7, #8]
 8001174:	6013      	str	r3, [r2, #0]
}
 8001176:	e141      	b.n	80013fc <balance+0x414>
	else if(GREEN > timeGreen)
 8001178:	4b32      	ldr	r3, [pc, #200]	; (8001244 <balance+0x25c>)
 800117a:	681b      	ldr	r3, [r3, #0]
 800117c:	687a      	ldr	r2, [r7, #4]
 800117e:	429a      	cmp	r2, r3
 8001180:	dd62      	ble.n	8001248 <balance+0x260>
		timeRed		= round( ( (float)(timeRed * 1.0f) * (float)( (GREEN * 1.0f) / (timeGreen * 1.0f) ) ) );
 8001182:	4b2e      	ldr	r3, [pc, #184]	; (800123c <balance+0x254>)
 8001184:	681b      	ldr	r3, [r3, #0]
 8001186:	4618      	mov	r0, r3
 8001188:	f7ff fba8 	bl	80008dc <__aeabi_i2f>
 800118c:	4604      	mov	r4, r0
 800118e:	6878      	ldr	r0, [r7, #4]
 8001190:	f7ff fba4 	bl	80008dc <__aeabi_i2f>
 8001194:	4605      	mov	r5, r0
 8001196:	4b2b      	ldr	r3, [pc, #172]	; (8001244 <balance+0x25c>)
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	4618      	mov	r0, r3
 800119c:	f7ff fb9e 	bl	80008dc <__aeabi_i2f>
 80011a0:	4603      	mov	r3, r0
 80011a2:	4619      	mov	r1, r3
 80011a4:	4628      	mov	r0, r5
 80011a6:	f7ff fca1 	bl	8000aec <__aeabi_fdiv>
 80011aa:	4603      	mov	r3, r0
 80011ac:	4619      	mov	r1, r3
 80011ae:	4620      	mov	r0, r4
 80011b0:	f7ff fbe8 	bl	8000984 <__aeabi_fmul>
 80011b4:	4603      	mov	r3, r0
 80011b6:	4618      	mov	r0, r3
 80011b8:	f7ff fa56 	bl	8000668 <__aeabi_f2d>
 80011bc:	4602      	mov	r2, r0
 80011be:	460b      	mov	r3, r1
 80011c0:	4610      	mov	r0, r2
 80011c2:	4619      	mov	r1, r3
 80011c4:	f004 fdf8 	bl	8005db8 <round>
 80011c8:	4602      	mov	r2, r0
 80011ca:	460b      	mov	r3, r1
 80011cc:	4610      	mov	r0, r2
 80011ce:	4619      	mov	r1, r3
 80011d0:	f7ff faa2 	bl	8000718 <__aeabi_d2iz>
 80011d4:	4603      	mov	r3, r0
 80011d6:	4a19      	ldr	r2, [pc, #100]	; (800123c <balance+0x254>)
 80011d8:	6013      	str	r3, [r2, #0]
		timeYellow	= round( ( (float)(timeYellow * 1.0f) * (float)( (GREEN * 1.0f) / (timeGreen * 1.0f) ) ) );
 80011da:	4b19      	ldr	r3, [pc, #100]	; (8001240 <balance+0x258>)
 80011dc:	681b      	ldr	r3, [r3, #0]
 80011de:	4618      	mov	r0, r3
 80011e0:	f7ff fb7c 	bl	80008dc <__aeabi_i2f>
 80011e4:	4604      	mov	r4, r0
 80011e6:	6878      	ldr	r0, [r7, #4]
 80011e8:	f7ff fb78 	bl	80008dc <__aeabi_i2f>
 80011ec:	4605      	mov	r5, r0
 80011ee:	4b15      	ldr	r3, [pc, #84]	; (8001244 <balance+0x25c>)
 80011f0:	681b      	ldr	r3, [r3, #0]
 80011f2:	4618      	mov	r0, r3
 80011f4:	f7ff fb72 	bl	80008dc <__aeabi_i2f>
 80011f8:	4603      	mov	r3, r0
 80011fa:	4619      	mov	r1, r3
 80011fc:	4628      	mov	r0, r5
 80011fe:	f7ff fc75 	bl	8000aec <__aeabi_fdiv>
 8001202:	4603      	mov	r3, r0
 8001204:	4619      	mov	r1, r3
 8001206:	4620      	mov	r0, r4
 8001208:	f7ff fbbc 	bl	8000984 <__aeabi_fmul>
 800120c:	4603      	mov	r3, r0
 800120e:	4618      	mov	r0, r3
 8001210:	f7ff fa2a 	bl	8000668 <__aeabi_f2d>
 8001214:	4602      	mov	r2, r0
 8001216:	460b      	mov	r3, r1
 8001218:	4610      	mov	r0, r2
 800121a:	4619      	mov	r1, r3
 800121c:	f004 fdcc 	bl	8005db8 <round>
 8001220:	4602      	mov	r2, r0
 8001222:	460b      	mov	r3, r1
 8001224:	4610      	mov	r0, r2
 8001226:	4619      	mov	r1, r3
 8001228:	f7ff fa76 	bl	8000718 <__aeabi_d2iz>
 800122c:	4603      	mov	r3, r0
 800122e:	4a04      	ldr	r2, [pc, #16]	; (8001240 <balance+0x258>)
 8001230:	6013      	str	r3, [r2, #0]
		timeGreen	= GREEN;
 8001232:	4a04      	ldr	r2, [pc, #16]	; (8001244 <balance+0x25c>)
 8001234:	687b      	ldr	r3, [r7, #4]
 8001236:	6013      	str	r3, [r2, #0]
}
 8001238:	e0e0      	b.n	80013fc <balance+0x414>
 800123a:	bf00      	nop
 800123c:	20000024 	.word	0x20000024
 8001240:	20000028 	.word	0x20000028
 8001244:	2000002c 	.word	0x2000002c
	else if(RED < timeRed)
 8001248:	4b6e      	ldr	r3, [pc, #440]	; (8001404 <balance+0x41c>)
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	68fa      	ldr	r2, [r7, #12]
 800124e:	429a      	cmp	r2, r3
 8001250:	da42      	bge.n	80012d8 <balance+0x2f0>
		timeYellow	= round( (float)(RED * 1.0f) / (5 * 1.0f) ) * (float)(2 * 1.0f);
 8001252:	68f8      	ldr	r0, [r7, #12]
 8001254:	f7ff fb42 	bl	80008dc <__aeabi_i2f>
 8001258:	4603      	mov	r3, r0
 800125a:	496b      	ldr	r1, [pc, #428]	; (8001408 <balance+0x420>)
 800125c:	4618      	mov	r0, r3
 800125e:	f7ff fc45 	bl	8000aec <__aeabi_fdiv>
 8001262:	4603      	mov	r3, r0
 8001264:	4618      	mov	r0, r3
 8001266:	f7ff f9ff 	bl	8000668 <__aeabi_f2d>
 800126a:	4602      	mov	r2, r0
 800126c:	460b      	mov	r3, r1
 800126e:	4610      	mov	r0, r2
 8001270:	4619      	mov	r1, r3
 8001272:	f004 fda1 	bl	8005db8 <round>
 8001276:	4602      	mov	r2, r0
 8001278:	460b      	mov	r3, r1
 800127a:	f7ff f897 	bl	80003ac <__adddf3>
 800127e:	4602      	mov	r2, r0
 8001280:	460b      	mov	r3, r1
 8001282:	4610      	mov	r0, r2
 8001284:	4619      	mov	r1, r3
 8001286:	f7ff fa47 	bl	8000718 <__aeabi_d2iz>
 800128a:	4603      	mov	r3, r0
 800128c:	4a5f      	ldr	r2, [pc, #380]	; (800140c <balance+0x424>)
 800128e:	6013      	str	r3, [r2, #0]
		timeGreen	= round( (float)(RED * 1.0f) / (5 * 1.0f) ) * (float)(3 * 1.0f);
 8001290:	68f8      	ldr	r0, [r7, #12]
 8001292:	f7ff fb23 	bl	80008dc <__aeabi_i2f>
 8001296:	4603      	mov	r3, r0
 8001298:	495b      	ldr	r1, [pc, #364]	; (8001408 <balance+0x420>)
 800129a:	4618      	mov	r0, r3
 800129c:	f7ff fc26 	bl	8000aec <__aeabi_fdiv>
 80012a0:	4603      	mov	r3, r0
 80012a2:	4618      	mov	r0, r3
 80012a4:	f7ff f9e0 	bl	8000668 <__aeabi_f2d>
 80012a8:	4602      	mov	r2, r0
 80012aa:	460b      	mov	r3, r1
 80012ac:	4610      	mov	r0, r2
 80012ae:	4619      	mov	r1, r3
 80012b0:	f004 fd82 	bl	8005db8 <round>
 80012b4:	f04f 0200 	mov.w	r2, #0
 80012b8:	4b55      	ldr	r3, [pc, #340]	; (8001410 <balance+0x428>)
 80012ba:	f7fe ff47 	bl	800014c <__aeabi_dmul>
 80012be:	4602      	mov	r2, r0
 80012c0:	460b      	mov	r3, r1
 80012c2:	4610      	mov	r0, r2
 80012c4:	4619      	mov	r1, r3
 80012c6:	f7ff fa27 	bl	8000718 <__aeabi_d2iz>
 80012ca:	4603      	mov	r3, r0
 80012cc:	4a51      	ldr	r2, [pc, #324]	; (8001414 <balance+0x42c>)
 80012ce:	6013      	str	r3, [r2, #0]
		timeRed		= RED;
 80012d0:	4a4c      	ldr	r2, [pc, #304]	; (8001404 <balance+0x41c>)
 80012d2:	68fb      	ldr	r3, [r7, #12]
 80012d4:	6013      	str	r3, [r2, #0]
}
 80012d6:	e091      	b.n	80013fc <balance+0x414>
	else if(AMBER < timeYellow)
 80012d8:	4b4c      	ldr	r3, [pc, #304]	; (800140c <balance+0x424>)
 80012da:	681b      	ldr	r3, [r3, #0]
 80012dc:	68ba      	ldr	r2, [r7, #8]
 80012de:	429a      	cmp	r2, r3
 80012e0:	da45      	bge.n	800136e <balance+0x386>
		timeRed		= round( (float)(AMBER * 1.0f) / (2 * 1.0f) ) * (float)(5 * 1.0f);
 80012e2:	68b8      	ldr	r0, [r7, #8]
 80012e4:	f7ff fafa 	bl	80008dc <__aeabi_i2f>
 80012e8:	4603      	mov	r3, r0
 80012ea:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80012ee:	4618      	mov	r0, r3
 80012f0:	f7ff fbfc 	bl	8000aec <__aeabi_fdiv>
 80012f4:	4603      	mov	r3, r0
 80012f6:	4618      	mov	r0, r3
 80012f8:	f7ff f9b6 	bl	8000668 <__aeabi_f2d>
 80012fc:	4602      	mov	r2, r0
 80012fe:	460b      	mov	r3, r1
 8001300:	4610      	mov	r0, r2
 8001302:	4619      	mov	r1, r3
 8001304:	f004 fd58 	bl	8005db8 <round>
 8001308:	f04f 0200 	mov.w	r2, #0
 800130c:	4b42      	ldr	r3, [pc, #264]	; (8001418 <balance+0x430>)
 800130e:	f7fe ff1d 	bl	800014c <__aeabi_dmul>
 8001312:	4602      	mov	r2, r0
 8001314:	460b      	mov	r3, r1
 8001316:	4610      	mov	r0, r2
 8001318:	4619      	mov	r1, r3
 800131a:	f7ff f9fd 	bl	8000718 <__aeabi_d2iz>
 800131e:	4603      	mov	r3, r0
 8001320:	4a38      	ldr	r2, [pc, #224]	; (8001404 <balance+0x41c>)
 8001322:	6013      	str	r3, [r2, #0]
		timeGreen	= round( (float)(AMBER * 1.0f) / (2 * 1.0f) ) * (float)(3 * 1.0f);
 8001324:	68b8      	ldr	r0, [r7, #8]
 8001326:	f7ff fad9 	bl	80008dc <__aeabi_i2f>
 800132a:	4603      	mov	r3, r0
 800132c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001330:	4618      	mov	r0, r3
 8001332:	f7ff fbdb 	bl	8000aec <__aeabi_fdiv>
 8001336:	4603      	mov	r3, r0
 8001338:	4618      	mov	r0, r3
 800133a:	f7ff f995 	bl	8000668 <__aeabi_f2d>
 800133e:	4602      	mov	r2, r0
 8001340:	460b      	mov	r3, r1
 8001342:	4610      	mov	r0, r2
 8001344:	4619      	mov	r1, r3
 8001346:	f004 fd37 	bl	8005db8 <round>
 800134a:	f04f 0200 	mov.w	r2, #0
 800134e:	4b30      	ldr	r3, [pc, #192]	; (8001410 <balance+0x428>)
 8001350:	f7fe fefc 	bl	800014c <__aeabi_dmul>
 8001354:	4602      	mov	r2, r0
 8001356:	460b      	mov	r3, r1
 8001358:	4610      	mov	r0, r2
 800135a:	4619      	mov	r1, r3
 800135c:	f7ff f9dc 	bl	8000718 <__aeabi_d2iz>
 8001360:	4603      	mov	r3, r0
 8001362:	4a2c      	ldr	r2, [pc, #176]	; (8001414 <balance+0x42c>)
 8001364:	6013      	str	r3, [r2, #0]
		timeYellow	= AMBER;
 8001366:	4a29      	ldr	r2, [pc, #164]	; (800140c <balance+0x424>)
 8001368:	68bb      	ldr	r3, [r7, #8]
 800136a:	6013      	str	r3, [r2, #0]
}
 800136c:	e046      	b.n	80013fc <balance+0x414>
	else if(GREEN < timeGreen)
 800136e:	4b29      	ldr	r3, [pc, #164]	; (8001414 <balance+0x42c>)
 8001370:	681b      	ldr	r3, [r3, #0]
 8001372:	687a      	ldr	r2, [r7, #4]
 8001374:	429a      	cmp	r2, r3
 8001376:	da41      	bge.n	80013fc <balance+0x414>
		timeRed		= round( (float)(GREEN * 1.0f) / (3 * 1.0f) ) * (float)(5 * 1.0f);
 8001378:	6878      	ldr	r0, [r7, #4]
 800137a:	f7ff faaf 	bl	80008dc <__aeabi_i2f>
 800137e:	4603      	mov	r3, r0
 8001380:	4926      	ldr	r1, [pc, #152]	; (800141c <balance+0x434>)
 8001382:	4618      	mov	r0, r3
 8001384:	f7ff fbb2 	bl	8000aec <__aeabi_fdiv>
 8001388:	4603      	mov	r3, r0
 800138a:	4618      	mov	r0, r3
 800138c:	f7ff f96c 	bl	8000668 <__aeabi_f2d>
 8001390:	4602      	mov	r2, r0
 8001392:	460b      	mov	r3, r1
 8001394:	4610      	mov	r0, r2
 8001396:	4619      	mov	r1, r3
 8001398:	f004 fd0e 	bl	8005db8 <round>
 800139c:	f04f 0200 	mov.w	r2, #0
 80013a0:	4b1d      	ldr	r3, [pc, #116]	; (8001418 <balance+0x430>)
 80013a2:	f7fe fed3 	bl	800014c <__aeabi_dmul>
 80013a6:	4602      	mov	r2, r0
 80013a8:	460b      	mov	r3, r1
 80013aa:	4610      	mov	r0, r2
 80013ac:	4619      	mov	r1, r3
 80013ae:	f7ff f9b3 	bl	8000718 <__aeabi_d2iz>
 80013b2:	4603      	mov	r3, r0
 80013b4:	4a13      	ldr	r2, [pc, #76]	; (8001404 <balance+0x41c>)
 80013b6:	6013      	str	r3, [r2, #0]
		timeYellow	= round( (float)(GREEN * 1.0f) / (3 * 1.0f) ) * (float)(2 * 1.0f);
 80013b8:	6878      	ldr	r0, [r7, #4]
 80013ba:	f7ff fa8f 	bl	80008dc <__aeabi_i2f>
 80013be:	4603      	mov	r3, r0
 80013c0:	4916      	ldr	r1, [pc, #88]	; (800141c <balance+0x434>)
 80013c2:	4618      	mov	r0, r3
 80013c4:	f7ff fb92 	bl	8000aec <__aeabi_fdiv>
 80013c8:	4603      	mov	r3, r0
 80013ca:	4618      	mov	r0, r3
 80013cc:	f7ff f94c 	bl	8000668 <__aeabi_f2d>
 80013d0:	4602      	mov	r2, r0
 80013d2:	460b      	mov	r3, r1
 80013d4:	4610      	mov	r0, r2
 80013d6:	4619      	mov	r1, r3
 80013d8:	f004 fcee 	bl	8005db8 <round>
 80013dc:	4602      	mov	r2, r0
 80013de:	460b      	mov	r3, r1
 80013e0:	f7fe ffe4 	bl	80003ac <__adddf3>
 80013e4:	4602      	mov	r2, r0
 80013e6:	460b      	mov	r3, r1
 80013e8:	4610      	mov	r0, r2
 80013ea:	4619      	mov	r1, r3
 80013ec:	f7ff f994 	bl	8000718 <__aeabi_d2iz>
 80013f0:	4603      	mov	r3, r0
 80013f2:	4a06      	ldr	r2, [pc, #24]	; (800140c <balance+0x424>)
 80013f4:	6013      	str	r3, [r2, #0]
		timeGreen	= GREEN;
 80013f6:	4a07      	ldr	r2, [pc, #28]	; (8001414 <balance+0x42c>)
 80013f8:	687b      	ldr	r3, [r7, #4]
 80013fa:	6013      	str	r3, [r2, #0]
}
 80013fc:	bf00      	nop
 80013fe:	3710      	adds	r7, #16
 8001400:	46bd      	mov	sp, r7
 8001402:	bdb0      	pop	{r4, r5, r7, pc}
 8001404:	20000024 	.word	0x20000024
 8001408:	40a00000 	.word	0x40a00000
 800140c:	20000028 	.word	0x20000028
 8001410:	40080000 	.word	0x40080000
 8001414:	2000002c 	.word	0x2000002c
 8001418:	40140000 	.word	0x40140000
 800141c:	40400000 	.word	0x40400000

08001420 <normalState>:

void normalState(void)
{
 8001420:	b580      	push	{r7, lr}
 8001422:	b08e      	sub	sp, #56	; 0x38
 8001424:	af00      	add	r7, sp, #0
	char str[50];
	switch(status)
 8001426:	4bae      	ldr	r3, [pc, #696]	; (80016e0 <normalState+0x2c0>)
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	2b0c      	cmp	r3, #12
 800142c:	f200 84e8 	bhi.w	8001e00 <normalState+0x9e0>
 8001430:	a201      	add	r2, pc, #4	; (adr r2, 8001438 <normalState+0x18>)
 8001432:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001436:	bf00      	nop
 8001438:	0800146d 	.word	0x0800146d
 800143c:	080014a1 	.word	0x080014a1
 8001440:	080015bb 	.word	0x080015bb
 8001444:	08001711 	.word	0x08001711
 8001448:	080018bd 	.word	0x080018bd
 800144c:	08001e01 	.word	0x08001e01
 8001450:	08001e01 	.word	0x08001e01
 8001454:	08001e01 	.word	0x08001e01
 8001458:	08001e01 	.word	0x08001e01
 800145c:	08001e01 	.word	0x08001e01
 8001460:	08001a5b 	.word	0x08001a5b
 8001464:	08001bb9 	.word	0x08001bb9
 8001468:	08001cdd 	.word	0x08001cdd
	{
	case INIT:
		status = RedGreen;
 800146c:	4b9c      	ldr	r3, [pc, #624]	; (80016e0 <normalState+0x2c0>)
 800146e:	2201      	movs	r2, #1
 8001470:	601a      	str	r2, [r3, #0]

		setTimer(0, timeGreen * 100);
 8001472:	4b9c      	ldr	r3, [pc, #624]	; (80016e4 <normalState+0x2c4>)
 8001474:	681b      	ldr	r3, [r3, #0]
 8001476:	2264      	movs	r2, #100	; 0x64
 8001478:	fb02 f303 	mul.w	r3, r2, r3
 800147c:	4619      	mov	r1, r3
 800147e:	2000      	movs	r0, #0
 8001480:	f001 f896 	bl	80025b0 <setTimer>
		setTimer(1, 1);
 8001484:	2101      	movs	r1, #1
 8001486:	2001      	movs	r0, #1
 8001488:	f001 f892 	bl	80025b0 <setTimer>

		time1 = timeRed;
 800148c:	4b96      	ldr	r3, [pc, #600]	; (80016e8 <normalState+0x2c8>)
 800148e:	681b      	ldr	r3, [r3, #0]
 8001490:	4a96      	ldr	r2, [pc, #600]	; (80016ec <normalState+0x2cc>)
 8001492:	6013      	str	r3, [r2, #0]
		time2 = timeGreen;
 8001494:	4b93      	ldr	r3, [pc, #588]	; (80016e4 <normalState+0x2c4>)
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	4a95      	ldr	r2, [pc, #596]	; (80016f0 <normalState+0x2d0>)
 800149a:	6013      	str	r3, [r2, #0]
		break;
 800149c:	f000 bcbf 	b.w	8001e1e <normalState+0x9fe>

	case RedGreen:
		displayRed1();
 80014a0:	f7ff fcac 	bl	8000dfc <displayRed1>
		displayGreen2();
 80014a4:	f7ff fd06 	bl	8000eb4 <displayGreen2>

		if(isTimerUp(1) == 1)
 80014a8:	2001      	movs	r0, #1
 80014aa:	f001 f85d 	bl	8002568 <isTimerUp>
 80014ae:	4603      	mov	r3, r0
 80014b0:	2b01      	cmp	r3, #1
 80014b2:	d12b      	bne.n	800150c <normalState+0xec>
		{	// Update Time
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED1 - LED_RED:   %d#\r\n",time1), 500);
 80014b4:	4b8d      	ldr	r3, [pc, #564]	; (80016ec <normalState+0x2cc>)
 80014b6:	681a      	ldr	r2, [r3, #0]
 80014b8:	1d3b      	adds	r3, r7, #4
 80014ba:	498e      	ldr	r1, [pc, #568]	; (80016f4 <normalState+0x2d4>)
 80014bc:	4618      	mov	r0, r3
 80014be:	f004 f8f7 	bl	80056b0 <siprintf>
 80014c2:	4603      	mov	r3, r0
 80014c4:	b29a      	uxth	r2, r3
 80014c6:	1d39      	adds	r1, r7, #4
 80014c8:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80014cc:	488a      	ldr	r0, [pc, #552]	; (80016f8 <normalState+0x2d8>)
 80014ce:	f003 fa23 	bl	8004918 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED2 - LED_GREEN: %d#\r\n\n\n",time2), 500);
 80014d2:	4b87      	ldr	r3, [pc, #540]	; (80016f0 <normalState+0x2d0>)
 80014d4:	681a      	ldr	r2, [r3, #0]
 80014d6:	1d3b      	adds	r3, r7, #4
 80014d8:	4988      	ldr	r1, [pc, #544]	; (80016fc <normalState+0x2dc>)
 80014da:	4618      	mov	r0, r3
 80014dc:	f004 f8e8 	bl	80056b0 <siprintf>
 80014e0:	4603      	mov	r3, r0
 80014e2:	b29a      	uxth	r2, r3
 80014e4:	1d39      	adds	r1, r7, #4
 80014e6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80014ea:	4883      	ldr	r0, [pc, #524]	; (80016f8 <normalState+0x2d8>)
 80014ec:	f003 fa14 	bl	8004918 <HAL_UART_Transmit>

			time1--;
 80014f0:	4b7e      	ldr	r3, [pc, #504]	; (80016ec <normalState+0x2cc>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	3b01      	subs	r3, #1
 80014f6:	4a7d      	ldr	r2, [pc, #500]	; (80016ec <normalState+0x2cc>)
 80014f8:	6013      	str	r3, [r2, #0]
			time2--;
 80014fa:	4b7d      	ldr	r3, [pc, #500]	; (80016f0 <normalState+0x2d0>)
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	3b01      	subs	r3, #1
 8001500:	4a7b      	ldr	r2, [pc, #492]	; (80016f0 <normalState+0x2d0>)
 8001502:	6013      	str	r3, [r2, #0]

			setTimer(1, 100);
 8001504:	2164      	movs	r1, #100	; 0x64
 8001506:	2001      	movs	r0, #1
 8001508:	f001 f852 	bl	80025b0 <setTimer>
		}

		if(isTimerUp(0) == 1)
 800150c:	2000      	movs	r0, #0
 800150e:	f001 f82b 	bl	8002568 <isTimerUp>
 8001512:	4603      	mov	r3, r0
 8001514:	2b01      	cmp	r3, #1
 8001516:	d117      	bne.n	8001548 <normalState+0x128>
		{	// Transit State
			status = RedAmber;
 8001518:	4b71      	ldr	r3, [pc, #452]	; (80016e0 <normalState+0x2c0>)
 800151a:	2202      	movs	r2, #2
 800151c:	601a      	str	r2, [r3, #0]

			setTimer(0, timeYellow * 100);
 800151e:	4b78      	ldr	r3, [pc, #480]	; (8001700 <normalState+0x2e0>)
 8001520:	681b      	ldr	r3, [r3, #0]
 8001522:	2264      	movs	r2, #100	; 0x64
 8001524:	fb02 f303 	mul.w	r3, r2, r3
 8001528:	4619      	mov	r1, r3
 800152a:	2000      	movs	r0, #0
 800152c:	f001 f840 	bl	80025b0 <setTimer>
			setTimer(1, 1);
 8001530:	2101      	movs	r1, #1
 8001532:	2001      	movs	r0, #1
 8001534:	f001 f83c 	bl	80025b0 <setTimer>

			time1 = timeYellow;
 8001538:	4b71      	ldr	r3, [pc, #452]	; (8001700 <normalState+0x2e0>)
 800153a:	681b      	ldr	r3, [r3, #0]
 800153c:	4a6b      	ldr	r2, [pc, #428]	; (80016ec <normalState+0x2cc>)
 800153e:	6013      	str	r3, [r2, #0]
			time2 = timeYellow;
 8001540:	4b6f      	ldr	r3, [pc, #444]	; (8001700 <normalState+0x2e0>)
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	4a6a      	ldr	r2, [pc, #424]	; (80016f0 <normalState+0x2d0>)
 8001546:	6013      	str	r3, [r2, #0]
		}


		if(Is_Button_Pressed(1))
 8001548:	2001      	movs	r0, #1
 800154a:	f7ff fc01 	bl	8000d50 <Is_Button_Pressed>
 800154e:	4603      	mov	r3, r0
 8001550:	2b00      	cmp	r3, #0
 8001552:	d01a      	beq.n	800158a <normalState+0x16a>
		{
			status = ManRed;
 8001554:	4b62      	ldr	r3, [pc, #392]	; (80016e0 <normalState+0x2c0>)
 8001556:	220a      	movs	r2, #10
 8001558:	601a      	str	r2, [r3, #0]

			time1 = timeRed;
 800155a:	4b63      	ldr	r3, [pc, #396]	; (80016e8 <normalState+0x2c8>)
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	4a63      	ldr	r2, [pc, #396]	; (80016ec <normalState+0x2cc>)
 8001560:	6013      	str	r3, [r2, #0]
			time2 = 2;
 8001562:	4b63      	ldr	r3, [pc, #396]	; (80016f0 <normalState+0x2d0>)
 8001564:	2202      	movs	r2, #2
 8001566:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 8001568:	f7ff fc24 	bl	8000db4 <clearAllLed1>
			clearAllLed2();
 800156c:	f7ff fc36 	bl	8000ddc <clearAllLed2>

			setTimer(1, 100);
 8001570:	2164      	movs	r1, #100	; 0x64
 8001572:	2001      	movs	r0, #1
 8001574:	f001 f81c 	bl	80025b0 <setTimer>
			setTimer(2, 25);
 8001578:	2119      	movs	r1, #25
 800157a:	2002      	movs	r0, #2
 800157c:	f001 f818 	bl	80025b0 <setTimer>
			setTimer(7,500);
 8001580:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001584:	2007      	movs	r0, #7
 8001586:	f001 f813 	bl	80025b0 <setTimer>
		}
		if(Is_Button_Pressed(0))
 800158a:	2000      	movs	r0, #0
 800158c:	f7ff fbe0 	bl	8000d50 <Is_Button_Pressed>
 8001590:	4603      	mov	r3, r0
 8001592:	2b00      	cmp	r3, #0
 8001594:	f000 8436 	beq.w	8001e04 <normalState+0x9e4>
		{
			pedestrian_flag = Pedestrian_RED;
 8001598:	4b5a      	ldr	r3, [pc, #360]	; (8001704 <normalState+0x2e4>)
 800159a:	220f      	movs	r2, #15
 800159c:	601a      	str	r2, [r3, #0]
			setTimer(3, (timeRed + timeGreen) * 100);
 800159e:	4b52      	ldr	r3, [pc, #328]	; (80016e8 <normalState+0x2c8>)
 80015a0:	681a      	ldr	r2, [r3, #0]
 80015a2:	4b50      	ldr	r3, [pc, #320]	; (80016e4 <normalState+0x2c4>)
 80015a4:	681b      	ldr	r3, [r3, #0]
 80015a6:	4413      	add	r3, r2
 80015a8:	2264      	movs	r2, #100	; 0x64
 80015aa:	fb02 f303 	mul.w	r3, r2, r3
 80015ae:	4619      	mov	r1, r3
 80015b0:	2003      	movs	r0, #3
 80015b2:	f000 fffd 	bl	80025b0 <setTimer>
		}
		break;
 80015b6:	f000 bc25 	b.w	8001e04 <normalState+0x9e4>

	case RedAmber:
		displayRed1();
 80015ba:	f7ff fc1f 	bl	8000dfc <displayRed1>
		displayYellow2();
 80015be:	f7ff fc69 	bl	8000e94 <displayYellow2>

		if(isTimerUp(1) == 1)
 80015c2:	2001      	movs	r0, #1
 80015c4:	f000 ffd0 	bl	8002568 <isTimerUp>
 80015c8:	4603      	mov	r3, r0
 80015ca:	2b01      	cmp	r3, #1
 80015cc:	d12b      	bne.n	8001626 <normalState+0x206>
		{	// Update Time
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED1 - LED_RED:    %d#\r\n",time1), 500);
 80015ce:	4b47      	ldr	r3, [pc, #284]	; (80016ec <normalState+0x2cc>)
 80015d0:	681a      	ldr	r2, [r3, #0]
 80015d2:	1d3b      	adds	r3, r7, #4
 80015d4:	494c      	ldr	r1, [pc, #304]	; (8001708 <normalState+0x2e8>)
 80015d6:	4618      	mov	r0, r3
 80015d8:	f004 f86a 	bl	80056b0 <siprintf>
 80015dc:	4603      	mov	r3, r0
 80015de:	b29a      	uxth	r2, r3
 80015e0:	1d39      	adds	r1, r7, #4
 80015e2:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80015e6:	4844      	ldr	r0, [pc, #272]	; (80016f8 <normalState+0x2d8>)
 80015e8:	f003 f996 	bl	8004918 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED12 - LED_AMBER: %d#\r\n\n\n",time2), 500);
 80015ec:	4b40      	ldr	r3, [pc, #256]	; (80016f0 <normalState+0x2d0>)
 80015ee:	681a      	ldr	r2, [r3, #0]
 80015f0:	1d3b      	adds	r3, r7, #4
 80015f2:	4946      	ldr	r1, [pc, #280]	; (800170c <normalState+0x2ec>)
 80015f4:	4618      	mov	r0, r3
 80015f6:	f004 f85b 	bl	80056b0 <siprintf>
 80015fa:	4603      	mov	r3, r0
 80015fc:	b29a      	uxth	r2, r3
 80015fe:	1d39      	adds	r1, r7, #4
 8001600:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001604:	483c      	ldr	r0, [pc, #240]	; (80016f8 <normalState+0x2d8>)
 8001606:	f003 f987 	bl	8004918 <HAL_UART_Transmit>

			time1--;
 800160a:	4b38      	ldr	r3, [pc, #224]	; (80016ec <normalState+0x2cc>)
 800160c:	681b      	ldr	r3, [r3, #0]
 800160e:	3b01      	subs	r3, #1
 8001610:	4a36      	ldr	r2, [pc, #216]	; (80016ec <normalState+0x2cc>)
 8001612:	6013      	str	r3, [r2, #0]
			time2--;
 8001614:	4b36      	ldr	r3, [pc, #216]	; (80016f0 <normalState+0x2d0>)
 8001616:	681b      	ldr	r3, [r3, #0]
 8001618:	3b01      	subs	r3, #1
 800161a:	4a35      	ldr	r2, [pc, #212]	; (80016f0 <normalState+0x2d0>)
 800161c:	6013      	str	r3, [r2, #0]

			setTimer(1, 100);
 800161e:	2164      	movs	r1, #100	; 0x64
 8001620:	2001      	movs	r0, #1
 8001622:	f000 ffc5 	bl	80025b0 <setTimer>
		}

		if(isTimerUp(0)==1)
 8001626:	2000      	movs	r0, #0
 8001628:	f000 ff9e 	bl	8002568 <isTimerUp>
 800162c:	4603      	mov	r3, r0
 800162e:	2b01      	cmp	r3, #1
 8001630:	d11e      	bne.n	8001670 <normalState+0x250>
		{	// Transit State
			status = GreenRed;
 8001632:	4b2b      	ldr	r3, [pc, #172]	; (80016e0 <normalState+0x2c0>)
 8001634:	2203      	movs	r2, #3
 8001636:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8001638:	4b2a      	ldr	r3, [pc, #168]	; (80016e4 <normalState+0x2c4>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	2264      	movs	r2, #100	; 0x64
 800163e:	fb02 f303 	mul.w	r3, r2, r3
 8001642:	4619      	mov	r1, r3
 8001644:	2000      	movs	r0, #0
 8001646:	f000 ffb3 	bl	80025b0 <setTimer>
			setTimer(1, 1);
 800164a:	2101      	movs	r1, #1
 800164c:	2001      	movs	r0, #1
 800164e:	f000 ffaf 	bl	80025b0 <setTimer>

			time1 = timeGreen;
 8001652:	4b24      	ldr	r3, [pc, #144]	; (80016e4 <normalState+0x2c4>)
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	4a25      	ldr	r2, [pc, #148]	; (80016ec <normalState+0x2cc>)
 8001658:	6013      	str	r3, [r2, #0]
			time2 = timeRed;
 800165a:	4b23      	ldr	r3, [pc, #140]	; (80016e8 <normalState+0x2c8>)
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	4a24      	ldr	r2, [pc, #144]	; (80016f0 <normalState+0x2d0>)
 8001660:	6013      	str	r3, [r2, #0]

			if(pedestrian_flag == Pedestrian_RED)
 8001662:	4b28      	ldr	r3, [pc, #160]	; (8001704 <normalState+0x2e4>)
 8001664:	681b      	ldr	r3, [r3, #0]
 8001666:	2b0f      	cmp	r3, #15
 8001668:	d102      	bne.n	8001670 <normalState+0x250>
				pedestrian_flag = Pedestrian_GREEN;
 800166a:	4b26      	ldr	r3, [pc, #152]	; (8001704 <normalState+0x2e4>)
 800166c:	2210      	movs	r2, #16
 800166e:	601a      	str	r2, [r3, #0]
		}


		if(Is_Button_Pressed(1))
 8001670:	2001      	movs	r0, #1
 8001672:	f7ff fb6d 	bl	8000d50 <Is_Button_Pressed>
 8001676:	4603      	mov	r3, r0
 8001678:	2b00      	cmp	r3, #0
 800167a:	d01a      	beq.n	80016b2 <normalState+0x292>
		{
			status = ManRed;
 800167c:	4b18      	ldr	r3, [pc, #96]	; (80016e0 <normalState+0x2c0>)
 800167e:	220a      	movs	r2, #10
 8001680:	601a      	str	r2, [r3, #0]

			time1 = timeRed;
 8001682:	4b19      	ldr	r3, [pc, #100]	; (80016e8 <normalState+0x2c8>)
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	4a19      	ldr	r2, [pc, #100]	; (80016ec <normalState+0x2cc>)
 8001688:	6013      	str	r3, [r2, #0]
			time2 = 2;
 800168a:	4b19      	ldr	r3, [pc, #100]	; (80016f0 <normalState+0x2d0>)
 800168c:	2202      	movs	r2, #2
 800168e:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 8001690:	f7ff fb90 	bl	8000db4 <clearAllLed1>
			clearAllLed2();
 8001694:	f7ff fba2 	bl	8000ddc <clearAllLed2>

			setTimer(1, 100);
 8001698:	2164      	movs	r1, #100	; 0x64
 800169a:	2001      	movs	r0, #1
 800169c:	f000 ff88 	bl	80025b0 <setTimer>
			setTimer(2, 25);
 80016a0:	2119      	movs	r1, #25
 80016a2:	2002      	movs	r0, #2
 80016a4:	f000 ff84 	bl	80025b0 <setTimer>
			setTimer(7,500);
 80016a8:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 80016ac:	2007      	movs	r0, #7
 80016ae:	f000 ff7f 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(0))
 80016b2:	2000      	movs	r0, #0
 80016b4:	f7ff fb4c 	bl	8000d50 <Is_Button_Pressed>
 80016b8:	4603      	mov	r3, r0
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	f000 83a4 	beq.w	8001e08 <normalState+0x9e8>
		{
			pedestrian_flag = Pedestrian_RED;
 80016c0:	4b10      	ldr	r3, [pc, #64]	; (8001704 <normalState+0x2e4>)
 80016c2:	220f      	movs	r2, #15
 80016c4:	601a      	str	r2, [r3, #0]
			setTimer(3, (timeRed + timeGreen) * 100);
 80016c6:	4b08      	ldr	r3, [pc, #32]	; (80016e8 <normalState+0x2c8>)
 80016c8:	681a      	ldr	r2, [r3, #0]
 80016ca:	4b06      	ldr	r3, [pc, #24]	; (80016e4 <normalState+0x2c4>)
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	4413      	add	r3, r2
 80016d0:	2264      	movs	r2, #100	; 0x64
 80016d2:	fb02 f303 	mul.w	r3, r2, r3
 80016d6:	4619      	mov	r1, r3
 80016d8:	2003      	movs	r0, #3
 80016da:	f000 ff69 	bl	80025b0 <setTimer>
		}
		break;
 80016de:	e393      	b.n	8001e08 <normalState+0x9e8>
 80016e0:	20000118 	.word	0x20000118
 80016e4:	2000002c 	.word	0x2000002c
 80016e8:	20000024 	.word	0x20000024
 80016ec:	2000013c 	.word	0x2000013c
 80016f0:	2000011c 	.word	0x2000011c
 80016f4:	08005e60 	.word	0x08005e60
 80016f8:	200001d0 	.word	0x200001d0
 80016fc:	08005e80 	.word	0x08005e80
 8001700:	20000028 	.word	0x20000028
 8001704:	20000030 	.word	0x20000030
 8001708:	08005ea4 	.word	0x08005ea4
 800170c:	08005ec8 	.word	0x08005ec8

	case GreenRed:
		displayGreen1();
 8001710:	f7ff fb9c 	bl	8000e4c <displayGreen1>
		displayRed2();
 8001714:	f7ff fbae 	bl	8000e74 <displayRed2>

		if(timeYellow < 5 && time1 <= 5 - timeYellow && flag == 0 && pedestrian_flag == Pedestrian_GREEN)
 8001718:	4b5c      	ldr	r3, [pc, #368]	; (800188c <normalState+0x46c>)
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	2b04      	cmp	r3, #4
 800171e:	dc16      	bgt.n	800174e <normalState+0x32e>
 8001720:	4b5a      	ldr	r3, [pc, #360]	; (800188c <normalState+0x46c>)
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	f1c3 0205 	rsb	r2, r3, #5
 8001728:	4b59      	ldr	r3, [pc, #356]	; (8001890 <normalState+0x470>)
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	429a      	cmp	r2, r3
 800172e:	db0e      	blt.n	800174e <normalState+0x32e>
 8001730:	4b58      	ldr	r3, [pc, #352]	; (8001894 <normalState+0x474>)
 8001732:	681b      	ldr	r3, [r3, #0]
 8001734:	2b00      	cmp	r3, #0
 8001736:	d10a      	bne.n	800174e <normalState+0x32e>
 8001738:	4b57      	ldr	r3, [pc, #348]	; (8001898 <normalState+0x478>)
 800173a:	681b      	ldr	r3, [r3, #0]
 800173c:	2b10      	cmp	r3, #16
 800173e:	d106      	bne.n	800174e <normalState+0x32e>
		{
			flag = 1;
 8001740:	4b54      	ldr	r3, [pc, #336]	; (8001894 <normalState+0x474>)
 8001742:	2201      	movs	r2, #1
 8001744:	601a      	str	r2, [r3, #0]
			setTimer(4, 1);
 8001746:	2101      	movs	r1, #1
 8001748:	2004      	movs	r0, #4
 800174a:	f000 ff31 	bl	80025b0 <setTimer>
		}

		if(isTimerUp(1)==1)
 800174e:	2001      	movs	r0, #1
 8001750:	f000 ff0a 	bl	8002568 <isTimerUp>
 8001754:	4603      	mov	r3, r0
 8001756:	2b01      	cmp	r3, #1
 8001758:	d12b      	bne.n	80017b2 <normalState+0x392>
		{	// Update Time
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED1 - LED_GREEN: %d#\r\n",time1), 500);
 800175a:	4b4d      	ldr	r3, [pc, #308]	; (8001890 <normalState+0x470>)
 800175c:	681a      	ldr	r2, [r3, #0]
 800175e:	1d3b      	adds	r3, r7, #4
 8001760:	494e      	ldr	r1, [pc, #312]	; (800189c <normalState+0x47c>)
 8001762:	4618      	mov	r0, r3
 8001764:	f003 ffa4 	bl	80056b0 <siprintf>
 8001768:	4603      	mov	r3, r0
 800176a:	b29a      	uxth	r2, r3
 800176c:	1d39      	adds	r1, r7, #4
 800176e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001772:	484b      	ldr	r0, [pc, #300]	; (80018a0 <normalState+0x480>)
 8001774:	f003 f8d0 	bl	8004918 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED2 - LED_RED:   %d#\r\n\n\n",time2), 500);
 8001778:	4b4a      	ldr	r3, [pc, #296]	; (80018a4 <normalState+0x484>)
 800177a:	681a      	ldr	r2, [r3, #0]
 800177c:	1d3b      	adds	r3, r7, #4
 800177e:	494a      	ldr	r1, [pc, #296]	; (80018a8 <normalState+0x488>)
 8001780:	4618      	mov	r0, r3
 8001782:	f003 ff95 	bl	80056b0 <siprintf>
 8001786:	4603      	mov	r3, r0
 8001788:	b29a      	uxth	r2, r3
 800178a:	1d39      	adds	r1, r7, #4
 800178c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001790:	4843      	ldr	r0, [pc, #268]	; (80018a0 <normalState+0x480>)
 8001792:	f003 f8c1 	bl	8004918 <HAL_UART_Transmit>

			time1--;
 8001796:	4b3e      	ldr	r3, [pc, #248]	; (8001890 <normalState+0x470>)
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	3b01      	subs	r3, #1
 800179c:	4a3c      	ldr	r2, [pc, #240]	; (8001890 <normalState+0x470>)
 800179e:	6013      	str	r3, [r2, #0]
			time2--;
 80017a0:	4b40      	ldr	r3, [pc, #256]	; (80018a4 <normalState+0x484>)
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	3b01      	subs	r3, #1
 80017a6:	4a3f      	ldr	r2, [pc, #252]	; (80018a4 <normalState+0x484>)
 80017a8:	6013      	str	r3, [r2, #0]

			setTimer(1, 100);
 80017aa:	2164      	movs	r1, #100	; 0x64
 80017ac:	2001      	movs	r0, #1
 80017ae:	f000 feff 	bl	80025b0 <setTimer>
		}

		if(isTimerUp(0) == 1)
 80017b2:	2000      	movs	r0, #0
 80017b4:	f000 fed8 	bl	8002568 <isTimerUp>
 80017b8:	4603      	mov	r3, r0
 80017ba:	2b01      	cmp	r3, #1
 80017bc:	d117      	bne.n	80017ee <normalState+0x3ce>
		{	// Transit State
			status = AmberRed;
 80017be:	4b3b      	ldr	r3, [pc, #236]	; (80018ac <normalState+0x48c>)
 80017c0:	2204      	movs	r2, #4
 80017c2:	601a      	str	r2, [r3, #0]

			setTimer(0, timeYellow * 100);
 80017c4:	4b31      	ldr	r3, [pc, #196]	; (800188c <normalState+0x46c>)
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	2264      	movs	r2, #100	; 0x64
 80017ca:	fb02 f303 	mul.w	r3, r2, r3
 80017ce:	4619      	mov	r1, r3
 80017d0:	2000      	movs	r0, #0
 80017d2:	f000 feed 	bl	80025b0 <setTimer>
			setTimer(1, 1);
 80017d6:	2101      	movs	r1, #1
 80017d8:	2001      	movs	r0, #1
 80017da:	f000 fee9 	bl	80025b0 <setTimer>

			time1 = timeYellow;
 80017de:	4b2b      	ldr	r3, [pc, #172]	; (800188c <normalState+0x46c>)
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	4a2b      	ldr	r2, [pc, #172]	; (8001890 <normalState+0x470>)
 80017e4:	6013      	str	r3, [r2, #0]
			time2 = timeYellow;
 80017e6:	4b29      	ldr	r3, [pc, #164]	; (800188c <normalState+0x46c>)
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	4a2e      	ldr	r2, [pc, #184]	; (80018a4 <normalState+0x484>)
 80017ec:	6013      	str	r3, [r2, #0]
		}

		if(timeYellow < 5 && time1 <= 5 - timeYellow)
 80017ee:	4b27      	ldr	r3, [pc, #156]	; (800188c <normalState+0x46c>)
 80017f0:	681b      	ldr	r3, [r3, #0]
 80017f2:	2b04      	cmp	r3, #4
 80017f4:	dc11      	bgt.n	800181a <normalState+0x3fa>
 80017f6:	4b25      	ldr	r3, [pc, #148]	; (800188c <normalState+0x46c>)
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	f1c3 0205 	rsb	r2, r3, #5
 80017fe:	4b24      	ldr	r3, [pc, #144]	; (8001890 <normalState+0x470>)
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	429a      	cmp	r2, r3
 8001804:	db09      	blt.n	800181a <normalState+0x3fa>
				buzzerValue = 512 * (5- timeYellow - time1);
 8001806:	4b21      	ldr	r3, [pc, #132]	; (800188c <normalState+0x46c>)
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	f1c3 0205 	rsb	r2, r3, #5
 800180e:	4b20      	ldr	r3, [pc, #128]	; (8001890 <normalState+0x470>)
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	1ad3      	subs	r3, r2, r3
 8001814:	025b      	lsls	r3, r3, #9
 8001816:	4a26      	ldr	r2, [pc, #152]	; (80018b0 <normalState+0x490>)
 8001818:	6013      	str	r3, [r2, #0]

		if(Is_Button_Pressed(1))
 800181a:	2001      	movs	r0, #1
 800181c:	f7ff fa98 	bl	8000d50 <Is_Button_Pressed>
 8001820:	4603      	mov	r3, r0
 8001822:	2b00      	cmp	r3, #0
 8001824:	d01a      	beq.n	800185c <normalState+0x43c>
		{
			status = ManRed;
 8001826:	4b21      	ldr	r3, [pc, #132]	; (80018ac <normalState+0x48c>)
 8001828:	220a      	movs	r2, #10
 800182a:	601a      	str	r2, [r3, #0]

			time1 = timeRed;
 800182c:	4b21      	ldr	r3, [pc, #132]	; (80018b4 <normalState+0x494>)
 800182e:	681b      	ldr	r3, [r3, #0]
 8001830:	4a17      	ldr	r2, [pc, #92]	; (8001890 <normalState+0x470>)
 8001832:	6013      	str	r3, [r2, #0]
			time2 = 2;
 8001834:	4b1b      	ldr	r3, [pc, #108]	; (80018a4 <normalState+0x484>)
 8001836:	2202      	movs	r2, #2
 8001838:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 800183a:	f7ff fabb 	bl	8000db4 <clearAllLed1>
			clearAllLed2();
 800183e:	f7ff facd 	bl	8000ddc <clearAllLed2>

			setTimer(1, 100);
 8001842:	2164      	movs	r1, #100	; 0x64
 8001844:	2001      	movs	r0, #1
 8001846:	f000 feb3 	bl	80025b0 <setTimer>
			setTimer(2, 25);
 800184a:	2119      	movs	r1, #25
 800184c:	2002      	movs	r0, #2
 800184e:	f000 feaf 	bl	80025b0 <setTimer>
			setTimer(7,500);
 8001852:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001856:	2007      	movs	r0, #7
 8001858:	f000 feaa 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(0))
 800185c:	2000      	movs	r0, #0
 800185e:	f7ff fa77 	bl	8000d50 <Is_Button_Pressed>
 8001862:	4603      	mov	r3, r0
 8001864:	2b00      	cmp	r3, #0
 8001866:	f000 82d1 	beq.w	8001e0c <normalState+0x9ec>
		{
			pedestrian_flag = Pedestrian_GREEN;
 800186a:	4b0b      	ldr	r3, [pc, #44]	; (8001898 <normalState+0x478>)
 800186c:	2210      	movs	r2, #16
 800186e:	601a      	str	r2, [r3, #0]
			setTimer(3, (timeRed + timeGreen) * 100);
 8001870:	4b10      	ldr	r3, [pc, #64]	; (80018b4 <normalState+0x494>)
 8001872:	681a      	ldr	r2, [r3, #0]
 8001874:	4b10      	ldr	r3, [pc, #64]	; (80018b8 <normalState+0x498>)
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	4413      	add	r3, r2
 800187a:	2264      	movs	r2, #100	; 0x64
 800187c:	fb02 f303 	mul.w	r3, r2, r3
 8001880:	4619      	mov	r1, r3
 8001882:	2003      	movs	r0, #3
 8001884:	f000 fe94 	bl	80025b0 <setTimer>
		}
		break;
 8001888:	e2c0      	b.n	8001e0c <normalState+0x9ec>
 800188a:	bf00      	nop
 800188c:	20000028 	.word	0x20000028
 8001890:	2000013c 	.word	0x2000013c
 8001894:	20000128 	.word	0x20000128
 8001898:	20000030 	.word	0x20000030
 800189c:	08005eec 	.word	0x08005eec
 80018a0:	200001d0 	.word	0x200001d0
 80018a4:	2000011c 	.word	0x2000011c
 80018a8:	08005f0c 	.word	0x08005f0c
 80018ac:	20000118 	.word	0x20000118
 80018b0:	20000120 	.word	0x20000120
 80018b4:	20000024 	.word	0x20000024
 80018b8:	2000002c 	.word	0x2000002c

	case AmberRed:
		displayYellow1();
 80018bc:	f7ff fab2 	bl	8000e24 <displayYellow1>
		displayRed2();
 80018c0:	f7ff fad8 	bl	8000e74 <displayRed2>

		if (timeYellow >= 5 && time1 == 5 && flag == 0 && pedestrian_flag == Pedestrian_GREEN)
 80018c4:	4bae      	ldr	r3, [pc, #696]	; (8001b80 <normalState+0x760>)
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	2b04      	cmp	r3, #4
 80018ca:	dd12      	ble.n	80018f2 <normalState+0x4d2>
 80018cc:	4bad      	ldr	r3, [pc, #692]	; (8001b84 <normalState+0x764>)
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	2b05      	cmp	r3, #5
 80018d2:	d10e      	bne.n	80018f2 <normalState+0x4d2>
 80018d4:	4bac      	ldr	r3, [pc, #688]	; (8001b88 <normalState+0x768>)
 80018d6:	681b      	ldr	r3, [r3, #0]
 80018d8:	2b00      	cmp	r3, #0
 80018da:	d10a      	bne.n	80018f2 <normalState+0x4d2>
 80018dc:	4bab      	ldr	r3, [pc, #684]	; (8001b8c <normalState+0x76c>)
 80018de:	681b      	ldr	r3, [r3, #0]
 80018e0:	2b10      	cmp	r3, #16
 80018e2:	d106      	bne.n	80018f2 <normalState+0x4d2>
		{
			flag = 1;
 80018e4:	4ba8      	ldr	r3, [pc, #672]	; (8001b88 <normalState+0x768>)
 80018e6:	2201      	movs	r2, #1
 80018e8:	601a      	str	r2, [r3, #0]
			setTimer(4, 1);
 80018ea:	2101      	movs	r1, #1
 80018ec:	2004      	movs	r0, #4
 80018ee:	f000 fe5f 	bl	80025b0 <setTimer>
		}

		if(isTimerUp(1) == 1)
 80018f2:	2001      	movs	r0, #1
 80018f4:	f000 fe38 	bl	8002568 <isTimerUp>
 80018f8:	4603      	mov	r3, r0
 80018fa:	2b01      	cmp	r3, #1
 80018fc:	d12b      	bne.n	8001956 <normalState+0x536>
		{	// Update Time
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED1 - LED_AMBER: %d#\r\n",time1), 500);
 80018fe:	4ba1      	ldr	r3, [pc, #644]	; (8001b84 <normalState+0x764>)
 8001900:	681a      	ldr	r2, [r3, #0]
 8001902:	1d3b      	adds	r3, r7, #4
 8001904:	49a2      	ldr	r1, [pc, #648]	; (8001b90 <normalState+0x770>)
 8001906:	4618      	mov	r0, r3
 8001908:	f003 fed2 	bl	80056b0 <siprintf>
 800190c:	4603      	mov	r3, r0
 800190e:	b29a      	uxth	r2, r3
 8001910:	1d39      	adds	r1, r7, #4
 8001912:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001916:	489f      	ldr	r0, [pc, #636]	; (8001b94 <normalState+0x774>)
 8001918:	f002 fffe 	bl	8004918 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED2 - LED_RED:   %d#\r\n\n\n",time2), 500);
 800191c:	4b9e      	ldr	r3, [pc, #632]	; (8001b98 <normalState+0x778>)
 800191e:	681a      	ldr	r2, [r3, #0]
 8001920:	1d3b      	adds	r3, r7, #4
 8001922:	499e      	ldr	r1, [pc, #632]	; (8001b9c <normalState+0x77c>)
 8001924:	4618      	mov	r0, r3
 8001926:	f003 fec3 	bl	80056b0 <siprintf>
 800192a:	4603      	mov	r3, r0
 800192c:	b29a      	uxth	r2, r3
 800192e:	1d39      	adds	r1, r7, #4
 8001930:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001934:	4897      	ldr	r0, [pc, #604]	; (8001b94 <normalState+0x774>)
 8001936:	f002 ffef 	bl	8004918 <HAL_UART_Transmit>

			time1--;
 800193a:	4b92      	ldr	r3, [pc, #584]	; (8001b84 <normalState+0x764>)
 800193c:	681b      	ldr	r3, [r3, #0]
 800193e:	3b01      	subs	r3, #1
 8001940:	4a90      	ldr	r2, [pc, #576]	; (8001b84 <normalState+0x764>)
 8001942:	6013      	str	r3, [r2, #0]
			time2--;
 8001944:	4b94      	ldr	r3, [pc, #592]	; (8001b98 <normalState+0x778>)
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	3b01      	subs	r3, #1
 800194a:	4a93      	ldr	r2, [pc, #588]	; (8001b98 <normalState+0x778>)
 800194c:	6013      	str	r3, [r2, #0]

			setTimer(1, 100);
 800194e:	2164      	movs	r1, #100	; 0x64
 8001950:	2001      	movs	r0, #1
 8001952:	f000 fe2d 	bl	80025b0 <setTimer>
		}

		if(isTimerUp(0) == 1)
 8001956:	2000      	movs	r0, #0
 8001958:	f000 fe06 	bl	8002568 <isTimerUp>
 800195c:	4603      	mov	r3, r0
 800195e:	2b01      	cmp	r3, #1
 8001960:	d11e      	bne.n	80019a0 <normalState+0x580>
		{	// Transit State
			status = RedGreen;
 8001962:	4b8f      	ldr	r3, [pc, #572]	; (8001ba0 <normalState+0x780>)
 8001964:	2201      	movs	r2, #1
 8001966:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8001968:	4b8e      	ldr	r3, [pc, #568]	; (8001ba4 <normalState+0x784>)
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	2264      	movs	r2, #100	; 0x64
 800196e:	fb02 f303 	mul.w	r3, r2, r3
 8001972:	4619      	mov	r1, r3
 8001974:	2000      	movs	r0, #0
 8001976:	f000 fe1b 	bl	80025b0 <setTimer>
			setTimer(1, 1);
 800197a:	2101      	movs	r1, #1
 800197c:	2001      	movs	r0, #1
 800197e:	f000 fe17 	bl	80025b0 <setTimer>

			time1 = timeRed;
 8001982:	4b89      	ldr	r3, [pc, #548]	; (8001ba8 <normalState+0x788>)
 8001984:	681b      	ldr	r3, [r3, #0]
 8001986:	4a7f      	ldr	r2, [pc, #508]	; (8001b84 <normalState+0x764>)
 8001988:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 800198a:	4b86      	ldr	r3, [pc, #536]	; (8001ba4 <normalState+0x784>)
 800198c:	681b      	ldr	r3, [r3, #0]
 800198e:	4a82      	ldr	r2, [pc, #520]	; (8001b98 <normalState+0x778>)
 8001990:	6013      	str	r3, [r2, #0]

			if(pedestrian_flag == Pedestrian_GREEN)
 8001992:	4b7e      	ldr	r3, [pc, #504]	; (8001b8c <normalState+0x76c>)
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	2b10      	cmp	r3, #16
 8001998:	d102      	bne.n	80019a0 <normalState+0x580>
				pedestrian_flag = Pedestrian_RED;
 800199a:	4b7c      	ldr	r3, [pc, #496]	; (8001b8c <normalState+0x76c>)
 800199c:	220f      	movs	r2, #15
 800199e:	601a      	str	r2, [r3, #0]
		}


		if (timeYellow >= 5 && time1 <= 5)
 80019a0:	4b77      	ldr	r3, [pc, #476]	; (8001b80 <normalState+0x760>)
 80019a2:	681b      	ldr	r3, [r3, #0]
 80019a4:	2b04      	cmp	r3, #4
 80019a6:	dd0a      	ble.n	80019be <normalState+0x59e>
 80019a8:	4b76      	ldr	r3, [pc, #472]	; (8001b84 <normalState+0x764>)
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	2b05      	cmp	r3, #5
 80019ae:	dc06      	bgt.n	80019be <normalState+0x59e>
			buzzerValue = 512 * (5 - time1);
 80019b0:	4b74      	ldr	r3, [pc, #464]	; (8001b84 <normalState+0x764>)
 80019b2:	681b      	ldr	r3, [r3, #0]
 80019b4:	f1c3 0305 	rsb	r3, r3, #5
 80019b8:	025b      	lsls	r3, r3, #9
 80019ba:	4a7c      	ldr	r2, [pc, #496]	; (8001bac <normalState+0x78c>)
 80019bc:	6013      	str	r3, [r2, #0]

		if(timeYellow < 5)
 80019be:	4b70      	ldr	r3, [pc, #448]	; (8001b80 <normalState+0x760>)
 80019c0:	681b      	ldr	r3, [r3, #0]
 80019c2:	2b04      	cmp	r3, #4
 80019c4:	dc09      	bgt.n	80019da <normalState+0x5ba>
			buzzerValue += 256 * (5 - time1);
 80019c6:	4b6f      	ldr	r3, [pc, #444]	; (8001b84 <normalState+0x764>)
 80019c8:	681b      	ldr	r3, [r3, #0]
 80019ca:	f1c3 0305 	rsb	r3, r3, #5
 80019ce:	021a      	lsls	r2, r3, #8
 80019d0:	4b76      	ldr	r3, [pc, #472]	; (8001bac <normalState+0x78c>)
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	4413      	add	r3, r2
 80019d6:	4a75      	ldr	r2, [pc, #468]	; (8001bac <normalState+0x78c>)
 80019d8:	6013      	str	r3, [r2, #0]


		if(Is_Button_Pressed(1))
 80019da:	2001      	movs	r0, #1
 80019dc:	f7ff f9b8 	bl	8000d50 <Is_Button_Pressed>
 80019e0:	4603      	mov	r3, r0
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d01a      	beq.n	8001a1c <normalState+0x5fc>
		{
			status = ManRed;
 80019e6:	4b6e      	ldr	r3, [pc, #440]	; (8001ba0 <normalState+0x780>)
 80019e8:	220a      	movs	r2, #10
 80019ea:	601a      	str	r2, [r3, #0]

			time1 = timeRed;
 80019ec:	4b6e      	ldr	r3, [pc, #440]	; (8001ba8 <normalState+0x788>)
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	4a64      	ldr	r2, [pc, #400]	; (8001b84 <normalState+0x764>)
 80019f2:	6013      	str	r3, [r2, #0]
			time2 = 2;
 80019f4:	4b68      	ldr	r3, [pc, #416]	; (8001b98 <normalState+0x778>)
 80019f6:	2202      	movs	r2, #2
 80019f8:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 80019fa:	f7ff f9db 	bl	8000db4 <clearAllLed1>
			clearAllLed2();
 80019fe:	f7ff f9ed 	bl	8000ddc <clearAllLed2>

			setTimer(1, 100);
 8001a02:	2164      	movs	r1, #100	; 0x64
 8001a04:	2001      	movs	r0, #1
 8001a06:	f000 fdd3 	bl	80025b0 <setTimer>
			setTimer(2, 25);
 8001a0a:	2119      	movs	r1, #25
 8001a0c:	2002      	movs	r0, #2
 8001a0e:	f000 fdcf 	bl	80025b0 <setTimer>
			setTimer(7,500);
 8001a12:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001a16:	2007      	movs	r0, #7
 8001a18:	f000 fdca 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(0))
 8001a1c:	2000      	movs	r0, #0
 8001a1e:	f7ff f997 	bl	8000d50 <Is_Button_Pressed>
 8001a22:	4603      	mov	r3, r0
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	f000 81f3 	beq.w	8001e10 <normalState+0x9f0>
		{
			pedestrian_flag = Pedestrian_GREEN;
 8001a2a:	4b58      	ldr	r3, [pc, #352]	; (8001b8c <normalState+0x76c>)
 8001a2c:	2210      	movs	r2, #16
 8001a2e:	601a      	str	r2, [r3, #0]
			if(time1 < 5)
 8001a30:	4b54      	ldr	r3, [pc, #336]	; (8001b84 <normalState+0x764>)
 8001a32:	681b      	ldr	r3, [r3, #0]
 8001a34:	2b04      	cmp	r3, #4
 8001a36:	dc03      	bgt.n	8001a40 <normalState+0x620>
				setTimer(4, 1);
 8001a38:	2101      	movs	r1, #1
 8001a3a:	2004      	movs	r0, #4
 8001a3c:	f000 fdb8 	bl	80025b0 <setTimer>

			setTimer(3, (timeRed + timeGreen) * 100);
 8001a40:	4b59      	ldr	r3, [pc, #356]	; (8001ba8 <normalState+0x788>)
 8001a42:	681a      	ldr	r2, [r3, #0]
 8001a44:	4b57      	ldr	r3, [pc, #348]	; (8001ba4 <normalState+0x784>)
 8001a46:	681b      	ldr	r3, [r3, #0]
 8001a48:	4413      	add	r3, r2
 8001a4a:	2264      	movs	r2, #100	; 0x64
 8001a4c:	fb02 f303 	mul.w	r3, r2, r3
 8001a50:	4619      	mov	r1, r3
 8001a52:	2003      	movs	r0, #3
 8001a54:	f000 fdac 	bl	80025b0 <setTimer>
		}
		break;
 8001a58:	e1da      	b.n	8001e10 <normalState+0x9f0>

	case ManRed:
		if(isTimerUp(7) == 1)
 8001a5a:	2007      	movs	r0, #7
 8001a5c:	f000 fd84 	bl	8002568 <isTimerUp>
 8001a60:	4603      	mov	r3, r0
 8001a62:	2b01      	cmp	r3, #1
 8001a64:	d117      	bne.n	8001a96 <normalState+0x676>
		{
			status = RedGreen;
 8001a66:	4b4e      	ldr	r3, [pc, #312]	; (8001ba0 <normalState+0x780>)
 8001a68:	2201      	movs	r2, #1
 8001a6a:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8001a6c:	4b4d      	ldr	r3, [pc, #308]	; (8001ba4 <normalState+0x784>)
 8001a6e:	681b      	ldr	r3, [r3, #0]
 8001a70:	2264      	movs	r2, #100	; 0x64
 8001a72:	fb02 f303 	mul.w	r3, r2, r3
 8001a76:	4619      	mov	r1, r3
 8001a78:	2000      	movs	r0, #0
 8001a7a:	f000 fd99 	bl	80025b0 <setTimer>
			setTimer(1, 1);
 8001a7e:	2101      	movs	r1, #1
 8001a80:	2001      	movs	r0, #1
 8001a82:	f000 fd95 	bl	80025b0 <setTimer>

			time1 = timeRed;
 8001a86:	4b48      	ldr	r3, [pc, #288]	; (8001ba8 <normalState+0x788>)
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	4a3e      	ldr	r2, [pc, #248]	; (8001b84 <normalState+0x764>)
 8001a8c:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8001a8e:	4b45      	ldr	r3, [pc, #276]	; (8001ba4 <normalState+0x784>)
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	4a41      	ldr	r2, [pc, #260]	; (8001b98 <normalState+0x778>)
 8001a94:	6013      	str	r3, [r2, #0]
		}

		if(isTimerUp(2) == 1)
 8001a96:	2002      	movs	r0, #2
 8001a98:	f000 fd66 	bl	8002568 <isTimerUp>
 8001a9c:	4603      	mov	r3, r0
 8001a9e:	2b01      	cmp	r3, #1
 8001aa0:	d105      	bne.n	8001aae <normalState+0x68e>
		{
			setTimer(2, 25);
 8001aa2:	2119      	movs	r1, #25
 8001aa4:	2002      	movs	r0, #2
 8001aa6:	f000 fd83 	bl	80025b0 <setTimer>
			toggleRed();
 8001aaa:	f7ff fa13 	bl	8000ed4 <toggleRed>
		}
		if(Is_Button_Pressed(2))
 8001aae:	2002      	movs	r0, #2
 8001ab0:	f7ff f94e 	bl	8000d50 <Is_Button_Pressed>
 8001ab4:	4603      	mov	r3, r0
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d006      	beq.n	8001ac8 <normalState+0x6a8>
		{
			increase();
 8001aba:	f7ff fa81 	bl	8000fc0 <increase>
			setTimer(7,500);
 8001abe:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001ac2:	2007      	movs	r0, #7
 8001ac4:	f000 fd74 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(3))
 8001ac8:	2003      	movs	r0, #3
 8001aca:	f7ff f941 	bl	8000d50 <Is_Button_Pressed>
 8001ace:	4603      	mov	r3, r0
 8001ad0:	2b00      	cmp	r3, #0
 8001ad2:	d00d      	beq.n	8001af0 <normalState+0x6d0>
		{
			balance(time1, timeYellow, timeGreen);
 8001ad4:	4b2b      	ldr	r3, [pc, #172]	; (8001b84 <normalState+0x764>)
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	4a29      	ldr	r2, [pc, #164]	; (8001b80 <normalState+0x760>)
 8001ada:	6811      	ldr	r1, [r2, #0]
 8001adc:	4a31      	ldr	r2, [pc, #196]	; (8001ba4 <normalState+0x784>)
 8001ade:	6812      	ldr	r2, [r2, #0]
 8001ae0:	4618      	mov	r0, r3
 8001ae2:	f7ff fa81 	bl	8000fe8 <balance>
			setTimer(7,500);
 8001ae6:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001aea:	2007      	movs	r0, #7
 8001aec:	f000 fd60 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(1))
 8001af0:	2001      	movs	r0, #1
 8001af2:	f7ff f92d 	bl	8000d50 <Is_Button_Pressed>
 8001af6:	4603      	mov	r3, r0
 8001af8:	2b00      	cmp	r3, #0
 8001afa:	d016      	beq.n	8001b2a <normalState+0x70a>
		{
			status = ManAmber;
 8001afc:	4b28      	ldr	r3, [pc, #160]	; (8001ba0 <normalState+0x780>)
 8001afe:	220b      	movs	r2, #11
 8001b00:	601a      	str	r2, [r3, #0]

			time1 = timeYellow;
 8001b02:	4b1f      	ldr	r3, [pc, #124]	; (8001b80 <normalState+0x760>)
 8001b04:	681b      	ldr	r3, [r3, #0]
 8001b06:	4a1f      	ldr	r2, [pc, #124]	; (8001b84 <normalState+0x764>)
 8001b08:	6013      	str	r3, [r2, #0]
			time2 = 3;
 8001b0a:	4b23      	ldr	r3, [pc, #140]	; (8001b98 <normalState+0x778>)
 8001b0c:	2203      	movs	r2, #3
 8001b0e:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 8001b10:	f7ff f950 	bl	8000db4 <clearAllLed1>
			clearAllLed2();
 8001b14:	f7ff f962 	bl	8000ddc <clearAllLed2>

			setTimer(2, 25);
 8001b18:	2119      	movs	r1, #25
 8001b1a:	2002      	movs	r0, #2
 8001b1c:	f000 fd48 	bl	80025b0 <setTimer>
			setTimer(7,500);
 8001b20:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001b24:	2007      	movs	r0, #7
 8001b26:	f000 fd43 	bl	80025b0 <setTimer>
		}

		if(isTimerUp(1) == 1)
 8001b2a:	2001      	movs	r0, #1
 8001b2c:	f000 fd1c 	bl	8002568 <isTimerUp>
 8001b30:	4603      	mov	r3, r0
 8001b32:	2b01      	cmp	r3, #1
 8001b34:	f040 816e 	bne.w	8001e14 <normalState+0x9f4>
		{
			setTimer(1, 100);
 8001b38:	2164      	movs	r1, #100	; 0x64
 8001b3a:	2001      	movs	r0, #1
 8001b3c:	f000 fd38 	bl	80025b0 <setTimer>

			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED1 - LED_RED_VALUE: %d#\r\n",time1), 500);
 8001b40:	4b10      	ldr	r3, [pc, #64]	; (8001b84 <normalState+0x764>)
 8001b42:	681a      	ldr	r2, [r3, #0]
 8001b44:	1d3b      	adds	r3, r7, #4
 8001b46:	491a      	ldr	r1, [pc, #104]	; (8001bb0 <normalState+0x790>)
 8001b48:	4618      	mov	r0, r3
 8001b4a:	f003 fdb1 	bl	80056b0 <siprintf>
 8001b4e:	4603      	mov	r3, r0
 8001b50:	b29a      	uxth	r2, r3
 8001b52:	1d39      	adds	r1, r7, #4
 8001b54:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001b58:	480e      	ldr	r0, [pc, #56]	; (8001b94 <normalState+0x774>)
 8001b5a:	f002 fedd 	bl	8004918 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED2 - MODE_RED:      %d#\r\n\n\n",time2), 500);
 8001b5e:	4b0e      	ldr	r3, [pc, #56]	; (8001b98 <normalState+0x778>)
 8001b60:	681a      	ldr	r2, [r3, #0]
 8001b62:	1d3b      	adds	r3, r7, #4
 8001b64:	4913      	ldr	r1, [pc, #76]	; (8001bb4 <normalState+0x794>)
 8001b66:	4618      	mov	r0, r3
 8001b68:	f003 fda2 	bl	80056b0 <siprintf>
 8001b6c:	4603      	mov	r3, r0
 8001b6e:	b29a      	uxth	r2, r3
 8001b70:	1d39      	adds	r1, r7, #4
 8001b72:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001b76:	4807      	ldr	r0, [pc, #28]	; (8001b94 <normalState+0x774>)
 8001b78:	f002 fece 	bl	8004918 <HAL_UART_Transmit>
		}
		break;
 8001b7c:	e14a      	b.n	8001e14 <normalState+0x9f4>
 8001b7e:	bf00      	nop
 8001b80:	20000028 	.word	0x20000028
 8001b84:	2000013c 	.word	0x2000013c
 8001b88:	20000128 	.word	0x20000128
 8001b8c:	20000030 	.word	0x20000030
 8001b90:	08005f30 	.word	0x08005f30
 8001b94:	200001d0 	.word	0x200001d0
 8001b98:	2000011c 	.word	0x2000011c
 8001b9c:	08005f0c 	.word	0x08005f0c
 8001ba0:	20000118 	.word	0x20000118
 8001ba4:	2000002c 	.word	0x2000002c
 8001ba8:	20000024 	.word	0x20000024
 8001bac:	20000120 	.word	0x20000120
 8001bb0:	08005f50 	.word	0x08005f50
 8001bb4:	08005f74 	.word	0x08005f74

	case ManAmber:
		if(isTimerUp(7) == 1)
 8001bb8:	2007      	movs	r0, #7
 8001bba:	f000 fcd5 	bl	8002568 <isTimerUp>
 8001bbe:	4603      	mov	r3, r0
 8001bc0:	2b01      	cmp	r3, #1
 8001bc2:	d117      	bne.n	8001bf4 <normalState+0x7d4>
		{
			status = RedGreen;
 8001bc4:	4b98      	ldr	r3, [pc, #608]	; (8001e28 <normalState+0xa08>)
 8001bc6:	2201      	movs	r2, #1
 8001bc8:	601a      	str	r2, [r3, #0]
			setTimer(0, timeGreen * 100);
 8001bca:	4b98      	ldr	r3, [pc, #608]	; (8001e2c <normalState+0xa0c>)
 8001bcc:	681b      	ldr	r3, [r3, #0]
 8001bce:	2264      	movs	r2, #100	; 0x64
 8001bd0:	fb02 f303 	mul.w	r3, r2, r3
 8001bd4:	4619      	mov	r1, r3
 8001bd6:	2000      	movs	r0, #0
 8001bd8:	f000 fcea 	bl	80025b0 <setTimer>
			setTimer(1, 1);
 8001bdc:	2101      	movs	r1, #1
 8001bde:	2001      	movs	r0, #1
 8001be0:	f000 fce6 	bl	80025b0 <setTimer>

			time1 = timeRed;
 8001be4:	4b92      	ldr	r3, [pc, #584]	; (8001e30 <normalState+0xa10>)
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	4a92      	ldr	r2, [pc, #584]	; (8001e34 <normalState+0xa14>)
 8001bea:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8001bec:	4b8f      	ldr	r3, [pc, #572]	; (8001e2c <normalState+0xa0c>)
 8001bee:	681b      	ldr	r3, [r3, #0]
 8001bf0:	4a91      	ldr	r2, [pc, #580]	; (8001e38 <normalState+0xa18>)
 8001bf2:	6013      	str	r3, [r2, #0]
		}

		if(isTimerUp(2) == 1)
 8001bf4:	2002      	movs	r0, #2
 8001bf6:	f000 fcb7 	bl	8002568 <isTimerUp>
 8001bfa:	4603      	mov	r3, r0
 8001bfc:	2b01      	cmp	r3, #1
 8001bfe:	d105      	bne.n	8001c0c <normalState+0x7ec>
		{
			setTimer(2, 25);
 8001c00:	2119      	movs	r1, #25
 8001c02:	2002      	movs	r0, #2
 8001c04:	f000 fcd4 	bl	80025b0 <setTimer>
			toggleYellow();
 8001c08:	f7ff f976 	bl	8000ef8 <toggleYellow>
		}

		if(Is_Button_Pressed(2))
 8001c0c:	2002      	movs	r0, #2
 8001c0e:	f7ff f89f 	bl	8000d50 <Is_Button_Pressed>
 8001c12:	4603      	mov	r3, r0
 8001c14:	2b00      	cmp	r3, #0
 8001c16:	d006      	beq.n	8001c26 <normalState+0x806>
		{
			increase();
 8001c18:	f7ff f9d2 	bl	8000fc0 <increase>
			setTimer(7,500);
 8001c1c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001c20:	2007      	movs	r0, #7
 8001c22:	f000 fcc5 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(3))
 8001c26:	2003      	movs	r0, #3
 8001c28:	f7ff f892 	bl	8000d50 <Is_Button_Pressed>
 8001c2c:	4603      	mov	r3, r0
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	d00d      	beq.n	8001c4e <normalState+0x82e>
		{
			balance(timeRed, time1, timeGreen);
 8001c32:	4b7f      	ldr	r3, [pc, #508]	; (8001e30 <normalState+0xa10>)
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	4a7f      	ldr	r2, [pc, #508]	; (8001e34 <normalState+0xa14>)
 8001c38:	6811      	ldr	r1, [r2, #0]
 8001c3a:	4a7c      	ldr	r2, [pc, #496]	; (8001e2c <normalState+0xa0c>)
 8001c3c:	6812      	ldr	r2, [r2, #0]
 8001c3e:	4618      	mov	r0, r3
 8001c40:	f7ff f9d2 	bl	8000fe8 <balance>
			setTimer(7,500);
 8001c44:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001c48:	2007      	movs	r0, #7
 8001c4a:	f000 fcb1 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(1))
 8001c4e:	2001      	movs	r0, #1
 8001c50:	f7ff f87e 	bl	8000d50 <Is_Button_Pressed>
 8001c54:	4603      	mov	r3, r0
 8001c56:	2b00      	cmp	r3, #0
 8001c58:	d016      	beq.n	8001c88 <normalState+0x868>
		{
			status = ManGreen;
 8001c5a:	4b73      	ldr	r3, [pc, #460]	; (8001e28 <normalState+0xa08>)
 8001c5c:	220c      	movs	r2, #12
 8001c5e:	601a      	str	r2, [r3, #0]

			time1 = timeGreen;
 8001c60:	4b72      	ldr	r3, [pc, #456]	; (8001e2c <normalState+0xa0c>)
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	4a73      	ldr	r2, [pc, #460]	; (8001e34 <normalState+0xa14>)
 8001c66:	6013      	str	r3, [r2, #0]
			time2 = 4;
 8001c68:	4b73      	ldr	r3, [pc, #460]	; (8001e38 <normalState+0xa18>)
 8001c6a:	2204      	movs	r2, #4
 8001c6c:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 8001c6e:	f7ff f8a1 	bl	8000db4 <clearAllLed1>
			clearAllLed2();
 8001c72:	f7ff f8b3 	bl	8000ddc <clearAllLed2>

			setTimer(2, 25);
 8001c76:	2119      	movs	r1, #25
 8001c78:	2002      	movs	r0, #2
 8001c7a:	f000 fc99 	bl	80025b0 <setTimer>
			setTimer(7,500);
 8001c7e:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001c82:	2007      	movs	r0, #7
 8001c84:	f000 fc94 	bl	80025b0 <setTimer>
		}

		if(isTimerUp(1) == 1)
 8001c88:	2001      	movs	r0, #1
 8001c8a:	f000 fc6d 	bl	8002568 <isTimerUp>
 8001c8e:	4603      	mov	r3, r0
 8001c90:	2b01      	cmp	r3, #1
 8001c92:	f040 80c1 	bne.w	8001e18 <normalState+0x9f8>
		{
			setTimer(1, 100);
 8001c96:	2164      	movs	r1, #100	; 0x64
 8001c98:	2001      	movs	r0, #1
 8001c9a:	f000 fc89 	bl	80025b0 <setTimer>

			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED1 - LED_AMBER_VALUE: %d#\r\n",time1), 500);
 8001c9e:	4b65      	ldr	r3, [pc, #404]	; (8001e34 <normalState+0xa14>)
 8001ca0:	681a      	ldr	r2, [r3, #0]
 8001ca2:	1d3b      	adds	r3, r7, #4
 8001ca4:	4965      	ldr	r1, [pc, #404]	; (8001e3c <normalState+0xa1c>)
 8001ca6:	4618      	mov	r0, r3
 8001ca8:	f003 fd02 	bl	80056b0 <siprintf>
 8001cac:	4603      	mov	r3, r0
 8001cae:	b29a      	uxth	r2, r3
 8001cb0:	1d39      	adds	r1, r7, #4
 8001cb2:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001cb6:	4862      	ldr	r0, [pc, #392]	; (8001e40 <normalState+0xa20>)
 8001cb8:	f002 fe2e 	bl	8004918 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED2 - MODE_AMBER:      %d#\r\n\n\n",time2), 500);
 8001cbc:	4b5e      	ldr	r3, [pc, #376]	; (8001e38 <normalState+0xa18>)
 8001cbe:	681a      	ldr	r2, [r3, #0]
 8001cc0:	1d3b      	adds	r3, r7, #4
 8001cc2:	4960      	ldr	r1, [pc, #384]	; (8001e44 <normalState+0xa24>)
 8001cc4:	4618      	mov	r0, r3
 8001cc6:	f003 fcf3 	bl	80056b0 <siprintf>
 8001cca:	4603      	mov	r3, r0
 8001ccc:	b29a      	uxth	r2, r3
 8001cce:	1d39      	adds	r1, r7, #4
 8001cd0:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001cd4:	485a      	ldr	r0, [pc, #360]	; (8001e40 <normalState+0xa20>)
 8001cd6:	f002 fe1f 	bl	8004918 <HAL_UART_Transmit>
		}
		break;
 8001cda:	e09d      	b.n	8001e18 <normalState+0x9f8>

	case ManGreen:
		if(isTimerUp(7) == 1)
 8001cdc:	2007      	movs	r0, #7
 8001cde:	f000 fc43 	bl	8002568 <isTimerUp>
 8001ce2:	4603      	mov	r3, r0
 8001ce4:	2b01      	cmp	r3, #1
 8001ce6:	d117      	bne.n	8001d18 <normalState+0x8f8>
		{
			status = RedGreen;
 8001ce8:	4b4f      	ldr	r3, [pc, #316]	; (8001e28 <normalState+0xa08>)
 8001cea:	2201      	movs	r2, #1
 8001cec:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8001cee:	4b4f      	ldr	r3, [pc, #316]	; (8001e2c <normalState+0xa0c>)
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	2264      	movs	r2, #100	; 0x64
 8001cf4:	fb02 f303 	mul.w	r3, r2, r3
 8001cf8:	4619      	mov	r1, r3
 8001cfa:	2000      	movs	r0, #0
 8001cfc:	f000 fc58 	bl	80025b0 <setTimer>
			setTimer(1, 1);
 8001d00:	2101      	movs	r1, #1
 8001d02:	2001      	movs	r0, #1
 8001d04:	f000 fc54 	bl	80025b0 <setTimer>

			time1 = timeRed;
 8001d08:	4b49      	ldr	r3, [pc, #292]	; (8001e30 <normalState+0xa10>)
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	4a49      	ldr	r2, [pc, #292]	; (8001e34 <normalState+0xa14>)
 8001d0e:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8001d10:	4b46      	ldr	r3, [pc, #280]	; (8001e2c <normalState+0xa0c>)
 8001d12:	681b      	ldr	r3, [r3, #0]
 8001d14:	4a48      	ldr	r2, [pc, #288]	; (8001e38 <normalState+0xa18>)
 8001d16:	6013      	str	r3, [r2, #0]
		}

		if(isTimerUp(2) == 1)
 8001d18:	2002      	movs	r0, #2
 8001d1a:	f000 fc25 	bl	8002568 <isTimerUp>
 8001d1e:	4603      	mov	r3, r0
 8001d20:	2b01      	cmp	r3, #1
 8001d22:	d105      	bne.n	8001d30 <normalState+0x910>
		{
			setTimer(2, 25);
 8001d24:	2119      	movs	r1, #25
 8001d26:	2002      	movs	r0, #2
 8001d28:	f000 fc42 	bl	80025b0 <setTimer>
			toggleGreen();
 8001d2c:	f7ff f8fe 	bl	8000f2c <toggleGreen>
		}

		if(Is_Button_Pressed(2))
 8001d30:	2002      	movs	r0, #2
 8001d32:	f7ff f80d 	bl	8000d50 <Is_Button_Pressed>
 8001d36:	4603      	mov	r3, r0
 8001d38:	2b00      	cmp	r3, #0
 8001d3a:	d006      	beq.n	8001d4a <normalState+0x92a>
		{
			increase();
 8001d3c:	f7ff f940 	bl	8000fc0 <increase>
			setTimer(7,500);
 8001d40:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001d44:	2007      	movs	r0, #7
 8001d46:	f000 fc33 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(3))
 8001d4a:	2003      	movs	r0, #3
 8001d4c:	f7ff f800 	bl	8000d50 <Is_Button_Pressed>
 8001d50:	4603      	mov	r3, r0
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d00d      	beq.n	8001d72 <normalState+0x952>
		{
			balance(timeRed, timeYellow, time1);
 8001d56:	4b36      	ldr	r3, [pc, #216]	; (8001e30 <normalState+0xa10>)
 8001d58:	681b      	ldr	r3, [r3, #0]
 8001d5a:	4a3b      	ldr	r2, [pc, #236]	; (8001e48 <normalState+0xa28>)
 8001d5c:	6811      	ldr	r1, [r2, #0]
 8001d5e:	4a35      	ldr	r2, [pc, #212]	; (8001e34 <normalState+0xa14>)
 8001d60:	6812      	ldr	r2, [r2, #0]
 8001d62:	4618      	mov	r0, r3
 8001d64:	f7ff f940 	bl	8000fe8 <balance>
			setTimer(7,500);
 8001d68:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001d6c:	2007      	movs	r0, #7
 8001d6e:	f000 fc1f 	bl	80025b0 <setTimer>
		}

		if(Is_Button_Pressed(1))
 8001d72:	2001      	movs	r0, #1
 8001d74:	f7fe ffec 	bl	8000d50 <Is_Button_Pressed>
 8001d78:	4603      	mov	r3, r0
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d017      	beq.n	8001dae <normalState+0x98e>
		{
			status = RedGreen;
 8001d7e:	4b2a      	ldr	r3, [pc, #168]	; (8001e28 <normalState+0xa08>)
 8001d80:	2201      	movs	r2, #1
 8001d82:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8001d84:	4b29      	ldr	r3, [pc, #164]	; (8001e2c <normalState+0xa0c>)
 8001d86:	681b      	ldr	r3, [r3, #0]
 8001d88:	2264      	movs	r2, #100	; 0x64
 8001d8a:	fb02 f303 	mul.w	r3, r2, r3
 8001d8e:	4619      	mov	r1, r3
 8001d90:	2000      	movs	r0, #0
 8001d92:	f000 fc0d 	bl	80025b0 <setTimer>
			setTimer(1, 1);
 8001d96:	2101      	movs	r1, #1
 8001d98:	2001      	movs	r0, #1
 8001d9a:	f000 fc09 	bl	80025b0 <setTimer>

			time1 = timeRed;
 8001d9e:	4b24      	ldr	r3, [pc, #144]	; (8001e30 <normalState+0xa10>)
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	4a24      	ldr	r2, [pc, #144]	; (8001e34 <normalState+0xa14>)
 8001da4:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8001da6:	4b21      	ldr	r3, [pc, #132]	; (8001e2c <normalState+0xa0c>)
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	4a23      	ldr	r2, [pc, #140]	; (8001e38 <normalState+0xa18>)
 8001dac:	6013      	str	r3, [r2, #0]
		}

		if(isTimerUp(1) == 1)
 8001dae:	2001      	movs	r0, #1
 8001db0:	f000 fbda 	bl	8002568 <isTimerUp>
 8001db4:	4603      	mov	r3, r0
 8001db6:	2b01      	cmp	r3, #1
 8001db8:	d130      	bne.n	8001e1c <normalState+0x9fc>
		{
			setTimer(1, 100);
 8001dba:	2164      	movs	r1, #100	; 0x64
 8001dbc:	2001      	movs	r0, #1
 8001dbe:	f000 fbf7 	bl	80025b0 <setTimer>

			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED1 - LED_GREEN_VALUE: %d#\r\n",time1), 500);
 8001dc2:	4b1c      	ldr	r3, [pc, #112]	; (8001e34 <normalState+0xa14>)
 8001dc4:	681a      	ldr	r2, [r3, #0]
 8001dc6:	1d3b      	adds	r3, r7, #4
 8001dc8:	4920      	ldr	r1, [pc, #128]	; (8001e4c <normalState+0xa2c>)
 8001dca:	4618      	mov	r0, r3
 8001dcc:	f003 fc70 	bl	80056b0 <siprintf>
 8001dd0:	4603      	mov	r3, r0
 8001dd2:	b29a      	uxth	r2, r3
 8001dd4:	1d39      	adds	r1, r7, #4
 8001dd6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001dda:	4819      	ldr	r0, [pc, #100]	; (8001e40 <normalState+0xa20>)
 8001ddc:	f002 fd9c 	bl	8004918 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG_LED2 - MODE_GREEN:      %d#\r\n\n\n",time2), 500);
 8001de0:	4b15      	ldr	r3, [pc, #84]	; (8001e38 <normalState+0xa18>)
 8001de2:	681a      	ldr	r2, [r3, #0]
 8001de4:	1d3b      	adds	r3, r7, #4
 8001de6:	491a      	ldr	r1, [pc, #104]	; (8001e50 <normalState+0xa30>)
 8001de8:	4618      	mov	r0, r3
 8001dea:	f003 fc61 	bl	80056b0 <siprintf>
 8001dee:	4603      	mov	r3, r0
 8001df0:	b29a      	uxth	r2, r3
 8001df2:	1d39      	adds	r1, r7, #4
 8001df4:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001df8:	4811      	ldr	r0, [pc, #68]	; (8001e40 <normalState+0xa20>)
 8001dfa:	f002 fd8d 	bl	8004918 <HAL_UART_Transmit>
		}
		break;
 8001dfe:	e00d      	b.n	8001e1c <normalState+0x9fc>

	default:
		break;
 8001e00:	bf00      	nop
 8001e02:	e00c      	b.n	8001e1e <normalState+0x9fe>
		break;
 8001e04:	bf00      	nop
 8001e06:	e00a      	b.n	8001e1e <normalState+0x9fe>
		break;
 8001e08:	bf00      	nop
 8001e0a:	e008      	b.n	8001e1e <normalState+0x9fe>
		break;
 8001e0c:	bf00      	nop
 8001e0e:	e006      	b.n	8001e1e <normalState+0x9fe>
		break;
 8001e10:	bf00      	nop
 8001e12:	e004      	b.n	8001e1e <normalState+0x9fe>
		break;
 8001e14:	bf00      	nop
 8001e16:	e002      	b.n	8001e1e <normalState+0x9fe>
		break;
 8001e18:	bf00      	nop
 8001e1a:	e000      	b.n	8001e1e <normalState+0x9fe>
		break;
 8001e1c:	bf00      	nop
	}
}
 8001e1e:	bf00      	nop
 8001e20:	3738      	adds	r7, #56	; 0x38
 8001e22:	46bd      	mov	sp, r7
 8001e24:	bd80      	pop	{r7, pc}
 8001e26:	bf00      	nop
 8001e28:	20000118 	.word	0x20000118
 8001e2c:	2000002c 	.word	0x2000002c
 8001e30:	20000024 	.word	0x20000024
 8001e34:	2000013c 	.word	0x2000013c
 8001e38:	2000011c 	.word	0x2000011c
 8001e3c:	08005f9c 	.word	0x08005f9c
 8001e40:	200001d0 	.word	0x200001d0
 8001e44:	08005fc4 	.word	0x08005fc4
 8001e48:	20000028 	.word	0x20000028
 8001e4c:	08005fec 	.word	0x08005fec
 8001e50:	08006014 	.word	0x08006014

08001e54 <fsm_pedestrian>:
 */

#include "global.h"
char str[50];
void fsm_pedestrian(void)
{
 8001e54:	b580      	push	{r7, lr}
 8001e56:	af00      	add	r7, sp, #0
	switch(pedestrian_flag)
 8001e58:	4b52      	ldr	r3, [pc, #328]	; (8001fa4 <fsm_pedestrian+0x150>)
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	2b10      	cmp	r3, #16
 8001e5e:	d036      	beq.n	8001ece <fsm_pedestrian+0x7a>
 8001e60:	2b10      	cmp	r3, #16
 8001e62:	f300 809a 	bgt.w	8001f9a <fsm_pedestrian+0x146>
 8001e66:	2b0e      	cmp	r3, #14
 8001e68:	d002      	beq.n	8001e70 <fsm_pedestrian+0x1c>
 8001e6a:	2b0f      	cmp	r3, #15
 8001e6c:	d013      	beq.n	8001e96 <fsm_pedestrian+0x42>
					buzzer(0);
			}
			break;

		default:
			break;
 8001e6e:	e094      	b.n	8001f9a <fsm_pedestrian+0x146>
			buzzer(0);
 8001e70:	2000      	movs	r0, #0
 8001e72:	f7fe ff8f 	bl	8000d94 <buzzer>
			frequency = -1;
 8001e76:	4b4c      	ldr	r3, [pc, #304]	; (8001fa8 <fsm_pedestrian+0x154>)
 8001e78:	f04f 32ff 	mov.w	r2, #4294967295
 8001e7c:	601a      	str	r2, [r3, #0]
			frequency1 = 0;
 8001e7e:	4b4b      	ldr	r3, [pc, #300]	; (8001fac <fsm_pedestrian+0x158>)
 8001e80:	2200      	movs	r2, #0
 8001e82:	601a      	str	r2, [r3, #0]
			flag = 0;
 8001e84:	4b4a      	ldr	r3, [pc, #296]	; (8001fb0 <fsm_pedestrian+0x15c>)
 8001e86:	2200      	movs	r2, #0
 8001e88:	601a      	str	r2, [r3, #0]
			setFlag(4);
 8001e8a:	2004      	movs	r0, #4
 8001e8c:	f000 fb80 	bl	8002590 <setFlag>
			clearPedestrian();
 8001e90:	f7ff f85a 	bl	8000f48 <clearPedestrian>
			break;
 8001e94:	e084      	b.n	8001fa0 <fsm_pedestrian+0x14c>
			buzzer(0);
 8001e96:	2000      	movs	r0, #0
 8001e98:	f7fe ff7c 	bl	8000d94 <buzzer>
			frequency = -1;
 8001e9c:	4b42      	ldr	r3, [pc, #264]	; (8001fa8 <fsm_pedestrian+0x154>)
 8001e9e:	f04f 32ff 	mov.w	r2, #4294967295
 8001ea2:	601a      	str	r2, [r3, #0]
			frequency1 = 0;
 8001ea4:	4b41      	ldr	r3, [pc, #260]	; (8001fac <fsm_pedestrian+0x158>)
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	601a      	str	r2, [r3, #0]
			flag = 0;
 8001eaa:	4b41      	ldr	r3, [pc, #260]	; (8001fb0 <fsm_pedestrian+0x15c>)
 8001eac:	2200      	movs	r2, #0
 8001eae:	601a      	str	r2, [r3, #0]
			setFlag(4);
 8001eb0:	2004      	movs	r0, #4
 8001eb2:	f000 fb6d 	bl	8002590 <setFlag>
			if(isTimerUp(3) == 1)
 8001eb6:	2003      	movs	r0, #3
 8001eb8:	f000 fb56 	bl	8002568 <isTimerUp>
 8001ebc:	4603      	mov	r3, r0
 8001ebe:	2b01      	cmp	r3, #1
 8001ec0:	d102      	bne.n	8001ec8 <fsm_pedestrian+0x74>
				pedestrian_flag = Pedestrian_INIT;
 8001ec2:	4b38      	ldr	r3, [pc, #224]	; (8001fa4 <fsm_pedestrian+0x150>)
 8001ec4:	220e      	movs	r2, #14
 8001ec6:	601a      	str	r2, [r3, #0]
			displayPedestrianRed();
 8001ec8:	f7ff f852 	bl	8000f70 <displayPedestrianRed>
			break;
 8001ecc:	e068      	b.n	8001fa0 <fsm_pedestrian+0x14c>
			if(isTimerUp(3) == 1)
 8001ece:	2003      	movs	r0, #3
 8001ed0:	f000 fb4a 	bl	8002568 <isTimerUp>
 8001ed4:	4603      	mov	r3, r0
 8001ed6:	2b01      	cmp	r3, #1
 8001ed8:	d102      	bne.n	8001ee0 <fsm_pedestrian+0x8c>
				pedestrian_flag = Pedestrian_INIT;
 8001eda:	4b32      	ldr	r3, [pc, #200]	; (8001fa4 <fsm_pedestrian+0x150>)
 8001edc:	220e      	movs	r2, #14
 8001ede:	601a      	str	r2, [r3, #0]
			displayPedestrianGreen();
 8001ee0:	f7ff f85a 	bl	8000f98 <displayPedestrianGreen>
			if(isTimerUp(4) == 1)
 8001ee4:	2004      	movs	r0, #4
 8001ee6:	f000 fb3f 	bl	8002568 <isTimerUp>
 8001eea:	4603      	mov	r3, r0
 8001eec:	2b01      	cmp	r3, #1
 8001eee:	d118      	bne.n	8001f22 <fsm_pedestrian+0xce>
				frequency1 = 1;
 8001ef0:	4b2e      	ldr	r3, [pc, #184]	; (8001fac <fsm_pedestrian+0x158>)
 8001ef2:	2201      	movs	r2, #1
 8001ef4:	601a      	str	r2, [r3, #0]
				frequency += 1;
 8001ef6:	4b2c      	ldr	r3, [pc, #176]	; (8001fa8 <fsm_pedestrian+0x154>)
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	3301      	adds	r3, #1
 8001efc:	4a2a      	ldr	r2, [pc, #168]	; (8001fa8 <fsm_pedestrian+0x154>)
 8001efe:	6013      	str	r3, [r2, #0]
				setTimer(4, 50);
 8001f00:	2132      	movs	r1, #50	; 0x32
 8001f02:	2004      	movs	r0, #4
 8001f04:	f000 fb54 	bl	80025b0 <setTimer>
				setTimer(5, freq[frequency]);
 8001f08:	4b27      	ldr	r3, [pc, #156]	; (8001fa8 <fsm_pedestrian+0x154>)
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	4a29      	ldr	r2, [pc, #164]	; (8001fb4 <fsm_pedestrian+0x160>)
 8001f0e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001f12:	4619      	mov	r1, r3
 8001f14:	2005      	movs	r0, #5
 8001f16:	f000 fb4b 	bl	80025b0 <setTimer>
				setTimer(6, 5);
 8001f1a:	2105      	movs	r1, #5
 8001f1c:	2006      	movs	r0, #6
 8001f1e:	f000 fb47 	bl	80025b0 <setTimer>
			if(frequency1 == 1)
 8001f22:	4b22      	ldr	r3, [pc, #136]	; (8001fac <fsm_pedestrian+0x158>)
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	2b01      	cmp	r3, #1
 8001f28:	d11c      	bne.n	8001f64 <fsm_pedestrian+0x110>
				if(isTimerUp(6) == 1)
 8001f2a:	2006      	movs	r0, #6
 8001f2c:	f000 fb1c 	bl	8002568 <isTimerUp>
 8001f30:	4603      	mov	r3, r0
 8001f32:	2b01      	cmp	r3, #1
 8001f34:	d111      	bne.n	8001f5a <fsm_pedestrian+0x106>
					buzzer(0);
 8001f36:	2000      	movs	r0, #0
 8001f38:	f7fe ff2c 	bl	8000d94 <buzzer>
					setTimer(5, freq[frequency]);
 8001f3c:	4b1a      	ldr	r3, [pc, #104]	; (8001fa8 <fsm_pedestrian+0x154>)
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	4a1c      	ldr	r2, [pc, #112]	; (8001fb4 <fsm_pedestrian+0x160>)
 8001f42:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001f46:	4619      	mov	r1, r3
 8001f48:	2005      	movs	r0, #5
 8001f4a:	f000 fb31 	bl	80025b0 <setTimer>
					frequency1++;
 8001f4e:	4b17      	ldr	r3, [pc, #92]	; (8001fac <fsm_pedestrian+0x158>)
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	3301      	adds	r3, #1
 8001f54:	4a15      	ldr	r2, [pc, #84]	; (8001fac <fsm_pedestrian+0x158>)
 8001f56:	6013      	str	r3, [r2, #0]
 8001f58:	e004      	b.n	8001f64 <fsm_pedestrian+0x110>
					buzzer(buzzerValue);
 8001f5a:	4b17      	ldr	r3, [pc, #92]	; (8001fb8 <fsm_pedestrian+0x164>)
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	4618      	mov	r0, r3
 8001f60:	f7fe ff18 	bl	8000d94 <buzzer>
			if(frequency1 == 2)
 8001f64:	4b11      	ldr	r3, [pc, #68]	; (8001fac <fsm_pedestrian+0x158>)
 8001f66:	681b      	ldr	r3, [r3, #0]
 8001f68:	2b02      	cmp	r3, #2
 8001f6a:	d118      	bne.n	8001f9e <fsm_pedestrian+0x14a>
				if(isTimerUp(5) == 1)
 8001f6c:	2005      	movs	r0, #5
 8001f6e:	f000 fafb 	bl	8002568 <isTimerUp>
 8001f72:	4603      	mov	r3, r0
 8001f74:	2b01      	cmp	r3, #1
 8001f76:	d10c      	bne.n	8001f92 <fsm_pedestrian+0x13e>
					buzzer(buzzerValue);
 8001f78:	4b0f      	ldr	r3, [pc, #60]	; (8001fb8 <fsm_pedestrian+0x164>)
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	4618      	mov	r0, r3
 8001f7e:	f7fe ff09 	bl	8000d94 <buzzer>
					setTimer(6, 5);
 8001f82:	2105      	movs	r1, #5
 8001f84:	2006      	movs	r0, #6
 8001f86:	f000 fb13 	bl	80025b0 <setTimer>
					frequency1 = 1;
 8001f8a:	4b08      	ldr	r3, [pc, #32]	; (8001fac <fsm_pedestrian+0x158>)
 8001f8c:	2201      	movs	r2, #1
 8001f8e:	601a      	str	r2, [r3, #0]
			break;
 8001f90:	e005      	b.n	8001f9e <fsm_pedestrian+0x14a>
					buzzer(0);
 8001f92:	2000      	movs	r0, #0
 8001f94:	f7fe fefe 	bl	8000d94 <buzzer>
			break;
 8001f98:	e001      	b.n	8001f9e <fsm_pedestrian+0x14a>
			break;
 8001f9a:	bf00      	nop
 8001f9c:	e000      	b.n	8001fa0 <fsm_pedestrian+0x14c>
			break;
 8001f9e:	bf00      	nop
	}
}
 8001fa0:	bf00      	nop
 8001fa2:	bd80      	pop	{r7, pc}
 8001fa4:	20000030 	.word	0x20000030
 8001fa8:	20000034 	.word	0x20000034
 8001fac:	20000124 	.word	0x20000124
 8001fb0:	20000128 	.word	0x20000128
 8001fb4:	20000038 	.word	0x20000038
 8001fb8:	20000120 	.word	0x20000120

08001fbc <HAL_TIM_PeriodElapsedCallback>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001fbc:	b580      	push	{r7, lr}
 8001fbe:	b082      	sub	sp, #8
 8001fc0:	af00      	add	r7, sp, #0
 8001fc2:	6078      	str	r0, [r7, #4]
	timerRun();
 8001fc4:	f000 fb0c 	bl	80025e0 <timerRun>
	SCH_Update();
 8001fc8:	f000 fa7c 	bl	80024c4 <SCH_Update>
	Button_Reading();
 8001fcc:	f7fe fe2a 	bl	8000c24 <Button_Reading>
}
 8001fd0:	bf00      	nop
 8001fd2:	3708      	adds	r7, #8
 8001fd4:	46bd      	mov	sp, r7
 8001fd6:	bd80      	pop	{r7, pc}

08001fd8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001fd8:	b580      	push	{r7, lr}
 8001fda:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001fdc:	f000 fcce 	bl	800297c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001fe0:	f000 f824 	bl	800202c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001fe4:	f000 f950 	bl	8002288 <MX_GPIO_Init>
  MX_TIM3_Init();
 8001fe8:	f000 f8ae 	bl	8002148 <MX_TIM3_Init>
  MX_TIM2_Init();
 8001fec:	f000 f860 	bl	80020b0 <MX_TIM2_Init>
  MX_USART2_UART_Init();
 8001ff0:	f000 f920 	bl	8002234 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */

 HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8001ff4:	2100      	movs	r1, #0
 8001ff6:	4809      	ldr	r0, [pc, #36]	; (800201c <main+0x44>)
 8001ff8:	f001 fdd2 	bl	8003ba0 <HAL_TIM_PWM_Start>
 HAL_TIM_Base_Start_IT(&htim2);
 8001ffc:	4808      	ldr	r0, [pc, #32]	; (8002020 <main+0x48>)
 8001ffe:	f001 fd25 	bl	8003a4c <HAL_TIM_Base_Start_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

// SCH_Add_Task(timerRun, 0, 1);
 SCH_Add_Task(normalState, 1, 1);
 8002002:	2201      	movs	r2, #1
 8002004:	2101      	movs	r1, #1
 8002006:	4807      	ldr	r0, [pc, #28]	; (8002024 <main+0x4c>)
 8002008:	f000 fa3e 	bl	8002488 <SCH_Add_Task>
 SCH_Add_Task(fsm_pedestrian, 1, 1);
 800200c:	2201      	movs	r2, #1
 800200e:	2101      	movs	r1, #1
 8002010:	4805      	ldr	r0, [pc, #20]	; (8002028 <main+0x50>)
 8002012:	f000 fa39 	bl	8002488 <SCH_Add_Task>

  while (1)
  {
    /* USER CODE END WHILE */
	  SCH_Dispatch_Tasks();
 8002016:	f000 fa7b 	bl	8002510 <SCH_Dispatch_Tasks>
 800201a:	e7fc      	b.n	8002016 <main+0x3e>
 800201c:	20000140 	.word	0x20000140
 8002020:	20000188 	.word	0x20000188
 8002024:	08001421 	.word	0x08001421
 8002028:	08001e55 	.word	0x08001e55

0800202c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800202c:	b580      	push	{r7, lr}
 800202e:	b090      	sub	sp, #64	; 0x40
 8002030:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002032:	f107 0318 	add.w	r3, r7, #24
 8002036:	2228      	movs	r2, #40	; 0x28
 8002038:	2100      	movs	r1, #0
 800203a:	4618      	mov	r0, r3
 800203c:	f003 fa7a 	bl	8005534 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002040:	1d3b      	adds	r3, r7, #4
 8002042:	2200      	movs	r2, #0
 8002044:	601a      	str	r2, [r3, #0]
 8002046:	605a      	str	r2, [r3, #4]
 8002048:	609a      	str	r2, [r3, #8]
 800204a:	60da      	str	r2, [r3, #12]
 800204c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800204e:	2302      	movs	r3, #2
 8002050:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002052:	2301      	movs	r3, #1
 8002054:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002056:	2310      	movs	r3, #16
 8002058:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800205a:	2302      	movs	r3, #2
 800205c:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 800205e:	2300      	movs	r3, #0
 8002060:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8002062:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8002066:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002068:	f107 0318 	add.w	r3, r7, #24
 800206c:	4618      	mov	r0, r3
 800206e:	f001 f88f 	bl	8003190 <HAL_RCC_OscConfig>
 8002072:	4603      	mov	r3, r0
 8002074:	2b00      	cmp	r3, #0
 8002076:	d001      	beq.n	800207c <SystemClock_Config+0x50>
  {
    Error_Handler();
 8002078:	f000 f974 	bl	8002364 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800207c:	230f      	movs	r3, #15
 800207e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002080:	2302      	movs	r3, #2
 8002082:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002084:	2300      	movs	r3, #0
 8002086:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002088:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800208c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800208e:	2300      	movs	r3, #0
 8002090:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002092:	1d3b      	adds	r3, r7, #4
 8002094:	2102      	movs	r1, #2
 8002096:	4618      	mov	r0, r3
 8002098:	f001 fafa 	bl	8003690 <HAL_RCC_ClockConfig>
 800209c:	4603      	mov	r3, r0
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d001      	beq.n	80020a6 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 80020a2:	f000 f95f 	bl	8002364 <Error_Handler>
  }
}
 80020a6:	bf00      	nop
 80020a8:	3740      	adds	r7, #64	; 0x40
 80020aa:	46bd      	mov	sp, r7
 80020ac:	bd80      	pop	{r7, pc}
	...

080020b0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80020b0:	b580      	push	{r7, lr}
 80020b2:	b086      	sub	sp, #24
 80020b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80020b6:	f107 0308 	add.w	r3, r7, #8
 80020ba:	2200      	movs	r2, #0
 80020bc:	601a      	str	r2, [r3, #0]
 80020be:	605a      	str	r2, [r3, #4]
 80020c0:	609a      	str	r2, [r3, #8]
 80020c2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80020c4:	463b      	mov	r3, r7
 80020c6:	2200      	movs	r2, #0
 80020c8:	601a      	str	r2, [r3, #0]
 80020ca:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80020cc:	4b1d      	ldr	r3, [pc, #116]	; (8002144 <MX_TIM2_Init+0x94>)
 80020ce:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80020d2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 6399;
 80020d4:	4b1b      	ldr	r3, [pc, #108]	; (8002144 <MX_TIM2_Init+0x94>)
 80020d6:	f641 02ff 	movw	r2, #6399	; 0x18ff
 80020da:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020dc:	4b19      	ldr	r3, [pc, #100]	; (8002144 <MX_TIM2_Init+0x94>)
 80020de:	2200      	movs	r2, #0
 80020e0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 99;
 80020e2:	4b18      	ldr	r3, [pc, #96]	; (8002144 <MX_TIM2_Init+0x94>)
 80020e4:	2263      	movs	r2, #99	; 0x63
 80020e6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80020e8:	4b16      	ldr	r3, [pc, #88]	; (8002144 <MX_TIM2_Init+0x94>)
 80020ea:	2200      	movs	r2, #0
 80020ec:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020ee:	4b15      	ldr	r3, [pc, #84]	; (8002144 <MX_TIM2_Init+0x94>)
 80020f0:	2200      	movs	r2, #0
 80020f2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80020f4:	4813      	ldr	r0, [pc, #76]	; (8002144 <MX_TIM2_Init+0x94>)
 80020f6:	f001 fc59 	bl	80039ac <HAL_TIM_Base_Init>
 80020fa:	4603      	mov	r3, r0
 80020fc:	2b00      	cmp	r3, #0
 80020fe:	d001      	beq.n	8002104 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8002100:	f000 f930 	bl	8002364 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002104:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002108:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800210a:	f107 0308 	add.w	r3, r7, #8
 800210e:	4619      	mov	r1, r3
 8002110:	480c      	ldr	r0, [pc, #48]	; (8002144 <MX_TIM2_Init+0x94>)
 8002112:	f001 ffb1 	bl	8004078 <HAL_TIM_ConfigClockSource>
 8002116:	4603      	mov	r3, r0
 8002118:	2b00      	cmp	r3, #0
 800211a:	d001      	beq.n	8002120 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 800211c:	f000 f922 	bl	8002364 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002120:	2300      	movs	r3, #0
 8002122:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002124:	2300      	movs	r3, #0
 8002126:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002128:	463b      	mov	r3, r7
 800212a:	4619      	mov	r1, r3
 800212c:	4805      	ldr	r0, [pc, #20]	; (8002144 <MX_TIM2_Init+0x94>)
 800212e:	f002 fb33 	bl	8004798 <HAL_TIMEx_MasterConfigSynchronization>
 8002132:	4603      	mov	r3, r0
 8002134:	2b00      	cmp	r3, #0
 8002136:	d001      	beq.n	800213c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8002138:	f000 f914 	bl	8002364 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800213c:	bf00      	nop
 800213e:	3718      	adds	r7, #24
 8002140:	46bd      	mov	sp, r7
 8002142:	bd80      	pop	{r7, pc}
 8002144:	20000188 	.word	0x20000188

08002148 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002148:	b580      	push	{r7, lr}
 800214a:	b08e      	sub	sp, #56	; 0x38
 800214c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800214e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002152:	2200      	movs	r2, #0
 8002154:	601a      	str	r2, [r3, #0]
 8002156:	605a      	str	r2, [r3, #4]
 8002158:	609a      	str	r2, [r3, #8]
 800215a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800215c:	f107 0320 	add.w	r3, r7, #32
 8002160:	2200      	movs	r2, #0
 8002162:	601a      	str	r2, [r3, #0]
 8002164:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002166:	1d3b      	adds	r3, r7, #4
 8002168:	2200      	movs	r2, #0
 800216a:	601a      	str	r2, [r3, #0]
 800216c:	605a      	str	r2, [r3, #4]
 800216e:	609a      	str	r2, [r3, #8]
 8002170:	60da      	str	r2, [r3, #12]
 8002172:	611a      	str	r2, [r3, #16]
 8002174:	615a      	str	r2, [r3, #20]
 8002176:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002178:	4b2c      	ldr	r3, [pc, #176]	; (800222c <MX_TIM3_Init+0xe4>)
 800217a:	4a2d      	ldr	r2, [pc, #180]	; (8002230 <MX_TIM3_Init+0xe8>)
 800217c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 800217e:	4b2b      	ldr	r3, [pc, #172]	; (800222c <MX_TIM3_Init+0xe4>)
 8002180:	223f      	movs	r2, #63	; 0x3f
 8002182:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002184:	4b29      	ldr	r3, [pc, #164]	; (800222c <MX_TIM3_Init+0xe4>)
 8002186:	2200      	movs	r2, #0
 8002188:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 800218a:	4b28      	ldr	r3, [pc, #160]	; (800222c <MX_TIM3_Init+0xe4>)
 800218c:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002190:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002192:	4b26      	ldr	r3, [pc, #152]	; (800222c <MX_TIM3_Init+0xe4>)
 8002194:	2200      	movs	r2, #0
 8002196:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002198:	4b24      	ldr	r3, [pc, #144]	; (800222c <MX_TIM3_Init+0xe4>)
 800219a:	2200      	movs	r2, #0
 800219c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800219e:	4823      	ldr	r0, [pc, #140]	; (800222c <MX_TIM3_Init+0xe4>)
 80021a0:	f001 fc04 	bl	80039ac <HAL_TIM_Base_Init>
 80021a4:	4603      	mov	r3, r0
 80021a6:	2b00      	cmp	r3, #0
 80021a8:	d001      	beq.n	80021ae <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 80021aa:	f000 f8db 	bl	8002364 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80021ae:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80021b2:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80021b4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80021b8:	4619      	mov	r1, r3
 80021ba:	481c      	ldr	r0, [pc, #112]	; (800222c <MX_TIM3_Init+0xe4>)
 80021bc:	f001 ff5c 	bl	8004078 <HAL_TIM_ConfigClockSource>
 80021c0:	4603      	mov	r3, r0
 80021c2:	2b00      	cmp	r3, #0
 80021c4:	d001      	beq.n	80021ca <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 80021c6:	f000 f8cd 	bl	8002364 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80021ca:	4818      	ldr	r0, [pc, #96]	; (800222c <MX_TIM3_Init+0xe4>)
 80021cc:	f001 fc90 	bl	8003af0 <HAL_TIM_PWM_Init>
 80021d0:	4603      	mov	r3, r0
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d001      	beq.n	80021da <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 80021d6:	f000 f8c5 	bl	8002364 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80021da:	2300      	movs	r3, #0
 80021dc:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80021de:	2300      	movs	r3, #0
 80021e0:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80021e2:	f107 0320 	add.w	r3, r7, #32
 80021e6:	4619      	mov	r1, r3
 80021e8:	4810      	ldr	r0, [pc, #64]	; (800222c <MX_TIM3_Init+0xe4>)
 80021ea:	f002 fad5 	bl	8004798 <HAL_TIMEx_MasterConfigSynchronization>
 80021ee:	4603      	mov	r3, r0
 80021f0:	2b00      	cmp	r3, #0
 80021f2:	d001      	beq.n	80021f8 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 80021f4:	f000 f8b6 	bl	8002364 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80021f8:	2360      	movs	r3, #96	; 0x60
 80021fa:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80021fc:	2300      	movs	r3, #0
 80021fe:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002200:	2300      	movs	r3, #0
 8002202:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002204:	2300      	movs	r3, #0
 8002206:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002208:	1d3b      	adds	r3, r7, #4
 800220a:	2200      	movs	r2, #0
 800220c:	4619      	mov	r1, r3
 800220e:	4807      	ldr	r0, [pc, #28]	; (800222c <MX_TIM3_Init+0xe4>)
 8002210:	f001 fe70 	bl	8003ef4 <HAL_TIM_PWM_ConfigChannel>
 8002214:	4603      	mov	r3, r0
 8002216:	2b00      	cmp	r3, #0
 8002218:	d001      	beq.n	800221e <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 800221a:	f000 f8a3 	bl	8002364 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800221e:	4803      	ldr	r0, [pc, #12]	; (800222c <MX_TIM3_Init+0xe4>)
 8002220:	f000 fa80 	bl	8002724 <HAL_TIM_MspPostInit>

}
 8002224:	bf00      	nop
 8002226:	3738      	adds	r7, #56	; 0x38
 8002228:	46bd      	mov	sp, r7
 800222a:	bd80      	pop	{r7, pc}
 800222c:	20000140 	.word	0x20000140
 8002230:	40000400 	.word	0x40000400

08002234 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002234:	b580      	push	{r7, lr}
 8002236:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002238:	4b11      	ldr	r3, [pc, #68]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 800223a:	4a12      	ldr	r2, [pc, #72]	; (8002284 <MX_USART2_UART_Init+0x50>)
 800223c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800223e:	4b10      	ldr	r3, [pc, #64]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 8002240:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8002244:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002246:	4b0e      	ldr	r3, [pc, #56]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 8002248:	2200      	movs	r2, #0
 800224a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800224c:	4b0c      	ldr	r3, [pc, #48]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 800224e:	2200      	movs	r2, #0
 8002250:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002252:	4b0b      	ldr	r3, [pc, #44]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 8002254:	2200      	movs	r2, #0
 8002256:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002258:	4b09      	ldr	r3, [pc, #36]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 800225a:	220c      	movs	r2, #12
 800225c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800225e:	4b08      	ldr	r3, [pc, #32]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 8002260:	2200      	movs	r2, #0
 8002262:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002264:	4b06      	ldr	r3, [pc, #24]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 8002266:	2200      	movs	r2, #0
 8002268:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800226a:	4805      	ldr	r0, [pc, #20]	; (8002280 <MX_USART2_UART_Init+0x4c>)
 800226c:	f002 fb04 	bl	8004878 <HAL_UART_Init>
 8002270:	4603      	mov	r3, r0
 8002272:	2b00      	cmp	r3, #0
 8002274:	d001      	beq.n	800227a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002276:	f000 f875 	bl	8002364 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800227a:	bf00      	nop
 800227c:	bd80      	pop	{r7, pc}
 800227e:	bf00      	nop
 8002280:	200001d0 	.word	0x200001d0
 8002284:	40004400 	.word	0x40004400

08002288 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002288:	b580      	push	{r7, lr}
 800228a:	b086      	sub	sp, #24
 800228c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800228e:	f107 0308 	add.w	r3, r7, #8
 8002292:	2200      	movs	r2, #0
 8002294:	601a      	str	r2, [r3, #0]
 8002296:	605a      	str	r2, [r3, #4]
 8002298:	609a      	str	r2, [r3, #8]
 800229a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800229c:	4b2e      	ldr	r3, [pc, #184]	; (8002358 <MX_GPIO_Init+0xd0>)
 800229e:	699b      	ldr	r3, [r3, #24]
 80022a0:	4a2d      	ldr	r2, [pc, #180]	; (8002358 <MX_GPIO_Init+0xd0>)
 80022a2:	f043 0304 	orr.w	r3, r3, #4
 80022a6:	6193      	str	r3, [r2, #24]
 80022a8:	4b2b      	ldr	r3, [pc, #172]	; (8002358 <MX_GPIO_Init+0xd0>)
 80022aa:	699b      	ldr	r3, [r3, #24]
 80022ac:	f003 0304 	and.w	r3, r3, #4
 80022b0:	607b      	str	r3, [r7, #4]
 80022b2:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80022b4:	4b28      	ldr	r3, [pc, #160]	; (8002358 <MX_GPIO_Init+0xd0>)
 80022b6:	699b      	ldr	r3, [r3, #24]
 80022b8:	4a27      	ldr	r2, [pc, #156]	; (8002358 <MX_GPIO_Init+0xd0>)
 80022ba:	f043 0308 	orr.w	r3, r3, #8
 80022be:	6193      	str	r3, [r2, #24]
 80022c0:	4b25      	ldr	r3, [pc, #148]	; (8002358 <MX_GPIO_Init+0xd0>)
 80022c2:	699b      	ldr	r3, [r3, #24]
 80022c4:	f003 0308 	and.w	r3, r3, #8
 80022c8:	603b      	str	r3, [r7, #0]
 80022ca:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D6_Pin|D3_Pin|D5_Pin|D4_Pin, GPIO_PIN_RESET);
 80022cc:	2200      	movs	r2, #0
 80022ce:	f44f 6187 	mov.w	r1, #1080	; 0x438
 80022d2:	4822      	ldr	r0, [pc, #136]	; (800235c <MX_GPIO_Init+0xd4>)
 80022d4:	f000 ff0f 	bl	80030f6 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, D7_Pin|D2_Pin, GPIO_PIN_RESET);
 80022d8:	2200      	movs	r2, #0
 80022da:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80022de:	4820      	ldr	r0, [pc, #128]	; (8002360 <MX_GPIO_Init+0xd8>)
 80022e0:	f000 ff09 	bl	80030f6 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin */
  GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin;
 80022e4:	2313      	movs	r3, #19
 80022e6:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80022e8:	2300      	movs	r3, #0
 80022ea:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022ec:	2300      	movs	r3, #0
 80022ee:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022f0:	f107 0308 	add.w	r3, r7, #8
 80022f4:	4619      	mov	r1, r3
 80022f6:	481a      	ldr	r0, [pc, #104]	; (8002360 <MX_GPIO_Init+0xd8>)
 80022f8:	f000 fd62 	bl	8002dc0 <HAL_GPIO_Init>

  /*Configure GPIO pin : A3_Pin */
  GPIO_InitStruct.Pin = A3_Pin;
 80022fc:	2301      	movs	r3, #1
 80022fe:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002300:	2300      	movs	r3, #0
 8002302:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002304:	2300      	movs	r3, #0
 8002306:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 8002308:	f107 0308 	add.w	r3, r7, #8
 800230c:	4619      	mov	r1, r3
 800230e:	4813      	ldr	r0, [pc, #76]	; (800235c <MX_GPIO_Init+0xd4>)
 8002310:	f000 fd56 	bl	8002dc0 <HAL_GPIO_Init>

  /*Configure GPIO pins : D6_Pin D3_Pin D5_Pin D4_Pin */
  GPIO_InitStruct.Pin = D6_Pin|D3_Pin|D5_Pin|D4_Pin;
 8002314:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8002318:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800231a:	2301      	movs	r3, #1
 800231c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800231e:	2300      	movs	r3, #0
 8002320:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002322:	2302      	movs	r3, #2
 8002324:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002326:	f107 0308 	add.w	r3, r7, #8
 800232a:	4619      	mov	r1, r3
 800232c:	480b      	ldr	r0, [pc, #44]	; (800235c <MX_GPIO_Init+0xd4>)
 800232e:	f000 fd47 	bl	8002dc0 <HAL_GPIO_Init>

  /*Configure GPIO pins : D7_Pin D2_Pin */
  GPIO_InitStruct.Pin = D7_Pin|D2_Pin;
 8002332:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8002336:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002338:	2301      	movs	r3, #1
 800233a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800233c:	2300      	movs	r3, #0
 800233e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002340:	2302      	movs	r3, #2
 8002342:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002344:	f107 0308 	add.w	r3, r7, #8
 8002348:	4619      	mov	r1, r3
 800234a:	4805      	ldr	r0, [pc, #20]	; (8002360 <MX_GPIO_Init+0xd8>)
 800234c:	f000 fd38 	bl	8002dc0 <HAL_GPIO_Init>

}
 8002350:	bf00      	nop
 8002352:	3718      	adds	r7, #24
 8002354:	46bd      	mov	sp, r7
 8002356:	bd80      	pop	{r7, pc}
 8002358:	40021000 	.word	0x40021000
 800235c:	40010c00 	.word	0x40010c00
 8002360:	40010800 	.word	0x40010800

08002364 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002364:	b480      	push	{r7}
 8002366:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002368:	b672      	cpsid	i
}
 800236a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800236c:	e7fe      	b.n	800236c <Error_Handler+0x8>
	...

08002370 <addNode>:
{
	head = NULL;
}

void addNode(sTask newTask)
{
 8002370:	b590      	push	{r4, r7, lr}
 8002372:	b087      	sub	sp, #28
 8002374:	af00      	add	r7, sp, #0
 8002376:	463c      	mov	r4, r7
 8002378:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
 800237c:	2014      	movs	r0, #20
 800237e:	f003 f8c9 	bl	8005514 <malloc>
 8002382:	4603      	mov	r3, r0
 8002384:	613b      	str	r3, [r7, #16]

	newNode -> data.pTask = newTask.pTask;
 8002386:	683a      	ldr	r2, [r7, #0]
 8002388:	693b      	ldr	r3, [r7, #16]
 800238a:	601a      	str	r2, [r3, #0]
	newNode -> data.Delay = newTask.Delay;
 800238c:	687a      	ldr	r2, [r7, #4]
 800238e:	693b      	ldr	r3, [r7, #16]
 8002390:	605a      	str	r2, [r3, #4]
	newNode -> data.Period = newTask.Period;
 8002392:	68ba      	ldr	r2, [r7, #8]
 8002394:	693b      	ldr	r3, [r7, #16]
 8002396:	609a      	str	r2, [r3, #8]
	newNode -> data.RunMe = newTask.RunMe;
 8002398:	7b3a      	ldrb	r2, [r7, #12]
 800239a:	693b      	ldr	r3, [r7, #16]
 800239c:	731a      	strb	r2, [r3, #12]
	newNode -> next = NULL;
 800239e:	693b      	ldr	r3, [r7, #16]
 80023a0:	2200      	movs	r2, #0
 80023a2:	611a      	str	r2, [r3, #16]

	// List is empty just addNode
	if(head == NULL)
 80023a4:	4b2b      	ldr	r3, [pc, #172]	; (8002454 <addNode+0xe4>)
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d103      	bne.n	80023b4 <addNode+0x44>
	{
		head = newNode;
 80023ac:	4a29      	ldr	r2, [pc, #164]	; (8002454 <addNode+0xe4>)
 80023ae:	693b      	ldr	r3, [r7, #16]
 80023b0:	6013      	str	r3, [r2, #0]
		return;
 80023b2:	e04c      	b.n	800244e <addNode+0xde>
	}

	struct Node* tmp = head;
 80023b4:	4b27      	ldr	r3, [pc, #156]	; (8002454 <addNode+0xe4>)
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	617b      	str	r3, [r7, #20]

	// If the list has A5 B3 C2. Adding D3  ->  D3 A2 B3 C2
	if(newNode -> data.Delay < tmp -> data.Delay )
 80023ba:	693b      	ldr	r3, [r7, #16]
 80023bc:	685a      	ldr	r2, [r3, #4]
 80023be:	697b      	ldr	r3, [r7, #20]
 80023c0:	685b      	ldr	r3, [r3, #4]
 80023c2:	429a      	cmp	r2, r3
 80023c4:	d21e      	bcs.n	8002404 <addNode+0x94>
	{
		tmp -> data.Delay -= newNode -> data.Delay;
 80023c6:	697b      	ldr	r3, [r7, #20]
 80023c8:	685a      	ldr	r2, [r3, #4]
 80023ca:	693b      	ldr	r3, [r7, #16]
 80023cc:	685b      	ldr	r3, [r3, #4]
 80023ce:	1ad2      	subs	r2, r2, r3
 80023d0:	697b      	ldr	r3, [r7, #20]
 80023d2:	605a      	str	r2, [r3, #4]
		newNode -> next = tmp;
 80023d4:	693b      	ldr	r3, [r7, #16]
 80023d6:	697a      	ldr	r2, [r7, #20]
 80023d8:	611a      	str	r2, [r3, #16]
		head = newNode;
 80023da:	4a1e      	ldr	r2, [pc, #120]	; (8002454 <addNode+0xe4>)
 80023dc:	693b      	ldr	r3, [r7, #16]
 80023de:	6013      	str	r3, [r2, #0]
		return;
 80023e0:	e035      	b.n	800244e <addNode+0xde>
	}

	// If the list has A5 B3 C2. Adding D9  ->  A5 B3 D1 C1
	while(tmp -> next !=NULL)
	{
		newNode -> data.Delay -= tmp -> data.Delay;
 80023e2:	693b      	ldr	r3, [r7, #16]
 80023e4:	685a      	ldr	r2, [r3, #4]
 80023e6:	697b      	ldr	r3, [r7, #20]
 80023e8:	685b      	ldr	r3, [r3, #4]
 80023ea:	1ad2      	subs	r2, r2, r3
 80023ec:	693b      	ldr	r3, [r7, #16]
 80023ee:	605a      	str	r2, [r3, #4]
		if(newNode -> data.Delay <= tmp -> next -> data.Delay)
 80023f0:	693b      	ldr	r3, [r7, #16]
 80023f2:	685a      	ldr	r2, [r3, #4]
 80023f4:	697b      	ldr	r3, [r7, #20]
 80023f6:	691b      	ldr	r3, [r3, #16]
 80023f8:	685b      	ldr	r3, [r3, #4]
 80023fa:	429a      	cmp	r2, r3
 80023fc:	d907      	bls.n	800240e <addNode+0x9e>
			break;

		tmp = tmp -> next;
 80023fe:	697b      	ldr	r3, [r7, #20]
 8002400:	691b      	ldr	r3, [r3, #16]
 8002402:	617b      	str	r3, [r7, #20]
	while(tmp -> next !=NULL)
 8002404:	697b      	ldr	r3, [r7, #20]
 8002406:	691b      	ldr	r3, [r3, #16]
 8002408:	2b00      	cmp	r3, #0
 800240a:	d1ea      	bne.n	80023e2 <addNode+0x72>
 800240c:	e000      	b.n	8002410 <addNode+0xa0>
			break;
 800240e:	bf00      	nop
	}

	// tmp currently in B3 and D become D1
	if(tmp -> next == NULL)
 8002410:	697b      	ldr	r3, [r7, #20]
 8002412:	691b      	ldr	r3, [r3, #16]
 8002414:	2b00      	cmp	r3, #0
 8002416:	d10a      	bne.n	800242e <addNode+0xbe>
	{
		newNode -> data.Delay -= tmp -> data.Delay;
 8002418:	693b      	ldr	r3, [r7, #16]
 800241a:	685a      	ldr	r2, [r3, #4]
 800241c:	697b      	ldr	r3, [r7, #20]
 800241e:	685b      	ldr	r3, [r3, #4]
 8002420:	1ad2      	subs	r2, r2, r3
 8002422:	693b      	ldr	r3, [r7, #16]
 8002424:	605a      	str	r2, [r3, #4]
		tmp -> next = newNode;
 8002426:	697b      	ldr	r3, [r7, #20]
 8002428:	693a      	ldr	r2, [r7, #16]
 800242a:	611a      	str	r2, [r3, #16]
 800242c:	e00f      	b.n	800244e <addNode+0xde>
	}
	else
	{
		tmp -> next -> data.Delay -= newNode -> data.Delay; // Convert C2 to C1
 800242e:	697b      	ldr	r3, [r7, #20]
 8002430:	691b      	ldr	r3, [r3, #16]
 8002432:	6859      	ldr	r1, [r3, #4]
 8002434:	693b      	ldr	r3, [r7, #16]
 8002436:	685a      	ldr	r2, [r3, #4]
 8002438:	697b      	ldr	r3, [r7, #20]
 800243a:	691b      	ldr	r3, [r3, #16]
 800243c:	1a8a      	subs	r2, r1, r2
 800243e:	605a      	str	r2, [r3, #4]
		newNode -> next = tmp -> next;
 8002440:	697b      	ldr	r3, [r7, #20]
 8002442:	691a      	ldr	r2, [r3, #16]
 8002444:	693b      	ldr	r3, [r7, #16]
 8002446:	611a      	str	r2, [r3, #16]
		tmp -> next = newNode;
 8002448:	697b      	ldr	r3, [r7, #20]
 800244a:	693a      	ldr	r2, [r7, #16]
 800244c:	611a      	str	r2, [r3, #16]
	}
}
 800244e:	371c      	adds	r7, #28
 8002450:	46bd      	mov	sp, r7
 8002452:	bd90      	pop	{r4, r7, pc}
 8002454:	2000012c 	.word	0x2000012c

08002458 <deleteBegin>:

void deleteBegin()
{
 8002458:	b580      	push	{r7, lr}
 800245a:	b082      	sub	sp, #8
 800245c:	af00      	add	r7, sp, #0
	struct Node* tmp = head;
 800245e:	4b09      	ldr	r3, [pc, #36]	; (8002484 <deleteBegin+0x2c>)
 8002460:	681b      	ldr	r3, [r3, #0]
 8002462:	607b      	str	r3, [r7, #4]
	if(tmp == NULL) return;
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	2b00      	cmp	r3, #0
 8002468:	d008      	beq.n	800247c <deleteBegin+0x24>
	head = head -> next;
 800246a:	4b06      	ldr	r3, [pc, #24]	; (8002484 <deleteBegin+0x2c>)
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	691b      	ldr	r3, [r3, #16]
 8002470:	4a04      	ldr	r2, [pc, #16]	; (8002484 <deleteBegin+0x2c>)
 8002472:	6013      	str	r3, [r2, #0]
	free(tmp);
 8002474:	6878      	ldr	r0, [r7, #4]
 8002476:	f003 f855 	bl	8005524 <free>
 800247a:	e000      	b.n	800247e <deleteBegin+0x26>
	if(tmp == NULL) return;
 800247c:	bf00      	nop
}
 800247e:	3708      	adds	r7, #8
 8002480:	46bd      	mov	sp, r7
 8002482:	bd80      	pop	{r7, pc}
 8002484:	2000012c 	.word	0x2000012c

08002488 <SCH_Add_Task>:

void SCH_Add_Task(void (*p_function)(), uint32_t DELAY, uint32_t PERIOD)
{
 8002488:	b580      	push	{r7, lr}
 800248a:	b088      	sub	sp, #32
 800248c:	af00      	add	r7, sp, #0
 800248e:	60f8      	str	r0, [r7, #12]
 8002490:	60b9      	str	r1, [r7, #8]
 8002492:	607a      	str	r2, [r7, #4]
	sTask newTask;
	newTask.pTask = p_function;
 8002494:	68fb      	ldr	r3, [r7, #12]
 8002496:	613b      	str	r3, [r7, #16]
	newTask.Delay = DELAY;
 8002498:	68bb      	ldr	r3, [r7, #8]
 800249a:	617b      	str	r3, [r7, #20]
	newTask.Period = PERIOD;
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	61bb      	str	r3, [r7, #24]
	if(newTask.Delay == 0)
 80024a0:	697b      	ldr	r3, [r7, #20]
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d102      	bne.n	80024ac <SCH_Add_Task+0x24>
		newTask.RunMe = 1;
 80024a6:	2301      	movs	r3, #1
 80024a8:	773b      	strb	r3, [r7, #28]
 80024aa:	e001      	b.n	80024b0 <SCH_Add_Task+0x28>
	else
		newTask.RunMe = 0;
 80024ac:	2300      	movs	r3, #0
 80024ae:	773b      	strb	r3, [r7, #28]

	addNode(newTask);
 80024b0:	f107 0310 	add.w	r3, r7, #16
 80024b4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80024b6:	f7ff ff5b 	bl	8002370 <addNode>
}
 80024ba:	bf00      	nop
 80024bc:	3720      	adds	r7, #32
 80024be:	46bd      	mov	sp, r7
 80024c0:	bd80      	pop	{r7, pc}
	...

080024c4 <SCH_Update>:

void SCH_Update(void)
{
 80024c4:	b480      	push	{r7}
 80024c6:	af00      	add	r7, sp, #0
	if(head == NULL) return;
 80024c8:	4b10      	ldr	r3, [pc, #64]	; (800250c <SCH_Update+0x48>)
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d018      	beq.n	8002502 <SCH_Update+0x3e>
	if(head -> data.Delay <= 0)
 80024d0:	4b0e      	ldr	r3, [pc, #56]	; (800250c <SCH_Update+0x48>)
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	685b      	ldr	r3, [r3, #4]
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d104      	bne.n	80024e4 <SCH_Update+0x20>
		head -> data.RunMe = 1;
 80024da:	4b0c      	ldr	r3, [pc, #48]	; (800250c <SCH_Update+0x48>)
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	2201      	movs	r2, #1
 80024e0:	731a      	strb	r2, [r3, #12]
 80024e2:	e00f      	b.n	8002504 <SCH_Update+0x40>
	else
	{
		head -> data.Delay--;
 80024e4:	4b09      	ldr	r3, [pc, #36]	; (800250c <SCH_Update+0x48>)
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	685a      	ldr	r2, [r3, #4]
 80024ea:	3a01      	subs	r2, #1
 80024ec:	605a      	str	r2, [r3, #4]
		if(head -> data.Delay <= 0) head -> data.RunMe = 1;
 80024ee:	4b07      	ldr	r3, [pc, #28]	; (800250c <SCH_Update+0x48>)
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	685b      	ldr	r3, [r3, #4]
 80024f4:	2b00      	cmp	r3, #0
 80024f6:	d105      	bne.n	8002504 <SCH_Update+0x40>
 80024f8:	4b04      	ldr	r3, [pc, #16]	; (800250c <SCH_Update+0x48>)
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	2201      	movs	r2, #1
 80024fe:	731a      	strb	r2, [r3, #12]
 8002500:	e000      	b.n	8002504 <SCH_Update+0x40>
	if(head == NULL) return;
 8002502:	bf00      	nop
	}
}
 8002504:	46bd      	mov	sp, r7
 8002506:	bc80      	pop	{r7}
 8002508:	4770      	bx	lr
 800250a:	bf00      	nop
 800250c:	2000012c 	.word	0x2000012c

08002510 <SCH_Dispatch_Tasks>:

void SCH_Dispatch_Tasks(void)
{
 8002510:	b590      	push	{r4, r7, lr}
 8002512:	b085      	sub	sp, #20
 8002514:	af00      	add	r7, sp, #0
	if(head == NULL) return;
 8002516:	4b13      	ldr	r3, [pc, #76]	; (8002564 <SCH_Dispatch_Tasks+0x54>)
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	2b00      	cmp	r3, #0
 800251c:	d01e      	beq.n	800255c <SCH_Dispatch_Tasks+0x4c>
	if(head -> data.RunMe > 0)
 800251e:	4b11      	ldr	r3, [pc, #68]	; (8002564 <SCH_Dispatch_Tasks+0x54>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	7b1b      	ldrb	r3, [r3, #12]
 8002524:	2b00      	cmp	r3, #0
 8002526:	d014      	beq.n	8002552 <SCH_Dispatch_Tasks+0x42>
	{
		(*head -> data.pTask)();
 8002528:	4b0e      	ldr	r3, [pc, #56]	; (8002564 <SCH_Dispatch_Tasks+0x54>)
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	4798      	blx	r3
		sTask newTask = head -> data;
 8002530:	4b0c      	ldr	r3, [pc, #48]	; (8002564 <SCH_Dispatch_Tasks+0x54>)
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	463c      	mov	r4, r7
 8002536:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002538:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		deleteBegin();
 800253c:	f7ff ff8c 	bl	8002458 <deleteBegin>
		if(newTask.Period != 0)
 8002540:	68bb      	ldr	r3, [r7, #8]
 8002542:	2b00      	cmp	r3, #0
 8002544:	d005      	beq.n	8002552 <SCH_Dispatch_Tasks+0x42>
			SCH_Add_Task(newTask.pTask, newTask.Period, newTask.Period);
 8002546:	683b      	ldr	r3, [r7, #0]
 8002548:	68b9      	ldr	r1, [r7, #8]
 800254a:	68ba      	ldr	r2, [r7, #8]
 800254c:	4618      	mov	r0, r3
 800254e:	f7ff ff9b 	bl	8002488 <SCH_Add_Task>
	}

	// Enter low-power mode (Sleep mode). The MCU will wake up on the next interrupt
	 HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLEEPENTRY_WFI);
 8002552:	2101      	movs	r1, #1
 8002554:	2000      	movs	r0, #0
 8002556:	f000 fdff 	bl	8003158 <HAL_PWR_EnterSLEEPMode>
 800255a:	e000      	b.n	800255e <SCH_Dispatch_Tasks+0x4e>
	if(head == NULL) return;
 800255c:	bf00      	nop
}
 800255e:	3714      	adds	r7, #20
 8002560:	46bd      	mov	sp, r7
 8002562:	bd90      	pop	{r4, r7, pc}
 8002564:	2000012c 	.word	0x2000012c

08002568 <isTimerUp>:

int timer_counter[TIMER];
int timer_flag[TIMER];

int isTimerUp(int timer)
{
 8002568:	b480      	push	{r7}
 800256a:	b083      	sub	sp, #12
 800256c:	af00      	add	r7, sp, #0
 800256e:	6078      	str	r0, [r7, #4]
	return (timer_flag[timer] == 1);
 8002570:	4a06      	ldr	r2, [pc, #24]	; (800258c <isTimerUp+0x24>)
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002578:	2b01      	cmp	r3, #1
 800257a:	bf0c      	ite	eq
 800257c:	2301      	moveq	r3, #1
 800257e:	2300      	movne	r3, #0
 8002580:	b2db      	uxtb	r3, r3
}
 8002582:	4618      	mov	r0, r3
 8002584:	370c      	adds	r7, #12
 8002586:	46bd      	mov	sp, r7
 8002588:	bc80      	pop	{r7}
 800258a:	4770      	bx	lr
 800258c:	20000238 	.word	0x20000238

08002590 <setFlag>:

void setFlag(int timer)
{
 8002590:	b480      	push	{r7}
 8002592:	b083      	sub	sp, #12
 8002594:	af00      	add	r7, sp, #0
 8002596:	6078      	str	r0, [r7, #4]
	timer_flag[timer] = 0;
 8002598:	4a04      	ldr	r2, [pc, #16]	; (80025ac <setFlag+0x1c>)
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	2100      	movs	r1, #0
 800259e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80025a2:	bf00      	nop
 80025a4:	370c      	adds	r7, #12
 80025a6:	46bd      	mov	sp, r7
 80025a8:	bc80      	pop	{r7}
 80025aa:	4770      	bx	lr
 80025ac:	20000238 	.word	0x20000238

080025b0 <setTimer>:

void setTimer(int timer, int duration)
{
 80025b0:	b480      	push	{r7}
 80025b2:	b083      	sub	sp, #12
 80025b4:	af00      	add	r7, sp, #0
 80025b6:	6078      	str	r0, [r7, #4]
 80025b8:	6039      	str	r1, [r7, #0]
	timer_counter[timer] = duration;
 80025ba:	4907      	ldr	r1, [pc, #28]	; (80025d8 <setTimer+0x28>)
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	683a      	ldr	r2, [r7, #0]
 80025c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	timer_flag[timer] = 0;
 80025c4:	4a05      	ldr	r2, [pc, #20]	; (80025dc <setTimer+0x2c>)
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	2100      	movs	r1, #0
 80025ca:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80025ce:	bf00      	nop
 80025d0:	370c      	adds	r7, #12
 80025d2:	46bd      	mov	sp, r7
 80025d4:	bc80      	pop	{r7}
 80025d6:	4770      	bx	lr
 80025d8:	20000218 	.word	0x20000218
 80025dc:	20000238 	.word	0x20000238

080025e0 <timerRun>:

void timerRun(void)
{
 80025e0:	b480      	push	{r7}
 80025e2:	b083      	sub	sp, #12
 80025e4:	af00      	add	r7, sp, #0
	for (int timer = 0; timer < TIMER; timer++)
 80025e6:	2300      	movs	r3, #0
 80025e8:	607b      	str	r3, [r7, #4]
 80025ea:	e01c      	b.n	8002626 <timerRun+0x46>
	{
		if(timer_counter[timer] > 0)
 80025ec:	4a12      	ldr	r2, [pc, #72]	; (8002638 <timerRun+0x58>)
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	dd13      	ble.n	8002620 <timerRun+0x40>
		{
			timer_counter[timer]--;
 80025f8:	4a0f      	ldr	r2, [pc, #60]	; (8002638 <timerRun+0x58>)
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002600:	1e5a      	subs	r2, r3, #1
 8002602:	490d      	ldr	r1, [pc, #52]	; (8002638 <timerRun+0x58>)
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if(timer_counter[timer] == 0)
 800260a:	4a0b      	ldr	r2, [pc, #44]	; (8002638 <timerRun+0x58>)
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002612:	2b00      	cmp	r3, #0
 8002614:	d104      	bne.n	8002620 <timerRun+0x40>
				timer_flag[timer] = 1;
 8002616:	4a09      	ldr	r2, [pc, #36]	; (800263c <timerRun+0x5c>)
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	2101      	movs	r1, #1
 800261c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for (int timer = 0; timer < TIMER; timer++)
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	3301      	adds	r3, #1
 8002624:	607b      	str	r3, [r7, #4]
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	2b07      	cmp	r3, #7
 800262a:	dddf      	ble.n	80025ec <timerRun+0xc>
		}
	}
}
 800262c:	bf00      	nop
 800262e:	bf00      	nop
 8002630:	370c      	adds	r7, #12
 8002632:	46bd      	mov	sp, r7
 8002634:	bc80      	pop	{r7}
 8002636:	4770      	bx	lr
 8002638:	20000218 	.word	0x20000218
 800263c:	20000238 	.word	0x20000238

08002640 <HAL_MspInit>:
 8002640:	b480      	push	{r7}
 8002642:	b085      	sub	sp, #20
 8002644:	af00      	add	r7, sp, #0
 8002646:	4b15      	ldr	r3, [pc, #84]	; (800269c <HAL_MspInit+0x5c>)
 8002648:	699b      	ldr	r3, [r3, #24]
 800264a:	4a14      	ldr	r2, [pc, #80]	; (800269c <HAL_MspInit+0x5c>)
 800264c:	f043 0301 	orr.w	r3, r3, #1
 8002650:	6193      	str	r3, [r2, #24]
 8002652:	4b12      	ldr	r3, [pc, #72]	; (800269c <HAL_MspInit+0x5c>)
 8002654:	699b      	ldr	r3, [r3, #24]
 8002656:	f003 0301 	and.w	r3, r3, #1
 800265a:	60bb      	str	r3, [r7, #8]
 800265c:	68bb      	ldr	r3, [r7, #8]
 800265e:	4b0f      	ldr	r3, [pc, #60]	; (800269c <HAL_MspInit+0x5c>)
 8002660:	69db      	ldr	r3, [r3, #28]
 8002662:	4a0e      	ldr	r2, [pc, #56]	; (800269c <HAL_MspInit+0x5c>)
 8002664:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002668:	61d3      	str	r3, [r2, #28]
 800266a:	4b0c      	ldr	r3, [pc, #48]	; (800269c <HAL_MspInit+0x5c>)
 800266c:	69db      	ldr	r3, [r3, #28]
 800266e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002672:	607b      	str	r3, [r7, #4]
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	4b0a      	ldr	r3, [pc, #40]	; (80026a0 <HAL_MspInit+0x60>)
 8002678:	685b      	ldr	r3, [r3, #4]
 800267a:	60fb      	str	r3, [r7, #12]
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8002682:	60fb      	str	r3, [r7, #12]
 8002684:	68fb      	ldr	r3, [r7, #12]
 8002686:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800268a:	60fb      	str	r3, [r7, #12]
 800268c:	4a04      	ldr	r2, [pc, #16]	; (80026a0 <HAL_MspInit+0x60>)
 800268e:	68fb      	ldr	r3, [r7, #12]
 8002690:	6053      	str	r3, [r2, #4]
 8002692:	bf00      	nop
 8002694:	3714      	adds	r7, #20
 8002696:	46bd      	mov	sp, r7
 8002698:	bc80      	pop	{r7}
 800269a:	4770      	bx	lr
 800269c:	40021000 	.word	0x40021000
 80026a0:	40010000 	.word	0x40010000

080026a4 <HAL_TIM_Base_MspInit>:
 80026a4:	b580      	push	{r7, lr}
 80026a6:	b084      	sub	sp, #16
 80026a8:	af00      	add	r7, sp, #0
 80026aa:	6078      	str	r0, [r7, #4]
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80026b4:	d114      	bne.n	80026e0 <HAL_TIM_Base_MspInit+0x3c>
 80026b6:	4b19      	ldr	r3, [pc, #100]	; (800271c <HAL_TIM_Base_MspInit+0x78>)
 80026b8:	69db      	ldr	r3, [r3, #28]
 80026ba:	4a18      	ldr	r2, [pc, #96]	; (800271c <HAL_TIM_Base_MspInit+0x78>)
 80026bc:	f043 0301 	orr.w	r3, r3, #1
 80026c0:	61d3      	str	r3, [r2, #28]
 80026c2:	4b16      	ldr	r3, [pc, #88]	; (800271c <HAL_TIM_Base_MspInit+0x78>)
 80026c4:	69db      	ldr	r3, [r3, #28]
 80026c6:	f003 0301 	and.w	r3, r3, #1
 80026ca:	60fb      	str	r3, [r7, #12]
 80026cc:	68fb      	ldr	r3, [r7, #12]
 80026ce:	2200      	movs	r2, #0
 80026d0:	2100      	movs	r1, #0
 80026d2:	201c      	movs	r0, #28
 80026d4:	f000 fa8b 	bl	8002bee <HAL_NVIC_SetPriority>
 80026d8:	201c      	movs	r0, #28
 80026da:	f000 faa4 	bl	8002c26 <HAL_NVIC_EnableIRQ>
 80026de:	e018      	b.n	8002712 <HAL_TIM_Base_MspInit+0x6e>
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	4a0e      	ldr	r2, [pc, #56]	; (8002720 <HAL_TIM_Base_MspInit+0x7c>)
 80026e6:	4293      	cmp	r3, r2
 80026e8:	d113      	bne.n	8002712 <HAL_TIM_Base_MspInit+0x6e>
 80026ea:	4b0c      	ldr	r3, [pc, #48]	; (800271c <HAL_TIM_Base_MspInit+0x78>)
 80026ec:	69db      	ldr	r3, [r3, #28]
 80026ee:	4a0b      	ldr	r2, [pc, #44]	; (800271c <HAL_TIM_Base_MspInit+0x78>)
 80026f0:	f043 0302 	orr.w	r3, r3, #2
 80026f4:	61d3      	str	r3, [r2, #28]
 80026f6:	4b09      	ldr	r3, [pc, #36]	; (800271c <HAL_TIM_Base_MspInit+0x78>)
 80026f8:	69db      	ldr	r3, [r3, #28]
 80026fa:	f003 0302 	and.w	r3, r3, #2
 80026fe:	60bb      	str	r3, [r7, #8]
 8002700:	68bb      	ldr	r3, [r7, #8]
 8002702:	2200      	movs	r2, #0
 8002704:	2100      	movs	r1, #0
 8002706:	201d      	movs	r0, #29
 8002708:	f000 fa71 	bl	8002bee <HAL_NVIC_SetPriority>
 800270c:	201d      	movs	r0, #29
 800270e:	f000 fa8a 	bl	8002c26 <HAL_NVIC_EnableIRQ>
 8002712:	bf00      	nop
 8002714:	3710      	adds	r7, #16
 8002716:	46bd      	mov	sp, r7
 8002718:	bd80      	pop	{r7, pc}
 800271a:	bf00      	nop
 800271c:	40021000 	.word	0x40021000
 8002720:	40000400 	.word	0x40000400

08002724 <HAL_TIM_MspPostInit>:
 8002724:	b580      	push	{r7, lr}
 8002726:	b088      	sub	sp, #32
 8002728:	af00      	add	r7, sp, #0
 800272a:	6078      	str	r0, [r7, #4]
 800272c:	f107 0310 	add.w	r3, r7, #16
 8002730:	2200      	movs	r2, #0
 8002732:	601a      	str	r2, [r3, #0]
 8002734:	605a      	str	r2, [r3, #4]
 8002736:	609a      	str	r2, [r3, #8]
 8002738:	60da      	str	r2, [r3, #12]
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	681b      	ldr	r3, [r3, #0]
 800273e:	4a0f      	ldr	r2, [pc, #60]	; (800277c <HAL_TIM_MspPostInit+0x58>)
 8002740:	4293      	cmp	r3, r2
 8002742:	d117      	bne.n	8002774 <HAL_TIM_MspPostInit+0x50>
 8002744:	4b0e      	ldr	r3, [pc, #56]	; (8002780 <HAL_TIM_MspPostInit+0x5c>)
 8002746:	699b      	ldr	r3, [r3, #24]
 8002748:	4a0d      	ldr	r2, [pc, #52]	; (8002780 <HAL_TIM_MspPostInit+0x5c>)
 800274a:	f043 0304 	orr.w	r3, r3, #4
 800274e:	6193      	str	r3, [r2, #24]
 8002750:	4b0b      	ldr	r3, [pc, #44]	; (8002780 <HAL_TIM_MspPostInit+0x5c>)
 8002752:	699b      	ldr	r3, [r3, #24]
 8002754:	f003 0304 	and.w	r3, r3, #4
 8002758:	60fb      	str	r3, [r7, #12]
 800275a:	68fb      	ldr	r3, [r7, #12]
 800275c:	2340      	movs	r3, #64	; 0x40
 800275e:	613b      	str	r3, [r7, #16]
 8002760:	2302      	movs	r3, #2
 8002762:	617b      	str	r3, [r7, #20]
 8002764:	2302      	movs	r3, #2
 8002766:	61fb      	str	r3, [r7, #28]
 8002768:	f107 0310 	add.w	r3, r7, #16
 800276c:	4619      	mov	r1, r3
 800276e:	4805      	ldr	r0, [pc, #20]	; (8002784 <HAL_TIM_MspPostInit+0x60>)
 8002770:	f000 fb26 	bl	8002dc0 <HAL_GPIO_Init>
 8002774:	bf00      	nop
 8002776:	3720      	adds	r7, #32
 8002778:	46bd      	mov	sp, r7
 800277a:	bd80      	pop	{r7, pc}
 800277c:	40000400 	.word	0x40000400
 8002780:	40021000 	.word	0x40021000
 8002784:	40010800 	.word	0x40010800

08002788 <HAL_UART_MspInit>:
 8002788:	b580      	push	{r7, lr}
 800278a:	b088      	sub	sp, #32
 800278c:	af00      	add	r7, sp, #0
 800278e:	6078      	str	r0, [r7, #4]
 8002790:	f107 0310 	add.w	r3, r7, #16
 8002794:	2200      	movs	r2, #0
 8002796:	601a      	str	r2, [r3, #0]
 8002798:	605a      	str	r2, [r3, #4]
 800279a:	609a      	str	r2, [r3, #8]
 800279c:	60da      	str	r2, [r3, #12]
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	4a1f      	ldr	r2, [pc, #124]	; (8002820 <HAL_UART_MspInit+0x98>)
 80027a4:	4293      	cmp	r3, r2
 80027a6:	d137      	bne.n	8002818 <HAL_UART_MspInit+0x90>
 80027a8:	4b1e      	ldr	r3, [pc, #120]	; (8002824 <HAL_UART_MspInit+0x9c>)
 80027aa:	69db      	ldr	r3, [r3, #28]
 80027ac:	4a1d      	ldr	r2, [pc, #116]	; (8002824 <HAL_UART_MspInit+0x9c>)
 80027ae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80027b2:	61d3      	str	r3, [r2, #28]
 80027b4:	4b1b      	ldr	r3, [pc, #108]	; (8002824 <HAL_UART_MspInit+0x9c>)
 80027b6:	69db      	ldr	r3, [r3, #28]
 80027b8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80027bc:	60fb      	str	r3, [r7, #12]
 80027be:	68fb      	ldr	r3, [r7, #12]
 80027c0:	4b18      	ldr	r3, [pc, #96]	; (8002824 <HAL_UART_MspInit+0x9c>)
 80027c2:	699b      	ldr	r3, [r3, #24]
 80027c4:	4a17      	ldr	r2, [pc, #92]	; (8002824 <HAL_UART_MspInit+0x9c>)
 80027c6:	f043 0304 	orr.w	r3, r3, #4
 80027ca:	6193      	str	r3, [r2, #24]
 80027cc:	4b15      	ldr	r3, [pc, #84]	; (8002824 <HAL_UART_MspInit+0x9c>)
 80027ce:	699b      	ldr	r3, [r3, #24]
 80027d0:	f003 0304 	and.w	r3, r3, #4
 80027d4:	60bb      	str	r3, [r7, #8]
 80027d6:	68bb      	ldr	r3, [r7, #8]
 80027d8:	2304      	movs	r3, #4
 80027da:	613b      	str	r3, [r7, #16]
 80027dc:	2302      	movs	r3, #2
 80027de:	617b      	str	r3, [r7, #20]
 80027e0:	2303      	movs	r3, #3
 80027e2:	61fb      	str	r3, [r7, #28]
 80027e4:	f107 0310 	add.w	r3, r7, #16
 80027e8:	4619      	mov	r1, r3
 80027ea:	480f      	ldr	r0, [pc, #60]	; (8002828 <HAL_UART_MspInit+0xa0>)
 80027ec:	f000 fae8 	bl	8002dc0 <HAL_GPIO_Init>
 80027f0:	2308      	movs	r3, #8
 80027f2:	613b      	str	r3, [r7, #16]
 80027f4:	2300      	movs	r3, #0
 80027f6:	617b      	str	r3, [r7, #20]
 80027f8:	2300      	movs	r3, #0
 80027fa:	61bb      	str	r3, [r7, #24]
 80027fc:	f107 0310 	add.w	r3, r7, #16
 8002800:	4619      	mov	r1, r3
 8002802:	4809      	ldr	r0, [pc, #36]	; (8002828 <HAL_UART_MspInit+0xa0>)
 8002804:	f000 fadc 	bl	8002dc0 <HAL_GPIO_Init>
 8002808:	2200      	movs	r2, #0
 800280a:	2100      	movs	r1, #0
 800280c:	2026      	movs	r0, #38	; 0x26
 800280e:	f000 f9ee 	bl	8002bee <HAL_NVIC_SetPriority>
 8002812:	2026      	movs	r0, #38	; 0x26
 8002814:	f000 fa07 	bl	8002c26 <HAL_NVIC_EnableIRQ>
 8002818:	bf00      	nop
 800281a:	3720      	adds	r7, #32
 800281c:	46bd      	mov	sp, r7
 800281e:	bd80      	pop	{r7, pc}
 8002820:	40004400 	.word	0x40004400
 8002824:	40021000 	.word	0x40021000
 8002828:	40010800 	.word	0x40010800

0800282c <NMI_Handler>:
 800282c:	b480      	push	{r7}
 800282e:	af00      	add	r7, sp, #0
 8002830:	e7fe      	b.n	8002830 <NMI_Handler+0x4>

08002832 <HardFault_Handler>:
 8002832:	b480      	push	{r7}
 8002834:	af00      	add	r7, sp, #0
 8002836:	e7fe      	b.n	8002836 <HardFault_Handler+0x4>

08002838 <MemManage_Handler>:
 8002838:	b480      	push	{r7}
 800283a:	af00      	add	r7, sp, #0
 800283c:	e7fe      	b.n	800283c <MemManage_Handler+0x4>

0800283e <BusFault_Handler>:
 800283e:	b480      	push	{r7}
 8002840:	af00      	add	r7, sp, #0
 8002842:	e7fe      	b.n	8002842 <BusFault_Handler+0x4>

08002844 <UsageFault_Handler>:
 8002844:	b480      	push	{r7}
 8002846:	af00      	add	r7, sp, #0
 8002848:	e7fe      	b.n	8002848 <UsageFault_Handler+0x4>

0800284a <SVC_Handler>:
 800284a:	b480      	push	{r7}
 800284c:	af00      	add	r7, sp, #0
 800284e:	bf00      	nop
 8002850:	46bd      	mov	sp, r7
 8002852:	bc80      	pop	{r7}
 8002854:	4770      	bx	lr

08002856 <DebugMon_Handler>:
 8002856:	b480      	push	{r7}
 8002858:	af00      	add	r7, sp, #0
 800285a:	bf00      	nop
 800285c:	46bd      	mov	sp, r7
 800285e:	bc80      	pop	{r7}
 8002860:	4770      	bx	lr

08002862 <PendSV_Handler>:
 8002862:	b480      	push	{r7}
 8002864:	af00      	add	r7, sp, #0
 8002866:	bf00      	nop
 8002868:	46bd      	mov	sp, r7
 800286a:	bc80      	pop	{r7}
 800286c:	4770      	bx	lr

0800286e <SysTick_Handler>:
 800286e:	b580      	push	{r7, lr}
 8002870:	af00      	add	r7, sp, #0
 8002872:	f000 f8c9 	bl	8002a08 <HAL_IncTick>
 8002876:	bf00      	nop
 8002878:	bd80      	pop	{r7, pc}
	...

0800287c <TIM2_IRQHandler>:
 800287c:	b580      	push	{r7, lr}
 800287e:	af00      	add	r7, sp, #0
 8002880:	4802      	ldr	r0, [pc, #8]	; (800288c <TIM2_IRQHandler+0x10>)
 8002882:	f001 fa2f 	bl	8003ce4 <HAL_TIM_IRQHandler>
 8002886:	bf00      	nop
 8002888:	bd80      	pop	{r7, pc}
 800288a:	bf00      	nop
 800288c:	20000188 	.word	0x20000188

08002890 <TIM3_IRQHandler>:
 8002890:	b580      	push	{r7, lr}
 8002892:	af00      	add	r7, sp, #0
 8002894:	4802      	ldr	r0, [pc, #8]	; (80028a0 <TIM3_IRQHandler+0x10>)
 8002896:	f001 fa25 	bl	8003ce4 <HAL_TIM_IRQHandler>
 800289a:	bf00      	nop
 800289c:	bd80      	pop	{r7, pc}
 800289e:	bf00      	nop
 80028a0:	20000140 	.word	0x20000140

080028a4 <USART2_IRQHandler>:
 80028a4:	b580      	push	{r7, lr}
 80028a6:	af00      	add	r7, sp, #0
 80028a8:	4802      	ldr	r0, [pc, #8]	; (80028b4 <USART2_IRQHandler+0x10>)
 80028aa:	f002 f8b9 	bl	8004a20 <HAL_UART_IRQHandler>
 80028ae:	bf00      	nop
 80028b0:	bd80      	pop	{r7, pc}
 80028b2:	bf00      	nop
 80028b4:	200001d0 	.word	0x200001d0

080028b8 <_sbrk>:
 80028b8:	b580      	push	{r7, lr}
 80028ba:	b086      	sub	sp, #24
 80028bc:	af00      	add	r7, sp, #0
 80028be:	6078      	str	r0, [r7, #4]
 80028c0:	4a14      	ldr	r2, [pc, #80]	; (8002914 <_sbrk+0x5c>)
 80028c2:	4b15      	ldr	r3, [pc, #84]	; (8002918 <_sbrk+0x60>)
 80028c4:	1ad3      	subs	r3, r2, r3
 80028c6:	617b      	str	r3, [r7, #20]
 80028c8:	697b      	ldr	r3, [r7, #20]
 80028ca:	613b      	str	r3, [r7, #16]
 80028cc:	4b13      	ldr	r3, [pc, #76]	; (800291c <_sbrk+0x64>)
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	2b00      	cmp	r3, #0
 80028d2:	d102      	bne.n	80028da <_sbrk+0x22>
 80028d4:	4b11      	ldr	r3, [pc, #68]	; (800291c <_sbrk+0x64>)
 80028d6:	4a12      	ldr	r2, [pc, #72]	; (8002920 <_sbrk+0x68>)
 80028d8:	601a      	str	r2, [r3, #0]
 80028da:	4b10      	ldr	r3, [pc, #64]	; (800291c <_sbrk+0x64>)
 80028dc:	681a      	ldr	r2, [r3, #0]
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	4413      	add	r3, r2
 80028e2:	693a      	ldr	r2, [r7, #16]
 80028e4:	429a      	cmp	r2, r3
 80028e6:	d207      	bcs.n	80028f8 <_sbrk+0x40>
 80028e8:	f002 fdea 	bl	80054c0 <__errno>
 80028ec:	4603      	mov	r3, r0
 80028ee:	220c      	movs	r2, #12
 80028f0:	601a      	str	r2, [r3, #0]
 80028f2:	f04f 33ff 	mov.w	r3, #4294967295
 80028f6:	e009      	b.n	800290c <_sbrk+0x54>
 80028f8:	4b08      	ldr	r3, [pc, #32]	; (800291c <_sbrk+0x64>)
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	60fb      	str	r3, [r7, #12]
 80028fe:	4b07      	ldr	r3, [pc, #28]	; (800291c <_sbrk+0x64>)
 8002900:	681a      	ldr	r2, [r3, #0]
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	4413      	add	r3, r2
 8002906:	4a05      	ldr	r2, [pc, #20]	; (800291c <_sbrk+0x64>)
 8002908:	6013      	str	r3, [r2, #0]
 800290a:	68fb      	ldr	r3, [r7, #12]
 800290c:	4618      	mov	r0, r3
 800290e:	3718      	adds	r7, #24
 8002910:	46bd      	mov	sp, r7
 8002912:	bd80      	pop	{r7, pc}
 8002914:	20005000 	.word	0x20005000
 8002918:	00000400 	.word	0x00000400
 800291c:	20000130 	.word	0x20000130
 8002920:	20000270 	.word	0x20000270

08002924 <SystemInit>:
 8002924:	b480      	push	{r7}
 8002926:	af00      	add	r7, sp, #0
 8002928:	bf00      	nop
 800292a:	46bd      	mov	sp, r7
 800292c:	bc80      	pop	{r7}
 800292e:	4770      	bx	lr

08002930 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8002930:	f7ff fff8 	bl	8002924 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002934:	480b      	ldr	r0, [pc, #44]	; (8002964 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8002936:	490c      	ldr	r1, [pc, #48]	; (8002968 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8002938:	4a0c      	ldr	r2, [pc, #48]	; (800296c <LoopFillZerobss+0x16>)
  movs r3, #0
 800293a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800293c:	e002      	b.n	8002944 <LoopCopyDataInit>

0800293e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800293e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002940:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002942:	3304      	adds	r3, #4

08002944 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002944:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002946:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002948:	d3f9      	bcc.n	800293e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800294a:	4a09      	ldr	r2, [pc, #36]	; (8002970 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 800294c:	4c09      	ldr	r4, [pc, #36]	; (8002974 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800294e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002950:	e001      	b.n	8002956 <LoopFillZerobss>

08002952 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002952:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002954:	3204      	adds	r2, #4

08002956 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002956:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002958:	d3fb      	bcc.n	8002952 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800295a:	f002 fdb7 	bl	80054cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800295e:	f7ff fb3b 	bl	8001fd8 <main>
  bx lr
 8002962:	4770      	bx	lr
  ldr r0, =_sdata
 8002964:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002968:	200000d0 	.word	0x200000d0
  ldr r2, =_sidata
 800296c:	080060a4 	.word	0x080060a4
  ldr r2, =_sbss
 8002970:	200000d0 	.word	0x200000d0
  ldr r4, =_ebss
 8002974:	2000026c 	.word	0x2000026c

08002978 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002978:	e7fe      	b.n	8002978 <ADC1_2_IRQHandler>
	...

0800297c <HAL_Init>:
 800297c:	b580      	push	{r7, lr}
 800297e:	af00      	add	r7, sp, #0
 8002980:	4b08      	ldr	r3, [pc, #32]	; (80029a4 <HAL_Init+0x28>)
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4a07      	ldr	r2, [pc, #28]	; (80029a4 <HAL_Init+0x28>)
 8002986:	f043 0310 	orr.w	r3, r3, #16
 800298a:	6013      	str	r3, [r2, #0]
 800298c:	2003      	movs	r0, #3
 800298e:	f000 f923 	bl	8002bd8 <HAL_NVIC_SetPriorityGrouping>
 8002992:	200f      	movs	r0, #15
 8002994:	f000 f808 	bl	80029a8 <HAL_InitTick>
 8002998:	f7ff fe52 	bl	8002640 <HAL_MspInit>
 800299c:	2300      	movs	r3, #0
 800299e:	4618      	mov	r0, r3
 80029a0:	bd80      	pop	{r7, pc}
 80029a2:	bf00      	nop
 80029a4:	40022000 	.word	0x40022000

080029a8 <HAL_InitTick>:
 80029a8:	b580      	push	{r7, lr}
 80029aa:	b082      	sub	sp, #8
 80029ac:	af00      	add	r7, sp, #0
 80029ae:	6078      	str	r0, [r7, #4]
 80029b0:	4b12      	ldr	r3, [pc, #72]	; (80029fc <HAL_InitTick+0x54>)
 80029b2:	681a      	ldr	r2, [r3, #0]
 80029b4:	4b12      	ldr	r3, [pc, #72]	; (8002a00 <HAL_InitTick+0x58>)
 80029b6:	781b      	ldrb	r3, [r3, #0]
 80029b8:	4619      	mov	r1, r3
 80029ba:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80029be:	fbb3 f3f1 	udiv	r3, r3, r1
 80029c2:	fbb2 f3f3 	udiv	r3, r2, r3
 80029c6:	4618      	mov	r0, r3
 80029c8:	f000 f93b 	bl	8002c42 <HAL_SYSTICK_Config>
 80029cc:	4603      	mov	r3, r0
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d001      	beq.n	80029d6 <HAL_InitTick+0x2e>
 80029d2:	2301      	movs	r3, #1
 80029d4:	e00e      	b.n	80029f4 <HAL_InitTick+0x4c>
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	2b0f      	cmp	r3, #15
 80029da:	d80a      	bhi.n	80029f2 <HAL_InitTick+0x4a>
 80029dc:	2200      	movs	r2, #0
 80029de:	6879      	ldr	r1, [r7, #4]
 80029e0:	f04f 30ff 	mov.w	r0, #4294967295
 80029e4:	f000 f903 	bl	8002bee <HAL_NVIC_SetPriority>
 80029e8:	4a06      	ldr	r2, [pc, #24]	; (8002a04 <HAL_InitTick+0x5c>)
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	6013      	str	r3, [r2, #0]
 80029ee:	2300      	movs	r3, #0
 80029f0:	e000      	b.n	80029f4 <HAL_InitTick+0x4c>
 80029f2:	2301      	movs	r3, #1
 80029f4:	4618      	mov	r0, r3
 80029f6:	3708      	adds	r7, #8
 80029f8:	46bd      	mov	sp, r7
 80029fa:	bd80      	pop	{r7, pc}
 80029fc:	20000060 	.word	0x20000060
 8002a00:	20000068 	.word	0x20000068
 8002a04:	20000064 	.word	0x20000064

08002a08 <HAL_IncTick>:
 8002a08:	b480      	push	{r7}
 8002a0a:	af00      	add	r7, sp, #0
 8002a0c:	4b05      	ldr	r3, [pc, #20]	; (8002a24 <HAL_IncTick+0x1c>)
 8002a0e:	781b      	ldrb	r3, [r3, #0]
 8002a10:	461a      	mov	r2, r3
 8002a12:	4b05      	ldr	r3, [pc, #20]	; (8002a28 <HAL_IncTick+0x20>)
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	4413      	add	r3, r2
 8002a18:	4a03      	ldr	r2, [pc, #12]	; (8002a28 <HAL_IncTick+0x20>)
 8002a1a:	6013      	str	r3, [r2, #0]
 8002a1c:	bf00      	nop
 8002a1e:	46bd      	mov	sp, r7
 8002a20:	bc80      	pop	{r7}
 8002a22:	4770      	bx	lr
 8002a24:	20000068 	.word	0x20000068
 8002a28:	20000258 	.word	0x20000258

08002a2c <HAL_GetTick>:
 8002a2c:	b480      	push	{r7}
 8002a2e:	af00      	add	r7, sp, #0
 8002a30:	4b02      	ldr	r3, [pc, #8]	; (8002a3c <HAL_GetTick+0x10>)
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	4618      	mov	r0, r3
 8002a36:	46bd      	mov	sp, r7
 8002a38:	bc80      	pop	{r7}
 8002a3a:	4770      	bx	lr
 8002a3c:	20000258 	.word	0x20000258

08002a40 <__NVIC_SetPriorityGrouping>:
 8002a40:	b480      	push	{r7}
 8002a42:	b085      	sub	sp, #20
 8002a44:	af00      	add	r7, sp, #0
 8002a46:	6078      	str	r0, [r7, #4]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	f003 0307 	and.w	r3, r3, #7
 8002a4e:	60fb      	str	r3, [r7, #12]
 8002a50:	4b0c      	ldr	r3, [pc, #48]	; (8002a84 <__NVIC_SetPriorityGrouping+0x44>)
 8002a52:	68db      	ldr	r3, [r3, #12]
 8002a54:	60bb      	str	r3, [r7, #8]
 8002a56:	68ba      	ldr	r2, [r7, #8]
 8002a58:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002a5c:	4013      	ands	r3, r2
 8002a5e:	60bb      	str	r3, [r7, #8]
 8002a60:	68fb      	ldr	r3, [r7, #12]
 8002a62:	021a      	lsls	r2, r3, #8
 8002a64:	68bb      	ldr	r3, [r7, #8]
 8002a66:	4313      	orrs	r3, r2
 8002a68:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002a6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002a70:	60bb      	str	r3, [r7, #8]
 8002a72:	4a04      	ldr	r2, [pc, #16]	; (8002a84 <__NVIC_SetPriorityGrouping+0x44>)
 8002a74:	68bb      	ldr	r3, [r7, #8]
 8002a76:	60d3      	str	r3, [r2, #12]
 8002a78:	bf00      	nop
 8002a7a:	3714      	adds	r7, #20
 8002a7c:	46bd      	mov	sp, r7
 8002a7e:	bc80      	pop	{r7}
 8002a80:	4770      	bx	lr
 8002a82:	bf00      	nop
 8002a84:	e000ed00 	.word	0xe000ed00

08002a88 <__NVIC_GetPriorityGrouping>:
 8002a88:	b480      	push	{r7}
 8002a8a:	af00      	add	r7, sp, #0
 8002a8c:	4b04      	ldr	r3, [pc, #16]	; (8002aa0 <__NVIC_GetPriorityGrouping+0x18>)
 8002a8e:	68db      	ldr	r3, [r3, #12]
 8002a90:	0a1b      	lsrs	r3, r3, #8
 8002a92:	f003 0307 	and.w	r3, r3, #7
 8002a96:	4618      	mov	r0, r3
 8002a98:	46bd      	mov	sp, r7
 8002a9a:	bc80      	pop	{r7}
 8002a9c:	4770      	bx	lr
 8002a9e:	bf00      	nop
 8002aa0:	e000ed00 	.word	0xe000ed00

08002aa4 <__NVIC_EnableIRQ>:
 8002aa4:	b480      	push	{r7}
 8002aa6:	b083      	sub	sp, #12
 8002aa8:	af00      	add	r7, sp, #0
 8002aaa:	4603      	mov	r3, r0
 8002aac:	71fb      	strb	r3, [r7, #7]
 8002aae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ab2:	2b00      	cmp	r3, #0
 8002ab4:	db0b      	blt.n	8002ace <__NVIC_EnableIRQ+0x2a>
 8002ab6:	79fb      	ldrb	r3, [r7, #7]
 8002ab8:	f003 021f 	and.w	r2, r3, #31
 8002abc:	4906      	ldr	r1, [pc, #24]	; (8002ad8 <__NVIC_EnableIRQ+0x34>)
 8002abe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ac2:	095b      	lsrs	r3, r3, #5
 8002ac4:	2001      	movs	r0, #1
 8002ac6:	fa00 f202 	lsl.w	r2, r0, r2
 8002aca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002ace:	bf00      	nop
 8002ad0:	370c      	adds	r7, #12
 8002ad2:	46bd      	mov	sp, r7
 8002ad4:	bc80      	pop	{r7}
 8002ad6:	4770      	bx	lr
 8002ad8:	e000e100 	.word	0xe000e100

08002adc <__NVIC_SetPriority>:
 8002adc:	b480      	push	{r7}
 8002ade:	b083      	sub	sp, #12
 8002ae0:	af00      	add	r7, sp, #0
 8002ae2:	4603      	mov	r3, r0
 8002ae4:	6039      	str	r1, [r7, #0]
 8002ae6:	71fb      	strb	r3, [r7, #7]
 8002ae8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	db0a      	blt.n	8002b06 <__NVIC_SetPriority+0x2a>
 8002af0:	683b      	ldr	r3, [r7, #0]
 8002af2:	b2da      	uxtb	r2, r3
 8002af4:	490c      	ldr	r1, [pc, #48]	; (8002b28 <__NVIC_SetPriority+0x4c>)
 8002af6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002afa:	0112      	lsls	r2, r2, #4
 8002afc:	b2d2      	uxtb	r2, r2
 8002afe:	440b      	add	r3, r1
 8002b00:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002b04:	e00a      	b.n	8002b1c <__NVIC_SetPriority+0x40>
 8002b06:	683b      	ldr	r3, [r7, #0]
 8002b08:	b2da      	uxtb	r2, r3
 8002b0a:	4908      	ldr	r1, [pc, #32]	; (8002b2c <__NVIC_SetPriority+0x50>)
 8002b0c:	79fb      	ldrb	r3, [r7, #7]
 8002b0e:	f003 030f 	and.w	r3, r3, #15
 8002b12:	3b04      	subs	r3, #4
 8002b14:	0112      	lsls	r2, r2, #4
 8002b16:	b2d2      	uxtb	r2, r2
 8002b18:	440b      	add	r3, r1
 8002b1a:	761a      	strb	r2, [r3, #24]
 8002b1c:	bf00      	nop
 8002b1e:	370c      	adds	r7, #12
 8002b20:	46bd      	mov	sp, r7
 8002b22:	bc80      	pop	{r7}
 8002b24:	4770      	bx	lr
 8002b26:	bf00      	nop
 8002b28:	e000e100 	.word	0xe000e100
 8002b2c:	e000ed00 	.word	0xe000ed00

08002b30 <NVIC_EncodePriority>:
 8002b30:	b480      	push	{r7}
 8002b32:	b089      	sub	sp, #36	; 0x24
 8002b34:	af00      	add	r7, sp, #0
 8002b36:	60f8      	str	r0, [r7, #12]
 8002b38:	60b9      	str	r1, [r7, #8]
 8002b3a:	607a      	str	r2, [r7, #4]
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	f003 0307 	and.w	r3, r3, #7
 8002b42:	61fb      	str	r3, [r7, #28]
 8002b44:	69fb      	ldr	r3, [r7, #28]
 8002b46:	f1c3 0307 	rsb	r3, r3, #7
 8002b4a:	2b04      	cmp	r3, #4
 8002b4c:	bf28      	it	cs
 8002b4e:	2304      	movcs	r3, #4
 8002b50:	61bb      	str	r3, [r7, #24]
 8002b52:	69fb      	ldr	r3, [r7, #28]
 8002b54:	3304      	adds	r3, #4
 8002b56:	2b06      	cmp	r3, #6
 8002b58:	d902      	bls.n	8002b60 <NVIC_EncodePriority+0x30>
 8002b5a:	69fb      	ldr	r3, [r7, #28]
 8002b5c:	3b03      	subs	r3, #3
 8002b5e:	e000      	b.n	8002b62 <NVIC_EncodePriority+0x32>
 8002b60:	2300      	movs	r3, #0
 8002b62:	617b      	str	r3, [r7, #20]
 8002b64:	f04f 32ff 	mov.w	r2, #4294967295
 8002b68:	69bb      	ldr	r3, [r7, #24]
 8002b6a:	fa02 f303 	lsl.w	r3, r2, r3
 8002b6e:	43da      	mvns	r2, r3
 8002b70:	68bb      	ldr	r3, [r7, #8]
 8002b72:	401a      	ands	r2, r3
 8002b74:	697b      	ldr	r3, [r7, #20]
 8002b76:	409a      	lsls	r2, r3
 8002b78:	f04f 31ff 	mov.w	r1, #4294967295
 8002b7c:	697b      	ldr	r3, [r7, #20]
 8002b7e:	fa01 f303 	lsl.w	r3, r1, r3
 8002b82:	43d9      	mvns	r1, r3
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	400b      	ands	r3, r1
 8002b88:	4313      	orrs	r3, r2
 8002b8a:	4618      	mov	r0, r3
 8002b8c:	3724      	adds	r7, #36	; 0x24
 8002b8e:	46bd      	mov	sp, r7
 8002b90:	bc80      	pop	{r7}
 8002b92:	4770      	bx	lr

08002b94 <SysTick_Config>:
 8002b94:	b580      	push	{r7, lr}
 8002b96:	b082      	sub	sp, #8
 8002b98:	af00      	add	r7, sp, #0
 8002b9a:	6078      	str	r0, [r7, #4]
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	3b01      	subs	r3, #1
 8002ba0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002ba4:	d301      	bcc.n	8002baa <SysTick_Config+0x16>
 8002ba6:	2301      	movs	r3, #1
 8002ba8:	e00f      	b.n	8002bca <SysTick_Config+0x36>
 8002baa:	4a0a      	ldr	r2, [pc, #40]	; (8002bd4 <SysTick_Config+0x40>)
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	3b01      	subs	r3, #1
 8002bb0:	6053      	str	r3, [r2, #4]
 8002bb2:	210f      	movs	r1, #15
 8002bb4:	f04f 30ff 	mov.w	r0, #4294967295
 8002bb8:	f7ff ff90 	bl	8002adc <__NVIC_SetPriority>
 8002bbc:	4b05      	ldr	r3, [pc, #20]	; (8002bd4 <SysTick_Config+0x40>)
 8002bbe:	2200      	movs	r2, #0
 8002bc0:	609a      	str	r2, [r3, #8]
 8002bc2:	4b04      	ldr	r3, [pc, #16]	; (8002bd4 <SysTick_Config+0x40>)
 8002bc4:	2207      	movs	r2, #7
 8002bc6:	601a      	str	r2, [r3, #0]
 8002bc8:	2300      	movs	r3, #0
 8002bca:	4618      	mov	r0, r3
 8002bcc:	3708      	adds	r7, #8
 8002bce:	46bd      	mov	sp, r7
 8002bd0:	bd80      	pop	{r7, pc}
 8002bd2:	bf00      	nop
 8002bd4:	e000e010 	.word	0xe000e010

08002bd8 <HAL_NVIC_SetPriorityGrouping>:
 8002bd8:	b580      	push	{r7, lr}
 8002bda:	b082      	sub	sp, #8
 8002bdc:	af00      	add	r7, sp, #0
 8002bde:	6078      	str	r0, [r7, #4]
 8002be0:	6878      	ldr	r0, [r7, #4]
 8002be2:	f7ff ff2d 	bl	8002a40 <__NVIC_SetPriorityGrouping>
 8002be6:	bf00      	nop
 8002be8:	3708      	adds	r7, #8
 8002bea:	46bd      	mov	sp, r7
 8002bec:	bd80      	pop	{r7, pc}

08002bee <HAL_NVIC_SetPriority>:
 8002bee:	b580      	push	{r7, lr}
 8002bf0:	b086      	sub	sp, #24
 8002bf2:	af00      	add	r7, sp, #0
 8002bf4:	4603      	mov	r3, r0
 8002bf6:	60b9      	str	r1, [r7, #8]
 8002bf8:	607a      	str	r2, [r7, #4]
 8002bfa:	73fb      	strb	r3, [r7, #15]
 8002bfc:	2300      	movs	r3, #0
 8002bfe:	617b      	str	r3, [r7, #20]
 8002c00:	f7ff ff42 	bl	8002a88 <__NVIC_GetPriorityGrouping>
 8002c04:	6178      	str	r0, [r7, #20]
 8002c06:	687a      	ldr	r2, [r7, #4]
 8002c08:	68b9      	ldr	r1, [r7, #8]
 8002c0a:	6978      	ldr	r0, [r7, #20]
 8002c0c:	f7ff ff90 	bl	8002b30 <NVIC_EncodePriority>
 8002c10:	4602      	mov	r2, r0
 8002c12:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002c16:	4611      	mov	r1, r2
 8002c18:	4618      	mov	r0, r3
 8002c1a:	f7ff ff5f 	bl	8002adc <__NVIC_SetPriority>
 8002c1e:	bf00      	nop
 8002c20:	3718      	adds	r7, #24
 8002c22:	46bd      	mov	sp, r7
 8002c24:	bd80      	pop	{r7, pc}

08002c26 <HAL_NVIC_EnableIRQ>:
 8002c26:	b580      	push	{r7, lr}
 8002c28:	b082      	sub	sp, #8
 8002c2a:	af00      	add	r7, sp, #0
 8002c2c:	4603      	mov	r3, r0
 8002c2e:	71fb      	strb	r3, [r7, #7]
 8002c30:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c34:	4618      	mov	r0, r3
 8002c36:	f7ff ff35 	bl	8002aa4 <__NVIC_EnableIRQ>
 8002c3a:	bf00      	nop
 8002c3c:	3708      	adds	r7, #8
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	bd80      	pop	{r7, pc}

08002c42 <HAL_SYSTICK_Config>:
 8002c42:	b580      	push	{r7, lr}
 8002c44:	b082      	sub	sp, #8
 8002c46:	af00      	add	r7, sp, #0
 8002c48:	6078      	str	r0, [r7, #4]
 8002c4a:	6878      	ldr	r0, [r7, #4]
 8002c4c:	f7ff ffa2 	bl	8002b94 <SysTick_Config>
 8002c50:	4603      	mov	r3, r0
 8002c52:	4618      	mov	r0, r3
 8002c54:	3708      	adds	r7, #8
 8002c56:	46bd      	mov	sp, r7
 8002c58:	bd80      	pop	{r7, pc}

08002c5a <HAL_DMA_Abort>:
 8002c5a:	b480      	push	{r7}
 8002c5c:	b085      	sub	sp, #20
 8002c5e:	af00      	add	r7, sp, #0
 8002c60:	6078      	str	r0, [r7, #4]
 8002c62:	2300      	movs	r3, #0
 8002c64:	73fb      	strb	r3, [r7, #15]
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002c6c:	b2db      	uxtb	r3, r3
 8002c6e:	2b02      	cmp	r3, #2
 8002c70:	d008      	beq.n	8002c84 <HAL_DMA_Abort+0x2a>
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	2204      	movs	r2, #4
 8002c76:	639a      	str	r2, [r3, #56]	; 0x38
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	2200      	movs	r2, #0
 8002c7c:	f883 2020 	strb.w	r2, [r3, #32]
 8002c80:	2301      	movs	r3, #1
 8002c82:	e020      	b.n	8002cc6 <HAL_DMA_Abort+0x6c>
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	681a      	ldr	r2, [r3, #0]
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	f022 020e 	bic.w	r2, r2, #14
 8002c92:	601a      	str	r2, [r3, #0]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	681a      	ldr	r2, [r3, #0]
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	f022 0201 	bic.w	r2, r2, #1
 8002ca2:	601a      	str	r2, [r3, #0]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002cac:	2101      	movs	r1, #1
 8002cae:	fa01 f202 	lsl.w	r2, r1, r2
 8002cb2:	605a      	str	r2, [r3, #4]
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	2201      	movs	r2, #1
 8002cb8:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	2200      	movs	r2, #0
 8002cc0:	f883 2020 	strb.w	r2, [r3, #32]
 8002cc4:	7bfb      	ldrb	r3, [r7, #15]
 8002cc6:	4618      	mov	r0, r3
 8002cc8:	3714      	adds	r7, #20
 8002cca:	46bd      	mov	sp, r7
 8002ccc:	bc80      	pop	{r7}
 8002cce:	4770      	bx	lr

08002cd0 <HAL_DMA_Abort_IT>:
 8002cd0:	b580      	push	{r7, lr}
 8002cd2:	b084      	sub	sp, #16
 8002cd4:	af00      	add	r7, sp, #0
 8002cd6:	6078      	str	r0, [r7, #4]
 8002cd8:	2300      	movs	r3, #0
 8002cda:	73fb      	strb	r3, [r7, #15]
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002ce2:	b2db      	uxtb	r3, r3
 8002ce4:	2b02      	cmp	r3, #2
 8002ce6:	d005      	beq.n	8002cf4 <HAL_DMA_Abort_IT+0x24>
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	2204      	movs	r2, #4
 8002cec:	639a      	str	r2, [r3, #56]	; 0x38
 8002cee:	2301      	movs	r3, #1
 8002cf0:	73fb      	strb	r3, [r7, #15]
 8002cf2:	e051      	b.n	8002d98 <HAL_DMA_Abort_IT+0xc8>
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	681a      	ldr	r2, [r3, #0]
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	f022 020e 	bic.w	r2, r2, #14
 8002d02:	601a      	str	r2, [r3, #0]
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	681a      	ldr	r2, [r3, #0]
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	f022 0201 	bic.w	r2, r2, #1
 8002d12:	601a      	str	r2, [r3, #0]
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	4a22      	ldr	r2, [pc, #136]	; (8002da4 <HAL_DMA_Abort_IT+0xd4>)
 8002d1a:	4293      	cmp	r3, r2
 8002d1c:	d029      	beq.n	8002d72 <HAL_DMA_Abort_IT+0xa2>
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	4a21      	ldr	r2, [pc, #132]	; (8002da8 <HAL_DMA_Abort_IT+0xd8>)
 8002d24:	4293      	cmp	r3, r2
 8002d26:	d022      	beq.n	8002d6e <HAL_DMA_Abort_IT+0x9e>
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	4a1f      	ldr	r2, [pc, #124]	; (8002dac <HAL_DMA_Abort_IT+0xdc>)
 8002d2e:	4293      	cmp	r3, r2
 8002d30:	d01a      	beq.n	8002d68 <HAL_DMA_Abort_IT+0x98>
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	4a1e      	ldr	r2, [pc, #120]	; (8002db0 <HAL_DMA_Abort_IT+0xe0>)
 8002d38:	4293      	cmp	r3, r2
 8002d3a:	d012      	beq.n	8002d62 <HAL_DMA_Abort_IT+0x92>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	4a1c      	ldr	r2, [pc, #112]	; (8002db4 <HAL_DMA_Abort_IT+0xe4>)
 8002d42:	4293      	cmp	r3, r2
 8002d44:	d00a      	beq.n	8002d5c <HAL_DMA_Abort_IT+0x8c>
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	4a1b      	ldr	r2, [pc, #108]	; (8002db8 <HAL_DMA_Abort_IT+0xe8>)
 8002d4c:	4293      	cmp	r3, r2
 8002d4e:	d102      	bne.n	8002d56 <HAL_DMA_Abort_IT+0x86>
 8002d50:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8002d54:	e00e      	b.n	8002d74 <HAL_DMA_Abort_IT+0xa4>
 8002d56:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002d5a:	e00b      	b.n	8002d74 <HAL_DMA_Abort_IT+0xa4>
 8002d5c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002d60:	e008      	b.n	8002d74 <HAL_DMA_Abort_IT+0xa4>
 8002d62:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002d66:	e005      	b.n	8002d74 <HAL_DMA_Abort_IT+0xa4>
 8002d68:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002d6c:	e002      	b.n	8002d74 <HAL_DMA_Abort_IT+0xa4>
 8002d6e:	2310      	movs	r3, #16
 8002d70:	e000      	b.n	8002d74 <HAL_DMA_Abort_IT+0xa4>
 8002d72:	2301      	movs	r3, #1
 8002d74:	4a11      	ldr	r2, [pc, #68]	; (8002dbc <HAL_DMA_Abort_IT+0xec>)
 8002d76:	6053      	str	r3, [r2, #4]
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	2201      	movs	r2, #1
 8002d7c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	2200      	movs	r2, #0
 8002d84:	f883 2020 	strb.w	r2, [r3, #32]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002d8c:	2b00      	cmp	r3, #0
 8002d8e:	d003      	beq.n	8002d98 <HAL_DMA_Abort_IT+0xc8>
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002d94:	6878      	ldr	r0, [r7, #4]
 8002d96:	4798      	blx	r3
 8002d98:	7bfb      	ldrb	r3, [r7, #15]
 8002d9a:	4618      	mov	r0, r3
 8002d9c:	3710      	adds	r7, #16
 8002d9e:	46bd      	mov	sp, r7
 8002da0:	bd80      	pop	{r7, pc}
 8002da2:	bf00      	nop
 8002da4:	40020008 	.word	0x40020008
 8002da8:	4002001c 	.word	0x4002001c
 8002dac:	40020030 	.word	0x40020030
 8002db0:	40020044 	.word	0x40020044
 8002db4:	40020058 	.word	0x40020058
 8002db8:	4002006c 	.word	0x4002006c
 8002dbc:	40020000 	.word	0x40020000

08002dc0 <HAL_GPIO_Init>:
 8002dc0:	b480      	push	{r7}
 8002dc2:	b08b      	sub	sp, #44	; 0x2c
 8002dc4:	af00      	add	r7, sp, #0
 8002dc6:	6078      	str	r0, [r7, #4]
 8002dc8:	6039      	str	r1, [r7, #0]
 8002dca:	2300      	movs	r3, #0
 8002dcc:	627b      	str	r3, [r7, #36]	; 0x24
 8002dce:	2300      	movs	r3, #0
 8002dd0:	623b      	str	r3, [r7, #32]
 8002dd2:	e169      	b.n	80030a8 <HAL_GPIO_Init+0x2e8>
 8002dd4:	2201      	movs	r2, #1
 8002dd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002dd8:	fa02 f303 	lsl.w	r3, r2, r3
 8002ddc:	61fb      	str	r3, [r7, #28]
 8002dde:	683b      	ldr	r3, [r7, #0]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	69fa      	ldr	r2, [r7, #28]
 8002de4:	4013      	ands	r3, r2
 8002de6:	61bb      	str	r3, [r7, #24]
 8002de8:	69ba      	ldr	r2, [r7, #24]
 8002dea:	69fb      	ldr	r3, [r7, #28]
 8002dec:	429a      	cmp	r2, r3
 8002dee:	f040 8158 	bne.w	80030a2 <HAL_GPIO_Init+0x2e2>
 8002df2:	683b      	ldr	r3, [r7, #0]
 8002df4:	685b      	ldr	r3, [r3, #4]
 8002df6:	4a9a      	ldr	r2, [pc, #616]	; (8003060 <HAL_GPIO_Init+0x2a0>)
 8002df8:	4293      	cmp	r3, r2
 8002dfa:	d05e      	beq.n	8002eba <HAL_GPIO_Init+0xfa>
 8002dfc:	4a98      	ldr	r2, [pc, #608]	; (8003060 <HAL_GPIO_Init+0x2a0>)
 8002dfe:	4293      	cmp	r3, r2
 8002e00:	d875      	bhi.n	8002eee <HAL_GPIO_Init+0x12e>
 8002e02:	4a98      	ldr	r2, [pc, #608]	; (8003064 <HAL_GPIO_Init+0x2a4>)
 8002e04:	4293      	cmp	r3, r2
 8002e06:	d058      	beq.n	8002eba <HAL_GPIO_Init+0xfa>
 8002e08:	4a96      	ldr	r2, [pc, #600]	; (8003064 <HAL_GPIO_Init+0x2a4>)
 8002e0a:	4293      	cmp	r3, r2
 8002e0c:	d86f      	bhi.n	8002eee <HAL_GPIO_Init+0x12e>
 8002e0e:	4a96      	ldr	r2, [pc, #600]	; (8003068 <HAL_GPIO_Init+0x2a8>)
 8002e10:	4293      	cmp	r3, r2
 8002e12:	d052      	beq.n	8002eba <HAL_GPIO_Init+0xfa>
 8002e14:	4a94      	ldr	r2, [pc, #592]	; (8003068 <HAL_GPIO_Init+0x2a8>)
 8002e16:	4293      	cmp	r3, r2
 8002e18:	d869      	bhi.n	8002eee <HAL_GPIO_Init+0x12e>
 8002e1a:	4a94      	ldr	r2, [pc, #592]	; (800306c <HAL_GPIO_Init+0x2ac>)
 8002e1c:	4293      	cmp	r3, r2
 8002e1e:	d04c      	beq.n	8002eba <HAL_GPIO_Init+0xfa>
 8002e20:	4a92      	ldr	r2, [pc, #584]	; (800306c <HAL_GPIO_Init+0x2ac>)
 8002e22:	4293      	cmp	r3, r2
 8002e24:	d863      	bhi.n	8002eee <HAL_GPIO_Init+0x12e>
 8002e26:	4a92      	ldr	r2, [pc, #584]	; (8003070 <HAL_GPIO_Init+0x2b0>)
 8002e28:	4293      	cmp	r3, r2
 8002e2a:	d046      	beq.n	8002eba <HAL_GPIO_Init+0xfa>
 8002e2c:	4a90      	ldr	r2, [pc, #576]	; (8003070 <HAL_GPIO_Init+0x2b0>)
 8002e2e:	4293      	cmp	r3, r2
 8002e30:	d85d      	bhi.n	8002eee <HAL_GPIO_Init+0x12e>
 8002e32:	2b12      	cmp	r3, #18
 8002e34:	d82a      	bhi.n	8002e8c <HAL_GPIO_Init+0xcc>
 8002e36:	2b12      	cmp	r3, #18
 8002e38:	d859      	bhi.n	8002eee <HAL_GPIO_Init+0x12e>
 8002e3a:	a201      	add	r2, pc, #4	; (adr r2, 8002e40 <HAL_GPIO_Init+0x80>)
 8002e3c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002e40:	08002ebb 	.word	0x08002ebb
 8002e44:	08002e95 	.word	0x08002e95
 8002e48:	08002ea7 	.word	0x08002ea7
 8002e4c:	08002ee9 	.word	0x08002ee9
 8002e50:	08002eef 	.word	0x08002eef
 8002e54:	08002eef 	.word	0x08002eef
 8002e58:	08002eef 	.word	0x08002eef
 8002e5c:	08002eef 	.word	0x08002eef
 8002e60:	08002eef 	.word	0x08002eef
 8002e64:	08002eef 	.word	0x08002eef
 8002e68:	08002eef 	.word	0x08002eef
 8002e6c:	08002eef 	.word	0x08002eef
 8002e70:	08002eef 	.word	0x08002eef
 8002e74:	08002eef 	.word	0x08002eef
 8002e78:	08002eef 	.word	0x08002eef
 8002e7c:	08002eef 	.word	0x08002eef
 8002e80:	08002eef 	.word	0x08002eef
 8002e84:	08002e9d 	.word	0x08002e9d
 8002e88:	08002eb1 	.word	0x08002eb1
 8002e8c:	4a79      	ldr	r2, [pc, #484]	; (8003074 <HAL_GPIO_Init+0x2b4>)
 8002e8e:	4293      	cmp	r3, r2
 8002e90:	d013      	beq.n	8002eba <HAL_GPIO_Init+0xfa>
 8002e92:	e02c      	b.n	8002eee <HAL_GPIO_Init+0x12e>
 8002e94:	683b      	ldr	r3, [r7, #0]
 8002e96:	68db      	ldr	r3, [r3, #12]
 8002e98:	623b      	str	r3, [r7, #32]
 8002e9a:	e029      	b.n	8002ef0 <HAL_GPIO_Init+0x130>
 8002e9c:	683b      	ldr	r3, [r7, #0]
 8002e9e:	68db      	ldr	r3, [r3, #12]
 8002ea0:	3304      	adds	r3, #4
 8002ea2:	623b      	str	r3, [r7, #32]
 8002ea4:	e024      	b.n	8002ef0 <HAL_GPIO_Init+0x130>
 8002ea6:	683b      	ldr	r3, [r7, #0]
 8002ea8:	68db      	ldr	r3, [r3, #12]
 8002eaa:	3308      	adds	r3, #8
 8002eac:	623b      	str	r3, [r7, #32]
 8002eae:	e01f      	b.n	8002ef0 <HAL_GPIO_Init+0x130>
 8002eb0:	683b      	ldr	r3, [r7, #0]
 8002eb2:	68db      	ldr	r3, [r3, #12]
 8002eb4:	330c      	adds	r3, #12
 8002eb6:	623b      	str	r3, [r7, #32]
 8002eb8:	e01a      	b.n	8002ef0 <HAL_GPIO_Init+0x130>
 8002eba:	683b      	ldr	r3, [r7, #0]
 8002ebc:	689b      	ldr	r3, [r3, #8]
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d102      	bne.n	8002ec8 <HAL_GPIO_Init+0x108>
 8002ec2:	2304      	movs	r3, #4
 8002ec4:	623b      	str	r3, [r7, #32]
 8002ec6:	e013      	b.n	8002ef0 <HAL_GPIO_Init+0x130>
 8002ec8:	683b      	ldr	r3, [r7, #0]
 8002eca:	689b      	ldr	r3, [r3, #8]
 8002ecc:	2b01      	cmp	r3, #1
 8002ece:	d105      	bne.n	8002edc <HAL_GPIO_Init+0x11c>
 8002ed0:	2308      	movs	r3, #8
 8002ed2:	623b      	str	r3, [r7, #32]
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	69fa      	ldr	r2, [r7, #28]
 8002ed8:	611a      	str	r2, [r3, #16]
 8002eda:	e009      	b.n	8002ef0 <HAL_GPIO_Init+0x130>
 8002edc:	2308      	movs	r3, #8
 8002ede:	623b      	str	r3, [r7, #32]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	69fa      	ldr	r2, [r7, #28]
 8002ee4:	615a      	str	r2, [r3, #20]
 8002ee6:	e003      	b.n	8002ef0 <HAL_GPIO_Init+0x130>
 8002ee8:	2300      	movs	r3, #0
 8002eea:	623b      	str	r3, [r7, #32]
 8002eec:	e000      	b.n	8002ef0 <HAL_GPIO_Init+0x130>
 8002eee:	bf00      	nop
 8002ef0:	69bb      	ldr	r3, [r7, #24]
 8002ef2:	2bff      	cmp	r3, #255	; 0xff
 8002ef4:	d801      	bhi.n	8002efa <HAL_GPIO_Init+0x13a>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	e001      	b.n	8002efe <HAL_GPIO_Init+0x13e>
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	3304      	adds	r3, #4
 8002efe:	617b      	str	r3, [r7, #20]
 8002f00:	69bb      	ldr	r3, [r7, #24]
 8002f02:	2bff      	cmp	r3, #255	; 0xff
 8002f04:	d802      	bhi.n	8002f0c <HAL_GPIO_Init+0x14c>
 8002f06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f08:	009b      	lsls	r3, r3, #2
 8002f0a:	e002      	b.n	8002f12 <HAL_GPIO_Init+0x152>
 8002f0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f0e:	3b08      	subs	r3, #8
 8002f10:	009b      	lsls	r3, r3, #2
 8002f12:	613b      	str	r3, [r7, #16]
 8002f14:	697b      	ldr	r3, [r7, #20]
 8002f16:	681a      	ldr	r2, [r3, #0]
 8002f18:	210f      	movs	r1, #15
 8002f1a:	693b      	ldr	r3, [r7, #16]
 8002f1c:	fa01 f303 	lsl.w	r3, r1, r3
 8002f20:	43db      	mvns	r3, r3
 8002f22:	401a      	ands	r2, r3
 8002f24:	6a39      	ldr	r1, [r7, #32]
 8002f26:	693b      	ldr	r3, [r7, #16]
 8002f28:	fa01 f303 	lsl.w	r3, r1, r3
 8002f2c:	431a      	orrs	r2, r3
 8002f2e:	697b      	ldr	r3, [r7, #20]
 8002f30:	601a      	str	r2, [r3, #0]
 8002f32:	683b      	ldr	r3, [r7, #0]
 8002f34:	685b      	ldr	r3, [r3, #4]
 8002f36:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	f000 80b1 	beq.w	80030a2 <HAL_GPIO_Init+0x2e2>
 8002f40:	4b4d      	ldr	r3, [pc, #308]	; (8003078 <HAL_GPIO_Init+0x2b8>)
 8002f42:	699b      	ldr	r3, [r3, #24]
 8002f44:	4a4c      	ldr	r2, [pc, #304]	; (8003078 <HAL_GPIO_Init+0x2b8>)
 8002f46:	f043 0301 	orr.w	r3, r3, #1
 8002f4a:	6193      	str	r3, [r2, #24]
 8002f4c:	4b4a      	ldr	r3, [pc, #296]	; (8003078 <HAL_GPIO_Init+0x2b8>)
 8002f4e:	699b      	ldr	r3, [r3, #24]
 8002f50:	f003 0301 	and.w	r3, r3, #1
 8002f54:	60bb      	str	r3, [r7, #8]
 8002f56:	68bb      	ldr	r3, [r7, #8]
 8002f58:	4a48      	ldr	r2, [pc, #288]	; (800307c <HAL_GPIO_Init+0x2bc>)
 8002f5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f5c:	089b      	lsrs	r3, r3, #2
 8002f5e:	3302      	adds	r3, #2
 8002f60:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002f64:	60fb      	str	r3, [r7, #12]
 8002f66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f68:	f003 0303 	and.w	r3, r3, #3
 8002f6c:	009b      	lsls	r3, r3, #2
 8002f6e:	220f      	movs	r2, #15
 8002f70:	fa02 f303 	lsl.w	r3, r2, r3
 8002f74:	43db      	mvns	r3, r3
 8002f76:	68fa      	ldr	r2, [r7, #12]
 8002f78:	4013      	ands	r3, r2
 8002f7a:	60fb      	str	r3, [r7, #12]
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	4a40      	ldr	r2, [pc, #256]	; (8003080 <HAL_GPIO_Init+0x2c0>)
 8002f80:	4293      	cmp	r3, r2
 8002f82:	d013      	beq.n	8002fac <HAL_GPIO_Init+0x1ec>
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	4a3f      	ldr	r2, [pc, #252]	; (8003084 <HAL_GPIO_Init+0x2c4>)
 8002f88:	4293      	cmp	r3, r2
 8002f8a:	d00d      	beq.n	8002fa8 <HAL_GPIO_Init+0x1e8>
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	4a3e      	ldr	r2, [pc, #248]	; (8003088 <HAL_GPIO_Init+0x2c8>)
 8002f90:	4293      	cmp	r3, r2
 8002f92:	d007      	beq.n	8002fa4 <HAL_GPIO_Init+0x1e4>
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	4a3d      	ldr	r2, [pc, #244]	; (800308c <HAL_GPIO_Init+0x2cc>)
 8002f98:	4293      	cmp	r3, r2
 8002f9a:	d101      	bne.n	8002fa0 <HAL_GPIO_Init+0x1e0>
 8002f9c:	2303      	movs	r3, #3
 8002f9e:	e006      	b.n	8002fae <HAL_GPIO_Init+0x1ee>
 8002fa0:	2304      	movs	r3, #4
 8002fa2:	e004      	b.n	8002fae <HAL_GPIO_Init+0x1ee>
 8002fa4:	2302      	movs	r3, #2
 8002fa6:	e002      	b.n	8002fae <HAL_GPIO_Init+0x1ee>
 8002fa8:	2301      	movs	r3, #1
 8002faa:	e000      	b.n	8002fae <HAL_GPIO_Init+0x1ee>
 8002fac:	2300      	movs	r3, #0
 8002fae:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002fb0:	f002 0203 	and.w	r2, r2, #3
 8002fb4:	0092      	lsls	r2, r2, #2
 8002fb6:	4093      	lsls	r3, r2
 8002fb8:	68fa      	ldr	r2, [r7, #12]
 8002fba:	4313      	orrs	r3, r2
 8002fbc:	60fb      	str	r3, [r7, #12]
 8002fbe:	492f      	ldr	r1, [pc, #188]	; (800307c <HAL_GPIO_Init+0x2bc>)
 8002fc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fc2:	089b      	lsrs	r3, r3, #2
 8002fc4:	3302      	adds	r3, #2
 8002fc6:	68fa      	ldr	r2, [r7, #12]
 8002fc8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002fcc:	683b      	ldr	r3, [r7, #0]
 8002fce:	685b      	ldr	r3, [r3, #4]
 8002fd0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002fd4:	2b00      	cmp	r3, #0
 8002fd6:	d006      	beq.n	8002fe6 <HAL_GPIO_Init+0x226>
 8002fd8:	4b2d      	ldr	r3, [pc, #180]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8002fda:	689a      	ldr	r2, [r3, #8]
 8002fdc:	492c      	ldr	r1, [pc, #176]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8002fde:	69bb      	ldr	r3, [r7, #24]
 8002fe0:	4313      	orrs	r3, r2
 8002fe2:	608b      	str	r3, [r1, #8]
 8002fe4:	e006      	b.n	8002ff4 <HAL_GPIO_Init+0x234>
 8002fe6:	4b2a      	ldr	r3, [pc, #168]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8002fe8:	689a      	ldr	r2, [r3, #8]
 8002fea:	69bb      	ldr	r3, [r7, #24]
 8002fec:	43db      	mvns	r3, r3
 8002fee:	4928      	ldr	r1, [pc, #160]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8002ff0:	4013      	ands	r3, r2
 8002ff2:	608b      	str	r3, [r1, #8]
 8002ff4:	683b      	ldr	r3, [r7, #0]
 8002ff6:	685b      	ldr	r3, [r3, #4]
 8002ff8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	d006      	beq.n	800300e <HAL_GPIO_Init+0x24e>
 8003000:	4b23      	ldr	r3, [pc, #140]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8003002:	68da      	ldr	r2, [r3, #12]
 8003004:	4922      	ldr	r1, [pc, #136]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8003006:	69bb      	ldr	r3, [r7, #24]
 8003008:	4313      	orrs	r3, r2
 800300a:	60cb      	str	r3, [r1, #12]
 800300c:	e006      	b.n	800301c <HAL_GPIO_Init+0x25c>
 800300e:	4b20      	ldr	r3, [pc, #128]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8003010:	68da      	ldr	r2, [r3, #12]
 8003012:	69bb      	ldr	r3, [r7, #24]
 8003014:	43db      	mvns	r3, r3
 8003016:	491e      	ldr	r1, [pc, #120]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8003018:	4013      	ands	r3, r2
 800301a:	60cb      	str	r3, [r1, #12]
 800301c:	683b      	ldr	r3, [r7, #0]
 800301e:	685b      	ldr	r3, [r3, #4]
 8003020:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003024:	2b00      	cmp	r3, #0
 8003026:	d006      	beq.n	8003036 <HAL_GPIO_Init+0x276>
 8003028:	4b19      	ldr	r3, [pc, #100]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 800302a:	685a      	ldr	r2, [r3, #4]
 800302c:	4918      	ldr	r1, [pc, #96]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 800302e:	69bb      	ldr	r3, [r7, #24]
 8003030:	4313      	orrs	r3, r2
 8003032:	604b      	str	r3, [r1, #4]
 8003034:	e006      	b.n	8003044 <HAL_GPIO_Init+0x284>
 8003036:	4b16      	ldr	r3, [pc, #88]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8003038:	685a      	ldr	r2, [r3, #4]
 800303a:	69bb      	ldr	r3, [r7, #24]
 800303c:	43db      	mvns	r3, r3
 800303e:	4914      	ldr	r1, [pc, #80]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8003040:	4013      	ands	r3, r2
 8003042:	604b      	str	r3, [r1, #4]
 8003044:	683b      	ldr	r3, [r7, #0]
 8003046:	685b      	ldr	r3, [r3, #4]
 8003048:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800304c:	2b00      	cmp	r3, #0
 800304e:	d021      	beq.n	8003094 <HAL_GPIO_Init+0x2d4>
 8003050:	4b0f      	ldr	r3, [pc, #60]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8003052:	681a      	ldr	r2, [r3, #0]
 8003054:	490e      	ldr	r1, [pc, #56]	; (8003090 <HAL_GPIO_Init+0x2d0>)
 8003056:	69bb      	ldr	r3, [r7, #24]
 8003058:	4313      	orrs	r3, r2
 800305a:	600b      	str	r3, [r1, #0]
 800305c:	e021      	b.n	80030a2 <HAL_GPIO_Init+0x2e2>
 800305e:	bf00      	nop
 8003060:	10320000 	.word	0x10320000
 8003064:	10310000 	.word	0x10310000
 8003068:	10220000 	.word	0x10220000
 800306c:	10210000 	.word	0x10210000
 8003070:	10120000 	.word	0x10120000
 8003074:	10110000 	.word	0x10110000
 8003078:	40021000 	.word	0x40021000
 800307c:	40010000 	.word	0x40010000
 8003080:	40010800 	.word	0x40010800
 8003084:	40010c00 	.word	0x40010c00
 8003088:	40011000 	.word	0x40011000
 800308c:	40011400 	.word	0x40011400
 8003090:	40010400 	.word	0x40010400
 8003094:	4b0b      	ldr	r3, [pc, #44]	; (80030c4 <HAL_GPIO_Init+0x304>)
 8003096:	681a      	ldr	r2, [r3, #0]
 8003098:	69bb      	ldr	r3, [r7, #24]
 800309a:	43db      	mvns	r3, r3
 800309c:	4909      	ldr	r1, [pc, #36]	; (80030c4 <HAL_GPIO_Init+0x304>)
 800309e:	4013      	ands	r3, r2
 80030a0:	600b      	str	r3, [r1, #0]
 80030a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030a4:	3301      	adds	r3, #1
 80030a6:	627b      	str	r3, [r7, #36]	; 0x24
 80030a8:	683b      	ldr	r3, [r7, #0]
 80030aa:	681a      	ldr	r2, [r3, #0]
 80030ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030ae:	fa22 f303 	lsr.w	r3, r2, r3
 80030b2:	2b00      	cmp	r3, #0
 80030b4:	f47f ae8e 	bne.w	8002dd4 <HAL_GPIO_Init+0x14>
 80030b8:	bf00      	nop
 80030ba:	bf00      	nop
 80030bc:	372c      	adds	r7, #44	; 0x2c
 80030be:	46bd      	mov	sp, r7
 80030c0:	bc80      	pop	{r7}
 80030c2:	4770      	bx	lr
 80030c4:	40010400 	.word	0x40010400

080030c8 <HAL_GPIO_ReadPin>:
 80030c8:	b480      	push	{r7}
 80030ca:	b085      	sub	sp, #20
 80030cc:	af00      	add	r7, sp, #0
 80030ce:	6078      	str	r0, [r7, #4]
 80030d0:	460b      	mov	r3, r1
 80030d2:	807b      	strh	r3, [r7, #2]
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	689a      	ldr	r2, [r3, #8]
 80030d8:	887b      	ldrh	r3, [r7, #2]
 80030da:	4013      	ands	r3, r2
 80030dc:	2b00      	cmp	r3, #0
 80030de:	d002      	beq.n	80030e6 <HAL_GPIO_ReadPin+0x1e>
 80030e0:	2301      	movs	r3, #1
 80030e2:	73fb      	strb	r3, [r7, #15]
 80030e4:	e001      	b.n	80030ea <HAL_GPIO_ReadPin+0x22>
 80030e6:	2300      	movs	r3, #0
 80030e8:	73fb      	strb	r3, [r7, #15]
 80030ea:	7bfb      	ldrb	r3, [r7, #15]
 80030ec:	4618      	mov	r0, r3
 80030ee:	3714      	adds	r7, #20
 80030f0:	46bd      	mov	sp, r7
 80030f2:	bc80      	pop	{r7}
 80030f4:	4770      	bx	lr

080030f6 <HAL_GPIO_WritePin>:
 80030f6:	b480      	push	{r7}
 80030f8:	b083      	sub	sp, #12
 80030fa:	af00      	add	r7, sp, #0
 80030fc:	6078      	str	r0, [r7, #4]
 80030fe:	460b      	mov	r3, r1
 8003100:	807b      	strh	r3, [r7, #2]
 8003102:	4613      	mov	r3, r2
 8003104:	707b      	strb	r3, [r7, #1]
 8003106:	787b      	ldrb	r3, [r7, #1]
 8003108:	2b00      	cmp	r3, #0
 800310a:	d003      	beq.n	8003114 <HAL_GPIO_WritePin+0x1e>
 800310c:	887a      	ldrh	r2, [r7, #2]
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	611a      	str	r2, [r3, #16]
 8003112:	e003      	b.n	800311c <HAL_GPIO_WritePin+0x26>
 8003114:	887b      	ldrh	r3, [r7, #2]
 8003116:	041a      	lsls	r2, r3, #16
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	611a      	str	r2, [r3, #16]
 800311c:	bf00      	nop
 800311e:	370c      	adds	r7, #12
 8003120:	46bd      	mov	sp, r7
 8003122:	bc80      	pop	{r7}
 8003124:	4770      	bx	lr

08003126 <HAL_GPIO_TogglePin>:
 8003126:	b480      	push	{r7}
 8003128:	b085      	sub	sp, #20
 800312a:	af00      	add	r7, sp, #0
 800312c:	6078      	str	r0, [r7, #4]
 800312e:	460b      	mov	r3, r1
 8003130:	807b      	strh	r3, [r7, #2]
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	68db      	ldr	r3, [r3, #12]
 8003136:	60fb      	str	r3, [r7, #12]
 8003138:	887a      	ldrh	r2, [r7, #2]
 800313a:	68fb      	ldr	r3, [r7, #12]
 800313c:	4013      	ands	r3, r2
 800313e:	041a      	lsls	r2, r3, #16
 8003140:	68fb      	ldr	r3, [r7, #12]
 8003142:	43d9      	mvns	r1, r3
 8003144:	887b      	ldrh	r3, [r7, #2]
 8003146:	400b      	ands	r3, r1
 8003148:	431a      	orrs	r2, r3
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	611a      	str	r2, [r3, #16]
 800314e:	bf00      	nop
 8003150:	3714      	adds	r7, #20
 8003152:	46bd      	mov	sp, r7
 8003154:	bc80      	pop	{r7}
 8003156:	4770      	bx	lr

08003158 <HAL_PWR_EnterSLEEPMode>:
 8003158:	b480      	push	{r7}
 800315a:	b083      	sub	sp, #12
 800315c:	af00      	add	r7, sp, #0
 800315e:	6078      	str	r0, [r7, #4]
 8003160:	460b      	mov	r3, r1
 8003162:	70fb      	strb	r3, [r7, #3]
 8003164:	4b09      	ldr	r3, [pc, #36]	; (800318c <HAL_PWR_EnterSLEEPMode+0x34>)
 8003166:	691b      	ldr	r3, [r3, #16]
 8003168:	4a08      	ldr	r2, [pc, #32]	; (800318c <HAL_PWR_EnterSLEEPMode+0x34>)
 800316a:	f023 0304 	bic.w	r3, r3, #4
 800316e:	6113      	str	r3, [r2, #16]
 8003170:	78fb      	ldrb	r3, [r7, #3]
 8003172:	2b01      	cmp	r3, #1
 8003174:	d101      	bne.n	800317a <HAL_PWR_EnterSLEEPMode+0x22>
 8003176:	bf30      	wfi
 8003178:	e002      	b.n	8003180 <HAL_PWR_EnterSLEEPMode+0x28>
 800317a:	bf40      	sev
 800317c:	bf20      	wfe
 800317e:	bf20      	wfe
 8003180:	bf00      	nop
 8003182:	370c      	adds	r7, #12
 8003184:	46bd      	mov	sp, r7
 8003186:	bc80      	pop	{r7}
 8003188:	4770      	bx	lr
 800318a:	bf00      	nop
 800318c:	e000ed00 	.word	0xe000ed00

08003190 <HAL_RCC_OscConfig>:
 8003190:	b580      	push	{r7, lr}
 8003192:	b086      	sub	sp, #24
 8003194:	af00      	add	r7, sp, #0
 8003196:	6078      	str	r0, [r7, #4]
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	2b00      	cmp	r3, #0
 800319c:	d101      	bne.n	80031a2 <HAL_RCC_OscConfig+0x12>
 800319e:	2301      	movs	r3, #1
 80031a0:	e26c      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	f003 0301 	and.w	r3, r3, #1
 80031aa:	2b00      	cmp	r3, #0
 80031ac:	f000 8087 	beq.w	80032be <HAL_RCC_OscConfig+0x12e>
 80031b0:	4b92      	ldr	r3, [pc, #584]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80031b2:	685b      	ldr	r3, [r3, #4]
 80031b4:	f003 030c 	and.w	r3, r3, #12
 80031b8:	2b04      	cmp	r3, #4
 80031ba:	d00c      	beq.n	80031d6 <HAL_RCC_OscConfig+0x46>
 80031bc:	4b8f      	ldr	r3, [pc, #572]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80031be:	685b      	ldr	r3, [r3, #4]
 80031c0:	f003 030c 	and.w	r3, r3, #12
 80031c4:	2b08      	cmp	r3, #8
 80031c6:	d112      	bne.n	80031ee <HAL_RCC_OscConfig+0x5e>
 80031c8:	4b8c      	ldr	r3, [pc, #560]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80031ca:	685b      	ldr	r3, [r3, #4]
 80031cc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80031d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80031d4:	d10b      	bne.n	80031ee <HAL_RCC_OscConfig+0x5e>
 80031d6:	4b89      	ldr	r3, [pc, #548]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d06c      	beq.n	80032bc <HAL_RCC_OscConfig+0x12c>
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	685b      	ldr	r3, [r3, #4]
 80031e6:	2b00      	cmp	r3, #0
 80031e8:	d168      	bne.n	80032bc <HAL_RCC_OscConfig+0x12c>
 80031ea:	2301      	movs	r3, #1
 80031ec:	e246      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	685b      	ldr	r3, [r3, #4]
 80031f2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80031f6:	d106      	bne.n	8003206 <HAL_RCC_OscConfig+0x76>
 80031f8:	4b80      	ldr	r3, [pc, #512]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	4a7f      	ldr	r2, [pc, #508]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80031fe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003202:	6013      	str	r3, [r2, #0]
 8003204:	e02e      	b.n	8003264 <HAL_RCC_OscConfig+0xd4>
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	685b      	ldr	r3, [r3, #4]
 800320a:	2b00      	cmp	r3, #0
 800320c:	d10c      	bne.n	8003228 <HAL_RCC_OscConfig+0x98>
 800320e:	4b7b      	ldr	r3, [pc, #492]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	4a7a      	ldr	r2, [pc, #488]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003214:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003218:	6013      	str	r3, [r2, #0]
 800321a:	4b78      	ldr	r3, [pc, #480]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	4a77      	ldr	r2, [pc, #476]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003220:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003224:	6013      	str	r3, [r2, #0]
 8003226:	e01d      	b.n	8003264 <HAL_RCC_OscConfig+0xd4>
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	685b      	ldr	r3, [r3, #4]
 800322c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003230:	d10c      	bne.n	800324c <HAL_RCC_OscConfig+0xbc>
 8003232:	4b72      	ldr	r3, [pc, #456]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	4a71      	ldr	r2, [pc, #452]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003238:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800323c:	6013      	str	r3, [r2, #0]
 800323e:	4b6f      	ldr	r3, [pc, #444]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	4a6e      	ldr	r2, [pc, #440]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003244:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003248:	6013      	str	r3, [r2, #0]
 800324a:	e00b      	b.n	8003264 <HAL_RCC_OscConfig+0xd4>
 800324c:	4b6b      	ldr	r3, [pc, #428]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	4a6a      	ldr	r2, [pc, #424]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003252:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003256:	6013      	str	r3, [r2, #0]
 8003258:	4b68      	ldr	r3, [pc, #416]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	4a67      	ldr	r2, [pc, #412]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 800325e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003262:	6013      	str	r3, [r2, #0]
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	685b      	ldr	r3, [r3, #4]
 8003268:	2b00      	cmp	r3, #0
 800326a:	d013      	beq.n	8003294 <HAL_RCC_OscConfig+0x104>
 800326c:	f7ff fbde 	bl	8002a2c <HAL_GetTick>
 8003270:	6138      	str	r0, [r7, #16]
 8003272:	e008      	b.n	8003286 <HAL_RCC_OscConfig+0xf6>
 8003274:	f7ff fbda 	bl	8002a2c <HAL_GetTick>
 8003278:	4602      	mov	r2, r0
 800327a:	693b      	ldr	r3, [r7, #16]
 800327c:	1ad3      	subs	r3, r2, r3
 800327e:	2b64      	cmp	r3, #100	; 0x64
 8003280:	d901      	bls.n	8003286 <HAL_RCC_OscConfig+0xf6>
 8003282:	2303      	movs	r3, #3
 8003284:	e1fa      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 8003286:	4b5d      	ldr	r3, [pc, #372]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800328e:	2b00      	cmp	r3, #0
 8003290:	d0f0      	beq.n	8003274 <HAL_RCC_OscConfig+0xe4>
 8003292:	e014      	b.n	80032be <HAL_RCC_OscConfig+0x12e>
 8003294:	f7ff fbca 	bl	8002a2c <HAL_GetTick>
 8003298:	6138      	str	r0, [r7, #16]
 800329a:	e008      	b.n	80032ae <HAL_RCC_OscConfig+0x11e>
 800329c:	f7ff fbc6 	bl	8002a2c <HAL_GetTick>
 80032a0:	4602      	mov	r2, r0
 80032a2:	693b      	ldr	r3, [r7, #16]
 80032a4:	1ad3      	subs	r3, r2, r3
 80032a6:	2b64      	cmp	r3, #100	; 0x64
 80032a8:	d901      	bls.n	80032ae <HAL_RCC_OscConfig+0x11e>
 80032aa:	2303      	movs	r3, #3
 80032ac:	e1e6      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 80032ae:	4b53      	ldr	r3, [pc, #332]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80032b0:	681b      	ldr	r3, [r3, #0]
 80032b2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	d1f0      	bne.n	800329c <HAL_RCC_OscConfig+0x10c>
 80032ba:	e000      	b.n	80032be <HAL_RCC_OscConfig+0x12e>
 80032bc:	bf00      	nop
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	f003 0302 	and.w	r3, r3, #2
 80032c6:	2b00      	cmp	r3, #0
 80032c8:	d063      	beq.n	8003392 <HAL_RCC_OscConfig+0x202>
 80032ca:	4b4c      	ldr	r3, [pc, #304]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80032cc:	685b      	ldr	r3, [r3, #4]
 80032ce:	f003 030c 	and.w	r3, r3, #12
 80032d2:	2b00      	cmp	r3, #0
 80032d4:	d00b      	beq.n	80032ee <HAL_RCC_OscConfig+0x15e>
 80032d6:	4b49      	ldr	r3, [pc, #292]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80032d8:	685b      	ldr	r3, [r3, #4]
 80032da:	f003 030c 	and.w	r3, r3, #12
 80032de:	2b08      	cmp	r3, #8
 80032e0:	d11c      	bne.n	800331c <HAL_RCC_OscConfig+0x18c>
 80032e2:	4b46      	ldr	r3, [pc, #280]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80032e4:	685b      	ldr	r3, [r3, #4]
 80032e6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d116      	bne.n	800331c <HAL_RCC_OscConfig+0x18c>
 80032ee:	4b43      	ldr	r3, [pc, #268]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	f003 0302 	and.w	r3, r3, #2
 80032f6:	2b00      	cmp	r3, #0
 80032f8:	d005      	beq.n	8003306 <HAL_RCC_OscConfig+0x176>
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	691b      	ldr	r3, [r3, #16]
 80032fe:	2b01      	cmp	r3, #1
 8003300:	d001      	beq.n	8003306 <HAL_RCC_OscConfig+0x176>
 8003302:	2301      	movs	r3, #1
 8003304:	e1ba      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 8003306:	4b3d      	ldr	r3, [pc, #244]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	695b      	ldr	r3, [r3, #20]
 8003312:	00db      	lsls	r3, r3, #3
 8003314:	4939      	ldr	r1, [pc, #228]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003316:	4313      	orrs	r3, r2
 8003318:	600b      	str	r3, [r1, #0]
 800331a:	e03a      	b.n	8003392 <HAL_RCC_OscConfig+0x202>
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	691b      	ldr	r3, [r3, #16]
 8003320:	2b00      	cmp	r3, #0
 8003322:	d020      	beq.n	8003366 <HAL_RCC_OscConfig+0x1d6>
 8003324:	4b36      	ldr	r3, [pc, #216]	; (8003400 <HAL_RCC_OscConfig+0x270>)
 8003326:	2201      	movs	r2, #1
 8003328:	601a      	str	r2, [r3, #0]
 800332a:	f7ff fb7f 	bl	8002a2c <HAL_GetTick>
 800332e:	6138      	str	r0, [r7, #16]
 8003330:	e008      	b.n	8003344 <HAL_RCC_OscConfig+0x1b4>
 8003332:	f7ff fb7b 	bl	8002a2c <HAL_GetTick>
 8003336:	4602      	mov	r2, r0
 8003338:	693b      	ldr	r3, [r7, #16]
 800333a:	1ad3      	subs	r3, r2, r3
 800333c:	2b02      	cmp	r3, #2
 800333e:	d901      	bls.n	8003344 <HAL_RCC_OscConfig+0x1b4>
 8003340:	2303      	movs	r3, #3
 8003342:	e19b      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 8003344:	4b2d      	ldr	r3, [pc, #180]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	f003 0302 	and.w	r3, r3, #2
 800334c:	2b00      	cmp	r3, #0
 800334e:	d0f0      	beq.n	8003332 <HAL_RCC_OscConfig+0x1a2>
 8003350:	4b2a      	ldr	r3, [pc, #168]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	695b      	ldr	r3, [r3, #20]
 800335c:	00db      	lsls	r3, r3, #3
 800335e:	4927      	ldr	r1, [pc, #156]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003360:	4313      	orrs	r3, r2
 8003362:	600b      	str	r3, [r1, #0]
 8003364:	e015      	b.n	8003392 <HAL_RCC_OscConfig+0x202>
 8003366:	4b26      	ldr	r3, [pc, #152]	; (8003400 <HAL_RCC_OscConfig+0x270>)
 8003368:	2200      	movs	r2, #0
 800336a:	601a      	str	r2, [r3, #0]
 800336c:	f7ff fb5e 	bl	8002a2c <HAL_GetTick>
 8003370:	6138      	str	r0, [r7, #16]
 8003372:	e008      	b.n	8003386 <HAL_RCC_OscConfig+0x1f6>
 8003374:	f7ff fb5a 	bl	8002a2c <HAL_GetTick>
 8003378:	4602      	mov	r2, r0
 800337a:	693b      	ldr	r3, [r7, #16]
 800337c:	1ad3      	subs	r3, r2, r3
 800337e:	2b02      	cmp	r3, #2
 8003380:	d901      	bls.n	8003386 <HAL_RCC_OscConfig+0x1f6>
 8003382:	2303      	movs	r3, #3
 8003384:	e17a      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 8003386:	4b1d      	ldr	r3, [pc, #116]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	f003 0302 	and.w	r3, r3, #2
 800338e:	2b00      	cmp	r3, #0
 8003390:	d1f0      	bne.n	8003374 <HAL_RCC_OscConfig+0x1e4>
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	f003 0308 	and.w	r3, r3, #8
 800339a:	2b00      	cmp	r3, #0
 800339c:	d03a      	beq.n	8003414 <HAL_RCC_OscConfig+0x284>
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	699b      	ldr	r3, [r3, #24]
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	d019      	beq.n	80033da <HAL_RCC_OscConfig+0x24a>
 80033a6:	4b17      	ldr	r3, [pc, #92]	; (8003404 <HAL_RCC_OscConfig+0x274>)
 80033a8:	2201      	movs	r2, #1
 80033aa:	601a      	str	r2, [r3, #0]
 80033ac:	f7ff fb3e 	bl	8002a2c <HAL_GetTick>
 80033b0:	6138      	str	r0, [r7, #16]
 80033b2:	e008      	b.n	80033c6 <HAL_RCC_OscConfig+0x236>
 80033b4:	f7ff fb3a 	bl	8002a2c <HAL_GetTick>
 80033b8:	4602      	mov	r2, r0
 80033ba:	693b      	ldr	r3, [r7, #16]
 80033bc:	1ad3      	subs	r3, r2, r3
 80033be:	2b02      	cmp	r3, #2
 80033c0:	d901      	bls.n	80033c6 <HAL_RCC_OscConfig+0x236>
 80033c2:	2303      	movs	r3, #3
 80033c4:	e15a      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 80033c6:	4b0d      	ldr	r3, [pc, #52]	; (80033fc <HAL_RCC_OscConfig+0x26c>)
 80033c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033ca:	f003 0302 	and.w	r3, r3, #2
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	d0f0      	beq.n	80033b4 <HAL_RCC_OscConfig+0x224>
 80033d2:	2001      	movs	r0, #1
 80033d4:	f000 facc 	bl	8003970 <RCC_Delay>
 80033d8:	e01c      	b.n	8003414 <HAL_RCC_OscConfig+0x284>
 80033da:	4b0a      	ldr	r3, [pc, #40]	; (8003404 <HAL_RCC_OscConfig+0x274>)
 80033dc:	2200      	movs	r2, #0
 80033de:	601a      	str	r2, [r3, #0]
 80033e0:	f7ff fb24 	bl	8002a2c <HAL_GetTick>
 80033e4:	6138      	str	r0, [r7, #16]
 80033e6:	e00f      	b.n	8003408 <HAL_RCC_OscConfig+0x278>
 80033e8:	f7ff fb20 	bl	8002a2c <HAL_GetTick>
 80033ec:	4602      	mov	r2, r0
 80033ee:	693b      	ldr	r3, [r7, #16]
 80033f0:	1ad3      	subs	r3, r2, r3
 80033f2:	2b02      	cmp	r3, #2
 80033f4:	d908      	bls.n	8003408 <HAL_RCC_OscConfig+0x278>
 80033f6:	2303      	movs	r3, #3
 80033f8:	e140      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 80033fa:	bf00      	nop
 80033fc:	40021000 	.word	0x40021000
 8003400:	42420000 	.word	0x42420000
 8003404:	42420480 	.word	0x42420480
 8003408:	4b9e      	ldr	r3, [pc, #632]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 800340a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800340c:	f003 0302 	and.w	r3, r3, #2
 8003410:	2b00      	cmp	r3, #0
 8003412:	d1e9      	bne.n	80033e8 <HAL_RCC_OscConfig+0x258>
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	681b      	ldr	r3, [r3, #0]
 8003418:	f003 0304 	and.w	r3, r3, #4
 800341c:	2b00      	cmp	r3, #0
 800341e:	f000 80a6 	beq.w	800356e <HAL_RCC_OscConfig+0x3de>
 8003422:	2300      	movs	r3, #0
 8003424:	75fb      	strb	r3, [r7, #23]
 8003426:	4b97      	ldr	r3, [pc, #604]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003428:	69db      	ldr	r3, [r3, #28]
 800342a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800342e:	2b00      	cmp	r3, #0
 8003430:	d10d      	bne.n	800344e <HAL_RCC_OscConfig+0x2be>
 8003432:	4b94      	ldr	r3, [pc, #592]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003434:	69db      	ldr	r3, [r3, #28]
 8003436:	4a93      	ldr	r2, [pc, #588]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003438:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800343c:	61d3      	str	r3, [r2, #28]
 800343e:	4b91      	ldr	r3, [pc, #580]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003440:	69db      	ldr	r3, [r3, #28]
 8003442:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003446:	60bb      	str	r3, [r7, #8]
 8003448:	68bb      	ldr	r3, [r7, #8]
 800344a:	2301      	movs	r3, #1
 800344c:	75fb      	strb	r3, [r7, #23]
 800344e:	4b8e      	ldr	r3, [pc, #568]	; (8003688 <HAL_RCC_OscConfig+0x4f8>)
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003456:	2b00      	cmp	r3, #0
 8003458:	d118      	bne.n	800348c <HAL_RCC_OscConfig+0x2fc>
 800345a:	4b8b      	ldr	r3, [pc, #556]	; (8003688 <HAL_RCC_OscConfig+0x4f8>)
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	4a8a      	ldr	r2, [pc, #552]	; (8003688 <HAL_RCC_OscConfig+0x4f8>)
 8003460:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003464:	6013      	str	r3, [r2, #0]
 8003466:	f7ff fae1 	bl	8002a2c <HAL_GetTick>
 800346a:	6138      	str	r0, [r7, #16]
 800346c:	e008      	b.n	8003480 <HAL_RCC_OscConfig+0x2f0>
 800346e:	f7ff fadd 	bl	8002a2c <HAL_GetTick>
 8003472:	4602      	mov	r2, r0
 8003474:	693b      	ldr	r3, [r7, #16]
 8003476:	1ad3      	subs	r3, r2, r3
 8003478:	2b64      	cmp	r3, #100	; 0x64
 800347a:	d901      	bls.n	8003480 <HAL_RCC_OscConfig+0x2f0>
 800347c:	2303      	movs	r3, #3
 800347e:	e0fd      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 8003480:	4b81      	ldr	r3, [pc, #516]	; (8003688 <HAL_RCC_OscConfig+0x4f8>)
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003488:	2b00      	cmp	r3, #0
 800348a:	d0f0      	beq.n	800346e <HAL_RCC_OscConfig+0x2de>
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	68db      	ldr	r3, [r3, #12]
 8003490:	2b01      	cmp	r3, #1
 8003492:	d106      	bne.n	80034a2 <HAL_RCC_OscConfig+0x312>
 8003494:	4b7b      	ldr	r3, [pc, #492]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003496:	6a1b      	ldr	r3, [r3, #32]
 8003498:	4a7a      	ldr	r2, [pc, #488]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 800349a:	f043 0301 	orr.w	r3, r3, #1
 800349e:	6213      	str	r3, [r2, #32]
 80034a0:	e02d      	b.n	80034fe <HAL_RCC_OscConfig+0x36e>
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	68db      	ldr	r3, [r3, #12]
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	d10c      	bne.n	80034c4 <HAL_RCC_OscConfig+0x334>
 80034aa:	4b76      	ldr	r3, [pc, #472]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034ac:	6a1b      	ldr	r3, [r3, #32]
 80034ae:	4a75      	ldr	r2, [pc, #468]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034b0:	f023 0301 	bic.w	r3, r3, #1
 80034b4:	6213      	str	r3, [r2, #32]
 80034b6:	4b73      	ldr	r3, [pc, #460]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034b8:	6a1b      	ldr	r3, [r3, #32]
 80034ba:	4a72      	ldr	r2, [pc, #456]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034bc:	f023 0304 	bic.w	r3, r3, #4
 80034c0:	6213      	str	r3, [r2, #32]
 80034c2:	e01c      	b.n	80034fe <HAL_RCC_OscConfig+0x36e>
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	68db      	ldr	r3, [r3, #12]
 80034c8:	2b05      	cmp	r3, #5
 80034ca:	d10c      	bne.n	80034e6 <HAL_RCC_OscConfig+0x356>
 80034cc:	4b6d      	ldr	r3, [pc, #436]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034ce:	6a1b      	ldr	r3, [r3, #32]
 80034d0:	4a6c      	ldr	r2, [pc, #432]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034d2:	f043 0304 	orr.w	r3, r3, #4
 80034d6:	6213      	str	r3, [r2, #32]
 80034d8:	4b6a      	ldr	r3, [pc, #424]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034da:	6a1b      	ldr	r3, [r3, #32]
 80034dc:	4a69      	ldr	r2, [pc, #420]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034de:	f043 0301 	orr.w	r3, r3, #1
 80034e2:	6213      	str	r3, [r2, #32]
 80034e4:	e00b      	b.n	80034fe <HAL_RCC_OscConfig+0x36e>
 80034e6:	4b67      	ldr	r3, [pc, #412]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034e8:	6a1b      	ldr	r3, [r3, #32]
 80034ea:	4a66      	ldr	r2, [pc, #408]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034ec:	f023 0301 	bic.w	r3, r3, #1
 80034f0:	6213      	str	r3, [r2, #32]
 80034f2:	4b64      	ldr	r3, [pc, #400]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034f4:	6a1b      	ldr	r3, [r3, #32]
 80034f6:	4a63      	ldr	r2, [pc, #396]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80034f8:	f023 0304 	bic.w	r3, r3, #4
 80034fc:	6213      	str	r3, [r2, #32]
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	68db      	ldr	r3, [r3, #12]
 8003502:	2b00      	cmp	r3, #0
 8003504:	d015      	beq.n	8003532 <HAL_RCC_OscConfig+0x3a2>
 8003506:	f7ff fa91 	bl	8002a2c <HAL_GetTick>
 800350a:	6138      	str	r0, [r7, #16]
 800350c:	e00a      	b.n	8003524 <HAL_RCC_OscConfig+0x394>
 800350e:	f7ff fa8d 	bl	8002a2c <HAL_GetTick>
 8003512:	4602      	mov	r2, r0
 8003514:	693b      	ldr	r3, [r7, #16]
 8003516:	1ad3      	subs	r3, r2, r3
 8003518:	f241 3288 	movw	r2, #5000	; 0x1388
 800351c:	4293      	cmp	r3, r2
 800351e:	d901      	bls.n	8003524 <HAL_RCC_OscConfig+0x394>
 8003520:	2303      	movs	r3, #3
 8003522:	e0ab      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 8003524:	4b57      	ldr	r3, [pc, #348]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003526:	6a1b      	ldr	r3, [r3, #32]
 8003528:	f003 0302 	and.w	r3, r3, #2
 800352c:	2b00      	cmp	r3, #0
 800352e:	d0ee      	beq.n	800350e <HAL_RCC_OscConfig+0x37e>
 8003530:	e014      	b.n	800355c <HAL_RCC_OscConfig+0x3cc>
 8003532:	f7ff fa7b 	bl	8002a2c <HAL_GetTick>
 8003536:	6138      	str	r0, [r7, #16]
 8003538:	e00a      	b.n	8003550 <HAL_RCC_OscConfig+0x3c0>
 800353a:	f7ff fa77 	bl	8002a2c <HAL_GetTick>
 800353e:	4602      	mov	r2, r0
 8003540:	693b      	ldr	r3, [r7, #16]
 8003542:	1ad3      	subs	r3, r2, r3
 8003544:	f241 3288 	movw	r2, #5000	; 0x1388
 8003548:	4293      	cmp	r3, r2
 800354a:	d901      	bls.n	8003550 <HAL_RCC_OscConfig+0x3c0>
 800354c:	2303      	movs	r3, #3
 800354e:	e095      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 8003550:	4b4c      	ldr	r3, [pc, #304]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003552:	6a1b      	ldr	r3, [r3, #32]
 8003554:	f003 0302 	and.w	r3, r3, #2
 8003558:	2b00      	cmp	r3, #0
 800355a:	d1ee      	bne.n	800353a <HAL_RCC_OscConfig+0x3aa>
 800355c:	7dfb      	ldrb	r3, [r7, #23]
 800355e:	2b01      	cmp	r3, #1
 8003560:	d105      	bne.n	800356e <HAL_RCC_OscConfig+0x3de>
 8003562:	4b48      	ldr	r3, [pc, #288]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003564:	69db      	ldr	r3, [r3, #28]
 8003566:	4a47      	ldr	r2, [pc, #284]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003568:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800356c:	61d3      	str	r3, [r2, #28]
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	69db      	ldr	r3, [r3, #28]
 8003572:	2b00      	cmp	r3, #0
 8003574:	f000 8081 	beq.w	800367a <HAL_RCC_OscConfig+0x4ea>
 8003578:	4b42      	ldr	r3, [pc, #264]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 800357a:	685b      	ldr	r3, [r3, #4]
 800357c:	f003 030c 	and.w	r3, r3, #12
 8003580:	2b08      	cmp	r3, #8
 8003582:	d061      	beq.n	8003648 <HAL_RCC_OscConfig+0x4b8>
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	69db      	ldr	r3, [r3, #28]
 8003588:	2b02      	cmp	r3, #2
 800358a:	d146      	bne.n	800361a <HAL_RCC_OscConfig+0x48a>
 800358c:	4b3f      	ldr	r3, [pc, #252]	; (800368c <HAL_RCC_OscConfig+0x4fc>)
 800358e:	2200      	movs	r2, #0
 8003590:	601a      	str	r2, [r3, #0]
 8003592:	f7ff fa4b 	bl	8002a2c <HAL_GetTick>
 8003596:	6138      	str	r0, [r7, #16]
 8003598:	e008      	b.n	80035ac <HAL_RCC_OscConfig+0x41c>
 800359a:	f7ff fa47 	bl	8002a2c <HAL_GetTick>
 800359e:	4602      	mov	r2, r0
 80035a0:	693b      	ldr	r3, [r7, #16]
 80035a2:	1ad3      	subs	r3, r2, r3
 80035a4:	2b02      	cmp	r3, #2
 80035a6:	d901      	bls.n	80035ac <HAL_RCC_OscConfig+0x41c>
 80035a8:	2303      	movs	r3, #3
 80035aa:	e067      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 80035ac:	4b35      	ldr	r3, [pc, #212]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80035b4:	2b00      	cmp	r3, #0
 80035b6:	d1f0      	bne.n	800359a <HAL_RCC_OscConfig+0x40a>
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	6a1b      	ldr	r3, [r3, #32]
 80035bc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80035c0:	d108      	bne.n	80035d4 <HAL_RCC_OscConfig+0x444>
 80035c2:	4b30      	ldr	r3, [pc, #192]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80035c4:	685b      	ldr	r3, [r3, #4]
 80035c6:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	689b      	ldr	r3, [r3, #8]
 80035ce:	492d      	ldr	r1, [pc, #180]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80035d0:	4313      	orrs	r3, r2
 80035d2:	604b      	str	r3, [r1, #4]
 80035d4:	4b2b      	ldr	r3, [pc, #172]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80035d6:	685b      	ldr	r3, [r3, #4]
 80035d8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	6a19      	ldr	r1, [r3, #32]
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035e4:	430b      	orrs	r3, r1
 80035e6:	4927      	ldr	r1, [pc, #156]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 80035e8:	4313      	orrs	r3, r2
 80035ea:	604b      	str	r3, [r1, #4]
 80035ec:	4b27      	ldr	r3, [pc, #156]	; (800368c <HAL_RCC_OscConfig+0x4fc>)
 80035ee:	2201      	movs	r2, #1
 80035f0:	601a      	str	r2, [r3, #0]
 80035f2:	f7ff fa1b 	bl	8002a2c <HAL_GetTick>
 80035f6:	6138      	str	r0, [r7, #16]
 80035f8:	e008      	b.n	800360c <HAL_RCC_OscConfig+0x47c>
 80035fa:	f7ff fa17 	bl	8002a2c <HAL_GetTick>
 80035fe:	4602      	mov	r2, r0
 8003600:	693b      	ldr	r3, [r7, #16]
 8003602:	1ad3      	subs	r3, r2, r3
 8003604:	2b02      	cmp	r3, #2
 8003606:	d901      	bls.n	800360c <HAL_RCC_OscConfig+0x47c>
 8003608:	2303      	movs	r3, #3
 800360a:	e037      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 800360c:	4b1d      	ldr	r3, [pc, #116]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003614:	2b00      	cmp	r3, #0
 8003616:	d0f0      	beq.n	80035fa <HAL_RCC_OscConfig+0x46a>
 8003618:	e02f      	b.n	800367a <HAL_RCC_OscConfig+0x4ea>
 800361a:	4b1c      	ldr	r3, [pc, #112]	; (800368c <HAL_RCC_OscConfig+0x4fc>)
 800361c:	2200      	movs	r2, #0
 800361e:	601a      	str	r2, [r3, #0]
 8003620:	f7ff fa04 	bl	8002a2c <HAL_GetTick>
 8003624:	6138      	str	r0, [r7, #16]
 8003626:	e008      	b.n	800363a <HAL_RCC_OscConfig+0x4aa>
 8003628:	f7ff fa00 	bl	8002a2c <HAL_GetTick>
 800362c:	4602      	mov	r2, r0
 800362e:	693b      	ldr	r3, [r7, #16]
 8003630:	1ad3      	subs	r3, r2, r3
 8003632:	2b02      	cmp	r3, #2
 8003634:	d901      	bls.n	800363a <HAL_RCC_OscConfig+0x4aa>
 8003636:	2303      	movs	r3, #3
 8003638:	e020      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 800363a:	4b12      	ldr	r3, [pc, #72]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003642:	2b00      	cmp	r3, #0
 8003644:	d1f0      	bne.n	8003628 <HAL_RCC_OscConfig+0x498>
 8003646:	e018      	b.n	800367a <HAL_RCC_OscConfig+0x4ea>
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	69db      	ldr	r3, [r3, #28]
 800364c:	2b01      	cmp	r3, #1
 800364e:	d101      	bne.n	8003654 <HAL_RCC_OscConfig+0x4c4>
 8003650:	2301      	movs	r3, #1
 8003652:	e013      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 8003654:	4b0b      	ldr	r3, [pc, #44]	; (8003684 <HAL_RCC_OscConfig+0x4f4>)
 8003656:	685b      	ldr	r3, [r3, #4]
 8003658:	60fb      	str	r3, [r7, #12]
 800365a:	68fb      	ldr	r3, [r7, #12]
 800365c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	6a1b      	ldr	r3, [r3, #32]
 8003664:	429a      	cmp	r2, r3
 8003666:	d106      	bne.n	8003676 <HAL_RCC_OscConfig+0x4e6>
 8003668:	68fb      	ldr	r3, [r7, #12]
 800366a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003672:	429a      	cmp	r2, r3
 8003674:	d001      	beq.n	800367a <HAL_RCC_OscConfig+0x4ea>
 8003676:	2301      	movs	r3, #1
 8003678:	e000      	b.n	800367c <HAL_RCC_OscConfig+0x4ec>
 800367a:	2300      	movs	r3, #0
 800367c:	4618      	mov	r0, r3
 800367e:	3718      	adds	r7, #24
 8003680:	46bd      	mov	sp, r7
 8003682:	bd80      	pop	{r7, pc}
 8003684:	40021000 	.word	0x40021000
 8003688:	40007000 	.word	0x40007000
 800368c:	42420060 	.word	0x42420060

08003690 <HAL_RCC_ClockConfig>:
 8003690:	b580      	push	{r7, lr}
 8003692:	b084      	sub	sp, #16
 8003694:	af00      	add	r7, sp, #0
 8003696:	6078      	str	r0, [r7, #4]
 8003698:	6039      	str	r1, [r7, #0]
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	2b00      	cmp	r3, #0
 800369e:	d101      	bne.n	80036a4 <HAL_RCC_ClockConfig+0x14>
 80036a0:	2301      	movs	r3, #1
 80036a2:	e0d0      	b.n	8003846 <HAL_RCC_ClockConfig+0x1b6>
 80036a4:	4b6a      	ldr	r3, [pc, #424]	; (8003850 <HAL_RCC_ClockConfig+0x1c0>)
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	f003 0307 	and.w	r3, r3, #7
 80036ac:	683a      	ldr	r2, [r7, #0]
 80036ae:	429a      	cmp	r2, r3
 80036b0:	d910      	bls.n	80036d4 <HAL_RCC_ClockConfig+0x44>
 80036b2:	4b67      	ldr	r3, [pc, #412]	; (8003850 <HAL_RCC_ClockConfig+0x1c0>)
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	f023 0207 	bic.w	r2, r3, #7
 80036ba:	4965      	ldr	r1, [pc, #404]	; (8003850 <HAL_RCC_ClockConfig+0x1c0>)
 80036bc:	683b      	ldr	r3, [r7, #0]
 80036be:	4313      	orrs	r3, r2
 80036c0:	600b      	str	r3, [r1, #0]
 80036c2:	4b63      	ldr	r3, [pc, #396]	; (8003850 <HAL_RCC_ClockConfig+0x1c0>)
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	f003 0307 	and.w	r3, r3, #7
 80036ca:	683a      	ldr	r2, [r7, #0]
 80036cc:	429a      	cmp	r2, r3
 80036ce:	d001      	beq.n	80036d4 <HAL_RCC_ClockConfig+0x44>
 80036d0:	2301      	movs	r3, #1
 80036d2:	e0b8      	b.n	8003846 <HAL_RCC_ClockConfig+0x1b6>
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	f003 0302 	and.w	r3, r3, #2
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d020      	beq.n	8003722 <HAL_RCC_ClockConfig+0x92>
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	681b      	ldr	r3, [r3, #0]
 80036e4:	f003 0304 	and.w	r3, r3, #4
 80036e8:	2b00      	cmp	r3, #0
 80036ea:	d005      	beq.n	80036f8 <HAL_RCC_ClockConfig+0x68>
 80036ec:	4b59      	ldr	r3, [pc, #356]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 80036ee:	685b      	ldr	r3, [r3, #4]
 80036f0:	4a58      	ldr	r2, [pc, #352]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 80036f2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80036f6:	6053      	str	r3, [r2, #4]
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	f003 0308 	and.w	r3, r3, #8
 8003700:	2b00      	cmp	r3, #0
 8003702:	d005      	beq.n	8003710 <HAL_RCC_ClockConfig+0x80>
 8003704:	4b53      	ldr	r3, [pc, #332]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 8003706:	685b      	ldr	r3, [r3, #4]
 8003708:	4a52      	ldr	r2, [pc, #328]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 800370a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800370e:	6053      	str	r3, [r2, #4]
 8003710:	4b50      	ldr	r3, [pc, #320]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 8003712:	685b      	ldr	r3, [r3, #4]
 8003714:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	689b      	ldr	r3, [r3, #8]
 800371c:	494d      	ldr	r1, [pc, #308]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 800371e:	4313      	orrs	r3, r2
 8003720:	604b      	str	r3, [r1, #4]
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	f003 0301 	and.w	r3, r3, #1
 800372a:	2b00      	cmp	r3, #0
 800372c:	d040      	beq.n	80037b0 <HAL_RCC_ClockConfig+0x120>
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	685b      	ldr	r3, [r3, #4]
 8003732:	2b01      	cmp	r3, #1
 8003734:	d107      	bne.n	8003746 <HAL_RCC_ClockConfig+0xb6>
 8003736:	4b47      	ldr	r3, [pc, #284]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800373e:	2b00      	cmp	r3, #0
 8003740:	d115      	bne.n	800376e <HAL_RCC_ClockConfig+0xde>
 8003742:	2301      	movs	r3, #1
 8003744:	e07f      	b.n	8003846 <HAL_RCC_ClockConfig+0x1b6>
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	685b      	ldr	r3, [r3, #4]
 800374a:	2b02      	cmp	r3, #2
 800374c:	d107      	bne.n	800375e <HAL_RCC_ClockConfig+0xce>
 800374e:	4b41      	ldr	r3, [pc, #260]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003756:	2b00      	cmp	r3, #0
 8003758:	d109      	bne.n	800376e <HAL_RCC_ClockConfig+0xde>
 800375a:	2301      	movs	r3, #1
 800375c:	e073      	b.n	8003846 <HAL_RCC_ClockConfig+0x1b6>
 800375e:	4b3d      	ldr	r3, [pc, #244]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	f003 0302 	and.w	r3, r3, #2
 8003766:	2b00      	cmp	r3, #0
 8003768:	d101      	bne.n	800376e <HAL_RCC_ClockConfig+0xde>
 800376a:	2301      	movs	r3, #1
 800376c:	e06b      	b.n	8003846 <HAL_RCC_ClockConfig+0x1b6>
 800376e:	4b39      	ldr	r3, [pc, #228]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 8003770:	685b      	ldr	r3, [r3, #4]
 8003772:	f023 0203 	bic.w	r2, r3, #3
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	685b      	ldr	r3, [r3, #4]
 800377a:	4936      	ldr	r1, [pc, #216]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 800377c:	4313      	orrs	r3, r2
 800377e:	604b      	str	r3, [r1, #4]
 8003780:	f7ff f954 	bl	8002a2c <HAL_GetTick>
 8003784:	60f8      	str	r0, [r7, #12]
 8003786:	e00a      	b.n	800379e <HAL_RCC_ClockConfig+0x10e>
 8003788:	f7ff f950 	bl	8002a2c <HAL_GetTick>
 800378c:	4602      	mov	r2, r0
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	1ad3      	subs	r3, r2, r3
 8003792:	f241 3288 	movw	r2, #5000	; 0x1388
 8003796:	4293      	cmp	r3, r2
 8003798:	d901      	bls.n	800379e <HAL_RCC_ClockConfig+0x10e>
 800379a:	2303      	movs	r3, #3
 800379c:	e053      	b.n	8003846 <HAL_RCC_ClockConfig+0x1b6>
 800379e:	4b2d      	ldr	r3, [pc, #180]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 80037a0:	685b      	ldr	r3, [r3, #4]
 80037a2:	f003 020c 	and.w	r2, r3, #12
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	685b      	ldr	r3, [r3, #4]
 80037aa:	009b      	lsls	r3, r3, #2
 80037ac:	429a      	cmp	r2, r3
 80037ae:	d1eb      	bne.n	8003788 <HAL_RCC_ClockConfig+0xf8>
 80037b0:	4b27      	ldr	r3, [pc, #156]	; (8003850 <HAL_RCC_ClockConfig+0x1c0>)
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	f003 0307 	and.w	r3, r3, #7
 80037b8:	683a      	ldr	r2, [r7, #0]
 80037ba:	429a      	cmp	r2, r3
 80037bc:	d210      	bcs.n	80037e0 <HAL_RCC_ClockConfig+0x150>
 80037be:	4b24      	ldr	r3, [pc, #144]	; (8003850 <HAL_RCC_ClockConfig+0x1c0>)
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	f023 0207 	bic.w	r2, r3, #7
 80037c6:	4922      	ldr	r1, [pc, #136]	; (8003850 <HAL_RCC_ClockConfig+0x1c0>)
 80037c8:	683b      	ldr	r3, [r7, #0]
 80037ca:	4313      	orrs	r3, r2
 80037cc:	600b      	str	r3, [r1, #0]
 80037ce:	4b20      	ldr	r3, [pc, #128]	; (8003850 <HAL_RCC_ClockConfig+0x1c0>)
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	f003 0307 	and.w	r3, r3, #7
 80037d6:	683a      	ldr	r2, [r7, #0]
 80037d8:	429a      	cmp	r2, r3
 80037da:	d001      	beq.n	80037e0 <HAL_RCC_ClockConfig+0x150>
 80037dc:	2301      	movs	r3, #1
 80037de:	e032      	b.n	8003846 <HAL_RCC_ClockConfig+0x1b6>
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	f003 0304 	and.w	r3, r3, #4
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	d008      	beq.n	80037fe <HAL_RCC_ClockConfig+0x16e>
 80037ec:	4b19      	ldr	r3, [pc, #100]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 80037ee:	685b      	ldr	r3, [r3, #4]
 80037f0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	68db      	ldr	r3, [r3, #12]
 80037f8:	4916      	ldr	r1, [pc, #88]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 80037fa:	4313      	orrs	r3, r2
 80037fc:	604b      	str	r3, [r1, #4]
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	f003 0308 	and.w	r3, r3, #8
 8003806:	2b00      	cmp	r3, #0
 8003808:	d009      	beq.n	800381e <HAL_RCC_ClockConfig+0x18e>
 800380a:	4b12      	ldr	r3, [pc, #72]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 800380c:	685b      	ldr	r3, [r3, #4]
 800380e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	691b      	ldr	r3, [r3, #16]
 8003816:	00db      	lsls	r3, r3, #3
 8003818:	490e      	ldr	r1, [pc, #56]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 800381a:	4313      	orrs	r3, r2
 800381c:	604b      	str	r3, [r1, #4]
 800381e:	f000 f821 	bl	8003864 <HAL_RCC_GetSysClockFreq>
 8003822:	4602      	mov	r2, r0
 8003824:	4b0b      	ldr	r3, [pc, #44]	; (8003854 <HAL_RCC_ClockConfig+0x1c4>)
 8003826:	685b      	ldr	r3, [r3, #4]
 8003828:	091b      	lsrs	r3, r3, #4
 800382a:	f003 030f 	and.w	r3, r3, #15
 800382e:	490a      	ldr	r1, [pc, #40]	; (8003858 <HAL_RCC_ClockConfig+0x1c8>)
 8003830:	5ccb      	ldrb	r3, [r1, r3]
 8003832:	fa22 f303 	lsr.w	r3, r2, r3
 8003836:	4a09      	ldr	r2, [pc, #36]	; (800385c <HAL_RCC_ClockConfig+0x1cc>)
 8003838:	6013      	str	r3, [r2, #0]
 800383a:	4b09      	ldr	r3, [pc, #36]	; (8003860 <HAL_RCC_ClockConfig+0x1d0>)
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	4618      	mov	r0, r3
 8003840:	f7ff f8b2 	bl	80029a8 <HAL_InitTick>
 8003844:	2300      	movs	r3, #0
 8003846:	4618      	mov	r0, r3
 8003848:	3710      	adds	r7, #16
 800384a:	46bd      	mov	sp, r7
 800384c:	bd80      	pop	{r7, pc}
 800384e:	bf00      	nop
 8003850:	40022000 	.word	0x40022000
 8003854:	40021000 	.word	0x40021000
 8003858:	0800603c 	.word	0x0800603c
 800385c:	20000060 	.word	0x20000060
 8003860:	20000064 	.word	0x20000064

08003864 <HAL_RCC_GetSysClockFreq>:
 8003864:	b480      	push	{r7}
 8003866:	b087      	sub	sp, #28
 8003868:	af00      	add	r7, sp, #0
 800386a:	2300      	movs	r3, #0
 800386c:	60fb      	str	r3, [r7, #12]
 800386e:	2300      	movs	r3, #0
 8003870:	60bb      	str	r3, [r7, #8]
 8003872:	2300      	movs	r3, #0
 8003874:	617b      	str	r3, [r7, #20]
 8003876:	2300      	movs	r3, #0
 8003878:	607b      	str	r3, [r7, #4]
 800387a:	2300      	movs	r3, #0
 800387c:	613b      	str	r3, [r7, #16]
 800387e:	4b1e      	ldr	r3, [pc, #120]	; (80038f8 <HAL_RCC_GetSysClockFreq+0x94>)
 8003880:	685b      	ldr	r3, [r3, #4]
 8003882:	60fb      	str	r3, [r7, #12]
 8003884:	68fb      	ldr	r3, [r7, #12]
 8003886:	f003 030c 	and.w	r3, r3, #12
 800388a:	2b04      	cmp	r3, #4
 800388c:	d002      	beq.n	8003894 <HAL_RCC_GetSysClockFreq+0x30>
 800388e:	2b08      	cmp	r3, #8
 8003890:	d003      	beq.n	800389a <HAL_RCC_GetSysClockFreq+0x36>
 8003892:	e027      	b.n	80038e4 <HAL_RCC_GetSysClockFreq+0x80>
 8003894:	4b19      	ldr	r3, [pc, #100]	; (80038fc <HAL_RCC_GetSysClockFreq+0x98>)
 8003896:	613b      	str	r3, [r7, #16]
 8003898:	e027      	b.n	80038ea <HAL_RCC_GetSysClockFreq+0x86>
 800389a:	68fb      	ldr	r3, [r7, #12]
 800389c:	0c9b      	lsrs	r3, r3, #18
 800389e:	f003 030f 	and.w	r3, r3, #15
 80038a2:	4a17      	ldr	r2, [pc, #92]	; (8003900 <HAL_RCC_GetSysClockFreq+0x9c>)
 80038a4:	5cd3      	ldrb	r3, [r2, r3]
 80038a6:	607b      	str	r3, [r7, #4]
 80038a8:	68fb      	ldr	r3, [r7, #12]
 80038aa:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d010      	beq.n	80038d4 <HAL_RCC_GetSysClockFreq+0x70>
 80038b2:	4b11      	ldr	r3, [pc, #68]	; (80038f8 <HAL_RCC_GetSysClockFreq+0x94>)
 80038b4:	685b      	ldr	r3, [r3, #4]
 80038b6:	0c5b      	lsrs	r3, r3, #17
 80038b8:	f003 0301 	and.w	r3, r3, #1
 80038bc:	4a11      	ldr	r2, [pc, #68]	; (8003904 <HAL_RCC_GetSysClockFreq+0xa0>)
 80038be:	5cd3      	ldrb	r3, [r2, r3]
 80038c0:	60bb      	str	r3, [r7, #8]
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	4a0d      	ldr	r2, [pc, #52]	; (80038fc <HAL_RCC_GetSysClockFreq+0x98>)
 80038c6:	fb02 f203 	mul.w	r2, r2, r3
 80038ca:	68bb      	ldr	r3, [r7, #8]
 80038cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80038d0:	617b      	str	r3, [r7, #20]
 80038d2:	e004      	b.n	80038de <HAL_RCC_GetSysClockFreq+0x7a>
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	4a0c      	ldr	r2, [pc, #48]	; (8003908 <HAL_RCC_GetSysClockFreq+0xa4>)
 80038d8:	fb02 f303 	mul.w	r3, r2, r3
 80038dc:	617b      	str	r3, [r7, #20]
 80038de:	697b      	ldr	r3, [r7, #20]
 80038e0:	613b      	str	r3, [r7, #16]
 80038e2:	e002      	b.n	80038ea <HAL_RCC_GetSysClockFreq+0x86>
 80038e4:	4b05      	ldr	r3, [pc, #20]	; (80038fc <HAL_RCC_GetSysClockFreq+0x98>)
 80038e6:	613b      	str	r3, [r7, #16]
 80038e8:	bf00      	nop
 80038ea:	693b      	ldr	r3, [r7, #16]
 80038ec:	4618      	mov	r0, r3
 80038ee:	371c      	adds	r7, #28
 80038f0:	46bd      	mov	sp, r7
 80038f2:	bc80      	pop	{r7}
 80038f4:	4770      	bx	lr
 80038f6:	bf00      	nop
 80038f8:	40021000 	.word	0x40021000
 80038fc:	007a1200 	.word	0x007a1200
 8003900:	08006054 	.word	0x08006054
 8003904:	08006064 	.word	0x08006064
 8003908:	003d0900 	.word	0x003d0900

0800390c <HAL_RCC_GetHCLKFreq>:
 800390c:	b480      	push	{r7}
 800390e:	af00      	add	r7, sp, #0
 8003910:	4b02      	ldr	r3, [pc, #8]	; (800391c <HAL_RCC_GetHCLKFreq+0x10>)
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	4618      	mov	r0, r3
 8003916:	46bd      	mov	sp, r7
 8003918:	bc80      	pop	{r7}
 800391a:	4770      	bx	lr
 800391c:	20000060 	.word	0x20000060

08003920 <HAL_RCC_GetPCLK1Freq>:
 8003920:	b580      	push	{r7, lr}
 8003922:	af00      	add	r7, sp, #0
 8003924:	f7ff fff2 	bl	800390c <HAL_RCC_GetHCLKFreq>
 8003928:	4602      	mov	r2, r0
 800392a:	4b05      	ldr	r3, [pc, #20]	; (8003940 <HAL_RCC_GetPCLK1Freq+0x20>)
 800392c:	685b      	ldr	r3, [r3, #4]
 800392e:	0a1b      	lsrs	r3, r3, #8
 8003930:	f003 0307 	and.w	r3, r3, #7
 8003934:	4903      	ldr	r1, [pc, #12]	; (8003944 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003936:	5ccb      	ldrb	r3, [r1, r3]
 8003938:	fa22 f303 	lsr.w	r3, r2, r3
 800393c:	4618      	mov	r0, r3
 800393e:	bd80      	pop	{r7, pc}
 8003940:	40021000 	.word	0x40021000
 8003944:	0800604c 	.word	0x0800604c

08003948 <HAL_RCC_GetPCLK2Freq>:
 8003948:	b580      	push	{r7, lr}
 800394a:	af00      	add	r7, sp, #0
 800394c:	f7ff ffde 	bl	800390c <HAL_RCC_GetHCLKFreq>
 8003950:	4602      	mov	r2, r0
 8003952:	4b05      	ldr	r3, [pc, #20]	; (8003968 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003954:	685b      	ldr	r3, [r3, #4]
 8003956:	0adb      	lsrs	r3, r3, #11
 8003958:	f003 0307 	and.w	r3, r3, #7
 800395c:	4903      	ldr	r1, [pc, #12]	; (800396c <HAL_RCC_GetPCLK2Freq+0x24>)
 800395e:	5ccb      	ldrb	r3, [r1, r3]
 8003960:	fa22 f303 	lsr.w	r3, r2, r3
 8003964:	4618      	mov	r0, r3
 8003966:	bd80      	pop	{r7, pc}
 8003968:	40021000 	.word	0x40021000
 800396c:	0800604c 	.word	0x0800604c

08003970 <RCC_Delay>:
 8003970:	b480      	push	{r7}
 8003972:	b085      	sub	sp, #20
 8003974:	af00      	add	r7, sp, #0
 8003976:	6078      	str	r0, [r7, #4]
 8003978:	4b0a      	ldr	r3, [pc, #40]	; (80039a4 <RCC_Delay+0x34>)
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	4a0a      	ldr	r2, [pc, #40]	; (80039a8 <RCC_Delay+0x38>)
 800397e:	fba2 2303 	umull	r2, r3, r2, r3
 8003982:	0a5b      	lsrs	r3, r3, #9
 8003984:	687a      	ldr	r2, [r7, #4]
 8003986:	fb02 f303 	mul.w	r3, r2, r3
 800398a:	60fb      	str	r3, [r7, #12]
 800398c:	bf00      	nop
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	1e5a      	subs	r2, r3, #1
 8003992:	60fa      	str	r2, [r7, #12]
 8003994:	2b00      	cmp	r3, #0
 8003996:	d1f9      	bne.n	800398c <RCC_Delay+0x1c>
 8003998:	bf00      	nop
 800399a:	bf00      	nop
 800399c:	3714      	adds	r7, #20
 800399e:	46bd      	mov	sp, r7
 80039a0:	bc80      	pop	{r7}
 80039a2:	4770      	bx	lr
 80039a4:	20000060 	.word	0x20000060
 80039a8:	10624dd3 	.word	0x10624dd3

080039ac <HAL_TIM_Base_Init>:
 80039ac:	b580      	push	{r7, lr}
 80039ae:	b082      	sub	sp, #8
 80039b0:	af00      	add	r7, sp, #0
 80039b2:	6078      	str	r0, [r7, #4]
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d101      	bne.n	80039be <HAL_TIM_Base_Init+0x12>
 80039ba:	2301      	movs	r3, #1
 80039bc:	e041      	b.n	8003a42 <HAL_TIM_Base_Init+0x96>
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80039c4:	b2db      	uxtb	r3, r3
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d106      	bne.n	80039d8 <HAL_TIM_Base_Init+0x2c>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	2200      	movs	r2, #0
 80039ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039d2:	6878      	ldr	r0, [r7, #4]
 80039d4:	f7fe fe66 	bl	80026a4 <HAL_TIM_Base_MspInit>
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	2202      	movs	r2, #2
 80039dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	681a      	ldr	r2, [r3, #0]
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	3304      	adds	r3, #4
 80039e8:	4619      	mov	r1, r3
 80039ea:	4610      	mov	r0, r2
 80039ec:	f000 fc30 	bl	8004250 <TIM_Base_SetConfig>
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	2201      	movs	r2, #1
 80039f4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	2201      	movs	r2, #1
 80039fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	2201      	movs	r2, #1
 8003a04:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	2201      	movs	r2, #1
 8003a0c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	2201      	movs	r2, #1
 8003a14:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	2201      	movs	r2, #1
 8003a1c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	2201      	movs	r2, #1
 8003a24:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	2201      	movs	r2, #1
 8003a2c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	2201      	movs	r2, #1
 8003a34:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	2201      	movs	r2, #1
 8003a3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a40:	2300      	movs	r3, #0
 8003a42:	4618      	mov	r0, r3
 8003a44:	3708      	adds	r7, #8
 8003a46:	46bd      	mov	sp, r7
 8003a48:	bd80      	pop	{r7, pc}
	...

08003a4c <HAL_TIM_Base_Start_IT>:
 8003a4c:	b480      	push	{r7}
 8003a4e:	b085      	sub	sp, #20
 8003a50:	af00      	add	r7, sp, #0
 8003a52:	6078      	str	r0, [r7, #4]
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003a5a:	b2db      	uxtb	r3, r3
 8003a5c:	2b01      	cmp	r3, #1
 8003a5e:	d001      	beq.n	8003a64 <HAL_TIM_Base_Start_IT+0x18>
 8003a60:	2301      	movs	r3, #1
 8003a62:	e03a      	b.n	8003ada <HAL_TIM_Base_Start_IT+0x8e>
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	2202      	movs	r2, #2
 8003a68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	68da      	ldr	r2, [r3, #12]
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	f042 0201 	orr.w	r2, r2, #1
 8003a7a:	60da      	str	r2, [r3, #12]
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	681b      	ldr	r3, [r3, #0]
 8003a80:	4a18      	ldr	r2, [pc, #96]	; (8003ae4 <HAL_TIM_Base_Start_IT+0x98>)
 8003a82:	4293      	cmp	r3, r2
 8003a84:	d00e      	beq.n	8003aa4 <HAL_TIM_Base_Start_IT+0x58>
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003a8e:	d009      	beq.n	8003aa4 <HAL_TIM_Base_Start_IT+0x58>
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	681b      	ldr	r3, [r3, #0]
 8003a94:	4a14      	ldr	r2, [pc, #80]	; (8003ae8 <HAL_TIM_Base_Start_IT+0x9c>)
 8003a96:	4293      	cmp	r3, r2
 8003a98:	d004      	beq.n	8003aa4 <HAL_TIM_Base_Start_IT+0x58>
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	4a13      	ldr	r2, [pc, #76]	; (8003aec <HAL_TIM_Base_Start_IT+0xa0>)
 8003aa0:	4293      	cmp	r3, r2
 8003aa2:	d111      	bne.n	8003ac8 <HAL_TIM_Base_Start_IT+0x7c>
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	689b      	ldr	r3, [r3, #8]
 8003aaa:	f003 0307 	and.w	r3, r3, #7
 8003aae:	60fb      	str	r3, [r7, #12]
 8003ab0:	68fb      	ldr	r3, [r7, #12]
 8003ab2:	2b06      	cmp	r3, #6
 8003ab4:	d010      	beq.n	8003ad8 <HAL_TIM_Base_Start_IT+0x8c>
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	681b      	ldr	r3, [r3, #0]
 8003aba:	681a      	ldr	r2, [r3, #0]
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	f042 0201 	orr.w	r2, r2, #1
 8003ac4:	601a      	str	r2, [r3, #0]
 8003ac6:	e007      	b.n	8003ad8 <HAL_TIM_Base_Start_IT+0x8c>
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	681a      	ldr	r2, [r3, #0]
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	f042 0201 	orr.w	r2, r2, #1
 8003ad6:	601a      	str	r2, [r3, #0]
 8003ad8:	2300      	movs	r3, #0
 8003ada:	4618      	mov	r0, r3
 8003adc:	3714      	adds	r7, #20
 8003ade:	46bd      	mov	sp, r7
 8003ae0:	bc80      	pop	{r7}
 8003ae2:	4770      	bx	lr
 8003ae4:	40012c00 	.word	0x40012c00
 8003ae8:	40000400 	.word	0x40000400
 8003aec:	40000800 	.word	0x40000800

08003af0 <HAL_TIM_PWM_Init>:
 8003af0:	b580      	push	{r7, lr}
 8003af2:	b082      	sub	sp, #8
 8003af4:	af00      	add	r7, sp, #0
 8003af6:	6078      	str	r0, [r7, #4]
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	2b00      	cmp	r3, #0
 8003afc:	d101      	bne.n	8003b02 <HAL_TIM_PWM_Init+0x12>
 8003afe:	2301      	movs	r3, #1
 8003b00:	e041      	b.n	8003b86 <HAL_TIM_PWM_Init+0x96>
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003b08:	b2db      	uxtb	r3, r3
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	d106      	bne.n	8003b1c <HAL_TIM_PWM_Init+0x2c>
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	2200      	movs	r2, #0
 8003b12:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b16:	6878      	ldr	r0, [r7, #4]
 8003b18:	f000 f839 	bl	8003b8e <HAL_TIM_PWM_MspInit>
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	2202      	movs	r2, #2
 8003b20:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	681a      	ldr	r2, [r3, #0]
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	3304      	adds	r3, #4
 8003b2c:	4619      	mov	r1, r3
 8003b2e:	4610      	mov	r0, r2
 8003b30:	f000 fb8e 	bl	8004250 <TIM_Base_SetConfig>
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	2201      	movs	r2, #1
 8003b38:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	2201      	movs	r2, #1
 8003b40:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	2201      	movs	r2, #1
 8003b48:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	2201      	movs	r2, #1
 8003b50:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	2201      	movs	r2, #1
 8003b58:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	2201      	movs	r2, #1
 8003b60:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	2201      	movs	r2, #1
 8003b68:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	2201      	movs	r2, #1
 8003b70:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	2201      	movs	r2, #1
 8003b78:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	2201      	movs	r2, #1
 8003b80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b84:	2300      	movs	r3, #0
 8003b86:	4618      	mov	r0, r3
 8003b88:	3708      	adds	r7, #8
 8003b8a:	46bd      	mov	sp, r7
 8003b8c:	bd80      	pop	{r7, pc}

08003b8e <HAL_TIM_PWM_MspInit>:
 8003b8e:	b480      	push	{r7}
 8003b90:	b083      	sub	sp, #12
 8003b92:	af00      	add	r7, sp, #0
 8003b94:	6078      	str	r0, [r7, #4]
 8003b96:	bf00      	nop
 8003b98:	370c      	adds	r7, #12
 8003b9a:	46bd      	mov	sp, r7
 8003b9c:	bc80      	pop	{r7}
 8003b9e:	4770      	bx	lr

08003ba0 <HAL_TIM_PWM_Start>:
 8003ba0:	b580      	push	{r7, lr}
 8003ba2:	b084      	sub	sp, #16
 8003ba4:	af00      	add	r7, sp, #0
 8003ba6:	6078      	str	r0, [r7, #4]
 8003ba8:	6039      	str	r1, [r7, #0]
 8003baa:	683b      	ldr	r3, [r7, #0]
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d109      	bne.n	8003bc4 <HAL_TIM_PWM_Start+0x24>
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003bb6:	b2db      	uxtb	r3, r3
 8003bb8:	2b01      	cmp	r3, #1
 8003bba:	bf14      	ite	ne
 8003bbc:	2301      	movne	r3, #1
 8003bbe:	2300      	moveq	r3, #0
 8003bc0:	b2db      	uxtb	r3, r3
 8003bc2:	e022      	b.n	8003c0a <HAL_TIM_PWM_Start+0x6a>
 8003bc4:	683b      	ldr	r3, [r7, #0]
 8003bc6:	2b04      	cmp	r3, #4
 8003bc8:	d109      	bne.n	8003bde <HAL_TIM_PWM_Start+0x3e>
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8003bd0:	b2db      	uxtb	r3, r3
 8003bd2:	2b01      	cmp	r3, #1
 8003bd4:	bf14      	ite	ne
 8003bd6:	2301      	movne	r3, #1
 8003bd8:	2300      	moveq	r3, #0
 8003bda:	b2db      	uxtb	r3, r3
 8003bdc:	e015      	b.n	8003c0a <HAL_TIM_PWM_Start+0x6a>
 8003bde:	683b      	ldr	r3, [r7, #0]
 8003be0:	2b08      	cmp	r3, #8
 8003be2:	d109      	bne.n	8003bf8 <HAL_TIM_PWM_Start+0x58>
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003bea:	b2db      	uxtb	r3, r3
 8003bec:	2b01      	cmp	r3, #1
 8003bee:	bf14      	ite	ne
 8003bf0:	2301      	movne	r3, #1
 8003bf2:	2300      	moveq	r3, #0
 8003bf4:	b2db      	uxtb	r3, r3
 8003bf6:	e008      	b.n	8003c0a <HAL_TIM_PWM_Start+0x6a>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003bfe:	b2db      	uxtb	r3, r3
 8003c00:	2b01      	cmp	r3, #1
 8003c02:	bf14      	ite	ne
 8003c04:	2301      	movne	r3, #1
 8003c06:	2300      	moveq	r3, #0
 8003c08:	b2db      	uxtb	r3, r3
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d001      	beq.n	8003c12 <HAL_TIM_PWM_Start+0x72>
 8003c0e:	2301      	movs	r3, #1
 8003c10:	e05e      	b.n	8003cd0 <HAL_TIM_PWM_Start+0x130>
 8003c12:	683b      	ldr	r3, [r7, #0]
 8003c14:	2b00      	cmp	r3, #0
 8003c16:	d104      	bne.n	8003c22 <HAL_TIM_PWM_Start+0x82>
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	2202      	movs	r2, #2
 8003c1c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003c20:	e013      	b.n	8003c4a <HAL_TIM_PWM_Start+0xaa>
 8003c22:	683b      	ldr	r3, [r7, #0]
 8003c24:	2b04      	cmp	r3, #4
 8003c26:	d104      	bne.n	8003c32 <HAL_TIM_PWM_Start+0x92>
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	2202      	movs	r2, #2
 8003c2c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003c30:	e00b      	b.n	8003c4a <HAL_TIM_PWM_Start+0xaa>
 8003c32:	683b      	ldr	r3, [r7, #0]
 8003c34:	2b08      	cmp	r3, #8
 8003c36:	d104      	bne.n	8003c42 <HAL_TIM_PWM_Start+0xa2>
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	2202      	movs	r2, #2
 8003c3c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003c40:	e003      	b.n	8003c4a <HAL_TIM_PWM_Start+0xaa>
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	2202      	movs	r2, #2
 8003c46:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	2201      	movs	r2, #1
 8003c50:	6839      	ldr	r1, [r7, #0]
 8003c52:	4618      	mov	r0, r3
 8003c54:	f000 fd7c 	bl	8004750 <TIM_CCxChannelCmd>
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	681b      	ldr	r3, [r3, #0]
 8003c5c:	4a1e      	ldr	r2, [pc, #120]	; (8003cd8 <HAL_TIM_PWM_Start+0x138>)
 8003c5e:	4293      	cmp	r3, r2
 8003c60:	d107      	bne.n	8003c72 <HAL_TIM_PWM_Start+0xd2>
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003c70:	645a      	str	r2, [r3, #68]	; 0x44
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	681b      	ldr	r3, [r3, #0]
 8003c76:	4a18      	ldr	r2, [pc, #96]	; (8003cd8 <HAL_TIM_PWM_Start+0x138>)
 8003c78:	4293      	cmp	r3, r2
 8003c7a:	d00e      	beq.n	8003c9a <HAL_TIM_PWM_Start+0xfa>
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003c84:	d009      	beq.n	8003c9a <HAL_TIM_PWM_Start+0xfa>
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	4a14      	ldr	r2, [pc, #80]	; (8003cdc <HAL_TIM_PWM_Start+0x13c>)
 8003c8c:	4293      	cmp	r3, r2
 8003c8e:	d004      	beq.n	8003c9a <HAL_TIM_PWM_Start+0xfa>
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	4a12      	ldr	r2, [pc, #72]	; (8003ce0 <HAL_TIM_PWM_Start+0x140>)
 8003c96:	4293      	cmp	r3, r2
 8003c98:	d111      	bne.n	8003cbe <HAL_TIM_PWM_Start+0x11e>
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	689b      	ldr	r3, [r3, #8]
 8003ca0:	f003 0307 	and.w	r3, r3, #7
 8003ca4:	60fb      	str	r3, [r7, #12]
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	2b06      	cmp	r3, #6
 8003caa:	d010      	beq.n	8003cce <HAL_TIM_PWM_Start+0x12e>
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	681a      	ldr	r2, [r3, #0]
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	f042 0201 	orr.w	r2, r2, #1
 8003cba:	601a      	str	r2, [r3, #0]
 8003cbc:	e007      	b.n	8003cce <HAL_TIM_PWM_Start+0x12e>
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	681a      	ldr	r2, [r3, #0]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	f042 0201 	orr.w	r2, r2, #1
 8003ccc:	601a      	str	r2, [r3, #0]
 8003cce:	2300      	movs	r3, #0
 8003cd0:	4618      	mov	r0, r3
 8003cd2:	3710      	adds	r7, #16
 8003cd4:	46bd      	mov	sp, r7
 8003cd6:	bd80      	pop	{r7, pc}
 8003cd8:	40012c00 	.word	0x40012c00
 8003cdc:	40000400 	.word	0x40000400
 8003ce0:	40000800 	.word	0x40000800

08003ce4 <HAL_TIM_IRQHandler>:
 8003ce4:	b580      	push	{r7, lr}
 8003ce6:	b082      	sub	sp, #8
 8003ce8:	af00      	add	r7, sp, #0
 8003cea:	6078      	str	r0, [r7, #4]
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	691b      	ldr	r3, [r3, #16]
 8003cf2:	f003 0302 	and.w	r3, r3, #2
 8003cf6:	2b02      	cmp	r3, #2
 8003cf8:	d122      	bne.n	8003d40 <HAL_TIM_IRQHandler+0x5c>
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	68db      	ldr	r3, [r3, #12]
 8003d00:	f003 0302 	and.w	r3, r3, #2
 8003d04:	2b02      	cmp	r3, #2
 8003d06:	d11b      	bne.n	8003d40 <HAL_TIM_IRQHandler+0x5c>
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	681b      	ldr	r3, [r3, #0]
 8003d0c:	f06f 0202 	mvn.w	r2, #2
 8003d10:	611a      	str	r2, [r3, #16]
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	2201      	movs	r2, #1
 8003d16:	771a      	strb	r2, [r3, #28]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	699b      	ldr	r3, [r3, #24]
 8003d1e:	f003 0303 	and.w	r3, r3, #3
 8003d22:	2b00      	cmp	r3, #0
 8003d24:	d003      	beq.n	8003d2e <HAL_TIM_IRQHandler+0x4a>
 8003d26:	6878      	ldr	r0, [r7, #4]
 8003d28:	f000 fa76 	bl	8004218 <HAL_TIM_IC_CaptureCallback>
 8003d2c:	e005      	b.n	8003d3a <HAL_TIM_IRQHandler+0x56>
 8003d2e:	6878      	ldr	r0, [r7, #4]
 8003d30:	f000 fa69 	bl	8004206 <HAL_TIM_OC_DelayElapsedCallback>
 8003d34:	6878      	ldr	r0, [r7, #4]
 8003d36:	f000 fa78 	bl	800422a <HAL_TIM_PWM_PulseFinishedCallback>
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	2200      	movs	r2, #0
 8003d3e:	771a      	strb	r2, [r3, #28]
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	691b      	ldr	r3, [r3, #16]
 8003d46:	f003 0304 	and.w	r3, r3, #4
 8003d4a:	2b04      	cmp	r3, #4
 8003d4c:	d122      	bne.n	8003d94 <HAL_TIM_IRQHandler+0xb0>
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	68db      	ldr	r3, [r3, #12]
 8003d54:	f003 0304 	and.w	r3, r3, #4
 8003d58:	2b04      	cmp	r3, #4
 8003d5a:	d11b      	bne.n	8003d94 <HAL_TIM_IRQHandler+0xb0>
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	f06f 0204 	mvn.w	r2, #4
 8003d64:	611a      	str	r2, [r3, #16]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	2202      	movs	r2, #2
 8003d6a:	771a      	strb	r2, [r3, #28]
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	699b      	ldr	r3, [r3, #24]
 8003d72:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003d76:	2b00      	cmp	r3, #0
 8003d78:	d003      	beq.n	8003d82 <HAL_TIM_IRQHandler+0x9e>
 8003d7a:	6878      	ldr	r0, [r7, #4]
 8003d7c:	f000 fa4c 	bl	8004218 <HAL_TIM_IC_CaptureCallback>
 8003d80:	e005      	b.n	8003d8e <HAL_TIM_IRQHandler+0xaa>
 8003d82:	6878      	ldr	r0, [r7, #4]
 8003d84:	f000 fa3f 	bl	8004206 <HAL_TIM_OC_DelayElapsedCallback>
 8003d88:	6878      	ldr	r0, [r7, #4]
 8003d8a:	f000 fa4e 	bl	800422a <HAL_TIM_PWM_PulseFinishedCallback>
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	2200      	movs	r2, #0
 8003d92:	771a      	strb	r2, [r3, #28]
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	691b      	ldr	r3, [r3, #16]
 8003d9a:	f003 0308 	and.w	r3, r3, #8
 8003d9e:	2b08      	cmp	r3, #8
 8003da0:	d122      	bne.n	8003de8 <HAL_TIM_IRQHandler+0x104>
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	68db      	ldr	r3, [r3, #12]
 8003da8:	f003 0308 	and.w	r3, r3, #8
 8003dac:	2b08      	cmp	r3, #8
 8003dae:	d11b      	bne.n	8003de8 <HAL_TIM_IRQHandler+0x104>
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	681b      	ldr	r3, [r3, #0]
 8003db4:	f06f 0208 	mvn.w	r2, #8
 8003db8:	611a      	str	r2, [r3, #16]
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	2204      	movs	r2, #4
 8003dbe:	771a      	strb	r2, [r3, #28]
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	69db      	ldr	r3, [r3, #28]
 8003dc6:	f003 0303 	and.w	r3, r3, #3
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d003      	beq.n	8003dd6 <HAL_TIM_IRQHandler+0xf2>
 8003dce:	6878      	ldr	r0, [r7, #4]
 8003dd0:	f000 fa22 	bl	8004218 <HAL_TIM_IC_CaptureCallback>
 8003dd4:	e005      	b.n	8003de2 <HAL_TIM_IRQHandler+0xfe>
 8003dd6:	6878      	ldr	r0, [r7, #4]
 8003dd8:	f000 fa15 	bl	8004206 <HAL_TIM_OC_DelayElapsedCallback>
 8003ddc:	6878      	ldr	r0, [r7, #4]
 8003dde:	f000 fa24 	bl	800422a <HAL_TIM_PWM_PulseFinishedCallback>
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	2200      	movs	r2, #0
 8003de6:	771a      	strb	r2, [r3, #28]
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	691b      	ldr	r3, [r3, #16]
 8003dee:	f003 0310 	and.w	r3, r3, #16
 8003df2:	2b10      	cmp	r3, #16
 8003df4:	d122      	bne.n	8003e3c <HAL_TIM_IRQHandler+0x158>
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	68db      	ldr	r3, [r3, #12]
 8003dfc:	f003 0310 	and.w	r3, r3, #16
 8003e00:	2b10      	cmp	r3, #16
 8003e02:	d11b      	bne.n	8003e3c <HAL_TIM_IRQHandler+0x158>
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	f06f 0210 	mvn.w	r2, #16
 8003e0c:	611a      	str	r2, [r3, #16]
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	2208      	movs	r2, #8
 8003e12:	771a      	strb	r2, [r3, #28]
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	69db      	ldr	r3, [r3, #28]
 8003e1a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	d003      	beq.n	8003e2a <HAL_TIM_IRQHandler+0x146>
 8003e22:	6878      	ldr	r0, [r7, #4]
 8003e24:	f000 f9f8 	bl	8004218 <HAL_TIM_IC_CaptureCallback>
 8003e28:	e005      	b.n	8003e36 <HAL_TIM_IRQHandler+0x152>
 8003e2a:	6878      	ldr	r0, [r7, #4]
 8003e2c:	f000 f9eb 	bl	8004206 <HAL_TIM_OC_DelayElapsedCallback>
 8003e30:	6878      	ldr	r0, [r7, #4]
 8003e32:	f000 f9fa 	bl	800422a <HAL_TIM_PWM_PulseFinishedCallback>
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	2200      	movs	r2, #0
 8003e3a:	771a      	strb	r2, [r3, #28]
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	691b      	ldr	r3, [r3, #16]
 8003e42:	f003 0301 	and.w	r3, r3, #1
 8003e46:	2b01      	cmp	r3, #1
 8003e48:	d10e      	bne.n	8003e68 <HAL_TIM_IRQHandler+0x184>
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	68db      	ldr	r3, [r3, #12]
 8003e50:	f003 0301 	and.w	r3, r3, #1
 8003e54:	2b01      	cmp	r3, #1
 8003e56:	d107      	bne.n	8003e68 <HAL_TIM_IRQHandler+0x184>
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	f06f 0201 	mvn.w	r2, #1
 8003e60:	611a      	str	r2, [r3, #16]
 8003e62:	6878      	ldr	r0, [r7, #4]
 8003e64:	f7fe f8aa 	bl	8001fbc <HAL_TIM_PeriodElapsedCallback>
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	691b      	ldr	r3, [r3, #16]
 8003e6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003e72:	2b80      	cmp	r3, #128	; 0x80
 8003e74:	d10e      	bne.n	8003e94 <HAL_TIM_IRQHandler+0x1b0>
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	68db      	ldr	r3, [r3, #12]
 8003e7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003e80:	2b80      	cmp	r3, #128	; 0x80
 8003e82:	d107      	bne.n	8003e94 <HAL_TIM_IRQHandler+0x1b0>
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8003e8c:	611a      	str	r2, [r3, #16]
 8003e8e:	6878      	ldr	r0, [r7, #4]
 8003e90:	f000 fce9 	bl	8004866 <HAL_TIMEx_BreakCallback>
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	691b      	ldr	r3, [r3, #16]
 8003e9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003e9e:	2b40      	cmp	r3, #64	; 0x40
 8003ea0:	d10e      	bne.n	8003ec0 <HAL_TIM_IRQHandler+0x1dc>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	68db      	ldr	r3, [r3, #12]
 8003ea8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003eac:	2b40      	cmp	r3, #64	; 0x40
 8003eae:	d107      	bne.n	8003ec0 <HAL_TIM_IRQHandler+0x1dc>
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003eb8:	611a      	str	r2, [r3, #16]
 8003eba:	6878      	ldr	r0, [r7, #4]
 8003ebc:	f000 f9be 	bl	800423c <HAL_TIM_TriggerCallback>
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	691b      	ldr	r3, [r3, #16]
 8003ec6:	f003 0320 	and.w	r3, r3, #32
 8003eca:	2b20      	cmp	r3, #32
 8003ecc:	d10e      	bne.n	8003eec <HAL_TIM_IRQHandler+0x208>
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	68db      	ldr	r3, [r3, #12]
 8003ed4:	f003 0320 	and.w	r3, r3, #32
 8003ed8:	2b20      	cmp	r3, #32
 8003eda:	d107      	bne.n	8003eec <HAL_TIM_IRQHandler+0x208>
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	f06f 0220 	mvn.w	r2, #32
 8003ee4:	611a      	str	r2, [r3, #16]
 8003ee6:	6878      	ldr	r0, [r7, #4]
 8003ee8:	f000 fcb4 	bl	8004854 <HAL_TIMEx_CommutCallback>
 8003eec:	bf00      	nop
 8003eee:	3708      	adds	r7, #8
 8003ef0:	46bd      	mov	sp, r7
 8003ef2:	bd80      	pop	{r7, pc}

08003ef4 <HAL_TIM_PWM_ConfigChannel>:
 8003ef4:	b580      	push	{r7, lr}
 8003ef6:	b086      	sub	sp, #24
 8003ef8:	af00      	add	r7, sp, #0
 8003efa:	60f8      	str	r0, [r7, #12]
 8003efc:	60b9      	str	r1, [r7, #8]
 8003efe:	607a      	str	r2, [r7, #4]
 8003f00:	2300      	movs	r3, #0
 8003f02:	75fb      	strb	r3, [r7, #23]
 8003f04:	68fb      	ldr	r3, [r7, #12]
 8003f06:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003f0a:	2b01      	cmp	r3, #1
 8003f0c:	d101      	bne.n	8003f12 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8003f0e:	2302      	movs	r3, #2
 8003f10:	e0ae      	b.n	8004070 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	2201      	movs	r2, #1
 8003f16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	2b0c      	cmp	r3, #12
 8003f1e:	f200 809f 	bhi.w	8004060 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003f22:	a201      	add	r2, pc, #4	; (adr r2, 8003f28 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003f24:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f28:	08003f5d 	.word	0x08003f5d
 8003f2c:	08004061 	.word	0x08004061
 8003f30:	08004061 	.word	0x08004061
 8003f34:	08004061 	.word	0x08004061
 8003f38:	08003f9d 	.word	0x08003f9d
 8003f3c:	08004061 	.word	0x08004061
 8003f40:	08004061 	.word	0x08004061
 8003f44:	08004061 	.word	0x08004061
 8003f48:	08003fdf 	.word	0x08003fdf
 8003f4c:	08004061 	.word	0x08004061
 8003f50:	08004061 	.word	0x08004061
 8003f54:	08004061 	.word	0x08004061
 8003f58:	0800401f 	.word	0x0800401f
 8003f5c:	68fb      	ldr	r3, [r7, #12]
 8003f5e:	681b      	ldr	r3, [r3, #0]
 8003f60:	68b9      	ldr	r1, [r7, #8]
 8003f62:	4618      	mov	r0, r3
 8003f64:	f000 f9d6 	bl	8004314 <TIM_OC1_SetConfig>
 8003f68:	68fb      	ldr	r3, [r7, #12]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	699a      	ldr	r2, [r3, #24]
 8003f6e:	68fb      	ldr	r3, [r7, #12]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	f042 0208 	orr.w	r2, r2, #8
 8003f76:	619a      	str	r2, [r3, #24]
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	699a      	ldr	r2, [r3, #24]
 8003f7e:	68fb      	ldr	r3, [r7, #12]
 8003f80:	681b      	ldr	r3, [r3, #0]
 8003f82:	f022 0204 	bic.w	r2, r2, #4
 8003f86:	619a      	str	r2, [r3, #24]
 8003f88:	68fb      	ldr	r3, [r7, #12]
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	6999      	ldr	r1, [r3, #24]
 8003f8e:	68bb      	ldr	r3, [r7, #8]
 8003f90:	691a      	ldr	r2, [r3, #16]
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	430a      	orrs	r2, r1
 8003f98:	619a      	str	r2, [r3, #24]
 8003f9a:	e064      	b.n	8004066 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003f9c:	68fb      	ldr	r3, [r7, #12]
 8003f9e:	681b      	ldr	r3, [r3, #0]
 8003fa0:	68b9      	ldr	r1, [r7, #8]
 8003fa2:	4618      	mov	r0, r3
 8003fa4:	f000 fa1c 	bl	80043e0 <TIM_OC2_SetConfig>
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	699a      	ldr	r2, [r3, #24]
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003fb6:	619a      	str	r2, [r3, #24]
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	699a      	ldr	r2, [r3, #24]
 8003fbe:	68fb      	ldr	r3, [r7, #12]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003fc6:	619a      	str	r2, [r3, #24]
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	6999      	ldr	r1, [r3, #24]
 8003fce:	68bb      	ldr	r3, [r7, #8]
 8003fd0:	691b      	ldr	r3, [r3, #16]
 8003fd2:	021a      	lsls	r2, r3, #8
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	430a      	orrs	r2, r1
 8003fda:	619a      	str	r2, [r3, #24]
 8003fdc:	e043      	b.n	8004066 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003fde:	68fb      	ldr	r3, [r7, #12]
 8003fe0:	681b      	ldr	r3, [r3, #0]
 8003fe2:	68b9      	ldr	r1, [r7, #8]
 8003fe4:	4618      	mov	r0, r3
 8003fe6:	f000 fa65 	bl	80044b4 <TIM_OC3_SetConfig>
 8003fea:	68fb      	ldr	r3, [r7, #12]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	69da      	ldr	r2, [r3, #28]
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	f042 0208 	orr.w	r2, r2, #8
 8003ff8:	61da      	str	r2, [r3, #28]
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	69da      	ldr	r2, [r3, #28]
 8004000:	68fb      	ldr	r3, [r7, #12]
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	f022 0204 	bic.w	r2, r2, #4
 8004008:	61da      	str	r2, [r3, #28]
 800400a:	68fb      	ldr	r3, [r7, #12]
 800400c:	681b      	ldr	r3, [r3, #0]
 800400e:	69d9      	ldr	r1, [r3, #28]
 8004010:	68bb      	ldr	r3, [r7, #8]
 8004012:	691a      	ldr	r2, [r3, #16]
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	681b      	ldr	r3, [r3, #0]
 8004018:	430a      	orrs	r2, r1
 800401a:	61da      	str	r2, [r3, #28]
 800401c:	e023      	b.n	8004066 <HAL_TIM_PWM_ConfigChannel+0x172>
 800401e:	68fb      	ldr	r3, [r7, #12]
 8004020:	681b      	ldr	r3, [r3, #0]
 8004022:	68b9      	ldr	r1, [r7, #8]
 8004024:	4618      	mov	r0, r3
 8004026:	f000 faaf 	bl	8004588 <TIM_OC4_SetConfig>
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	69da      	ldr	r2, [r3, #28]
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004038:	61da      	str	r2, [r3, #28]
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	69da      	ldr	r2, [r3, #28]
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004048:	61da      	str	r2, [r3, #28]
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	69d9      	ldr	r1, [r3, #28]
 8004050:	68bb      	ldr	r3, [r7, #8]
 8004052:	691b      	ldr	r3, [r3, #16]
 8004054:	021a      	lsls	r2, r3, #8
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	430a      	orrs	r2, r1
 800405c:	61da      	str	r2, [r3, #28]
 800405e:	e002      	b.n	8004066 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004060:	2301      	movs	r3, #1
 8004062:	75fb      	strb	r3, [r7, #23]
 8004064:	bf00      	nop
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	2200      	movs	r2, #0
 800406a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800406e:	7dfb      	ldrb	r3, [r7, #23]
 8004070:	4618      	mov	r0, r3
 8004072:	3718      	adds	r7, #24
 8004074:	46bd      	mov	sp, r7
 8004076:	bd80      	pop	{r7, pc}

08004078 <HAL_TIM_ConfigClockSource>:
 8004078:	b580      	push	{r7, lr}
 800407a:	b084      	sub	sp, #16
 800407c:	af00      	add	r7, sp, #0
 800407e:	6078      	str	r0, [r7, #4]
 8004080:	6039      	str	r1, [r7, #0]
 8004082:	2300      	movs	r3, #0
 8004084:	73fb      	strb	r3, [r7, #15]
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800408c:	2b01      	cmp	r3, #1
 800408e:	d101      	bne.n	8004094 <HAL_TIM_ConfigClockSource+0x1c>
 8004090:	2302      	movs	r3, #2
 8004092:	e0b4      	b.n	80041fe <HAL_TIM_ConfigClockSource+0x186>
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	2201      	movs	r2, #1
 8004098:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	2202      	movs	r2, #2
 80040a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	689b      	ldr	r3, [r3, #8]
 80040aa:	60bb      	str	r3, [r7, #8]
 80040ac:	68bb      	ldr	r3, [r7, #8]
 80040ae:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80040b2:	60bb      	str	r3, [r7, #8]
 80040b4:	68bb      	ldr	r3, [r7, #8]
 80040b6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80040ba:	60bb      	str	r3, [r7, #8]
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	68ba      	ldr	r2, [r7, #8]
 80040c2:	609a      	str	r2, [r3, #8]
 80040c4:	683b      	ldr	r3, [r7, #0]
 80040c6:	681b      	ldr	r3, [r3, #0]
 80040c8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80040cc:	d03e      	beq.n	800414c <HAL_TIM_ConfigClockSource+0xd4>
 80040ce:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80040d2:	f200 8087 	bhi.w	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 80040d6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80040da:	f000 8086 	beq.w	80041ea <HAL_TIM_ConfigClockSource+0x172>
 80040de:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80040e2:	d87f      	bhi.n	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 80040e4:	2b70      	cmp	r3, #112	; 0x70
 80040e6:	d01a      	beq.n	800411e <HAL_TIM_ConfigClockSource+0xa6>
 80040e8:	2b70      	cmp	r3, #112	; 0x70
 80040ea:	d87b      	bhi.n	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 80040ec:	2b60      	cmp	r3, #96	; 0x60
 80040ee:	d050      	beq.n	8004192 <HAL_TIM_ConfigClockSource+0x11a>
 80040f0:	2b60      	cmp	r3, #96	; 0x60
 80040f2:	d877      	bhi.n	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 80040f4:	2b50      	cmp	r3, #80	; 0x50
 80040f6:	d03c      	beq.n	8004172 <HAL_TIM_ConfigClockSource+0xfa>
 80040f8:	2b50      	cmp	r3, #80	; 0x50
 80040fa:	d873      	bhi.n	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 80040fc:	2b40      	cmp	r3, #64	; 0x40
 80040fe:	d058      	beq.n	80041b2 <HAL_TIM_ConfigClockSource+0x13a>
 8004100:	2b40      	cmp	r3, #64	; 0x40
 8004102:	d86f      	bhi.n	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 8004104:	2b30      	cmp	r3, #48	; 0x30
 8004106:	d064      	beq.n	80041d2 <HAL_TIM_ConfigClockSource+0x15a>
 8004108:	2b30      	cmp	r3, #48	; 0x30
 800410a:	d86b      	bhi.n	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 800410c:	2b20      	cmp	r3, #32
 800410e:	d060      	beq.n	80041d2 <HAL_TIM_ConfigClockSource+0x15a>
 8004110:	2b20      	cmp	r3, #32
 8004112:	d867      	bhi.n	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 8004114:	2b00      	cmp	r3, #0
 8004116:	d05c      	beq.n	80041d2 <HAL_TIM_ConfigClockSource+0x15a>
 8004118:	2b10      	cmp	r3, #16
 800411a:	d05a      	beq.n	80041d2 <HAL_TIM_ConfigClockSource+0x15a>
 800411c:	e062      	b.n	80041e4 <HAL_TIM_ConfigClockSource+0x16c>
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	6818      	ldr	r0, [r3, #0]
 8004122:	683b      	ldr	r3, [r7, #0]
 8004124:	6899      	ldr	r1, [r3, #8]
 8004126:	683b      	ldr	r3, [r7, #0]
 8004128:	685a      	ldr	r2, [r3, #4]
 800412a:	683b      	ldr	r3, [r7, #0]
 800412c:	68db      	ldr	r3, [r3, #12]
 800412e:	f000 faf0 	bl	8004712 <TIM_ETR_SetConfig>
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	689b      	ldr	r3, [r3, #8]
 8004138:	60bb      	str	r3, [r7, #8]
 800413a:	68bb      	ldr	r3, [r7, #8]
 800413c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8004140:	60bb      	str	r3, [r7, #8]
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	681b      	ldr	r3, [r3, #0]
 8004146:	68ba      	ldr	r2, [r7, #8]
 8004148:	609a      	str	r2, [r3, #8]
 800414a:	e04f      	b.n	80041ec <HAL_TIM_ConfigClockSource+0x174>
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	6818      	ldr	r0, [r3, #0]
 8004150:	683b      	ldr	r3, [r7, #0]
 8004152:	6899      	ldr	r1, [r3, #8]
 8004154:	683b      	ldr	r3, [r7, #0]
 8004156:	685a      	ldr	r2, [r3, #4]
 8004158:	683b      	ldr	r3, [r7, #0]
 800415a:	68db      	ldr	r3, [r3, #12]
 800415c:	f000 fad9 	bl	8004712 <TIM_ETR_SetConfig>
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	689a      	ldr	r2, [r3, #8]
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800416e:	609a      	str	r2, [r3, #8]
 8004170:	e03c      	b.n	80041ec <HAL_TIM_ConfigClockSource+0x174>
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	6818      	ldr	r0, [r3, #0]
 8004176:	683b      	ldr	r3, [r7, #0]
 8004178:	6859      	ldr	r1, [r3, #4]
 800417a:	683b      	ldr	r3, [r7, #0]
 800417c:	68db      	ldr	r3, [r3, #12]
 800417e:	461a      	mov	r2, r3
 8004180:	f000 fa50 	bl	8004624 <TIM_TI1_ConfigInputStage>
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	2150      	movs	r1, #80	; 0x50
 800418a:	4618      	mov	r0, r3
 800418c:	f000 faa7 	bl	80046de <TIM_ITRx_SetConfig>
 8004190:	e02c      	b.n	80041ec <HAL_TIM_ConfigClockSource+0x174>
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	6818      	ldr	r0, [r3, #0]
 8004196:	683b      	ldr	r3, [r7, #0]
 8004198:	6859      	ldr	r1, [r3, #4]
 800419a:	683b      	ldr	r3, [r7, #0]
 800419c:	68db      	ldr	r3, [r3, #12]
 800419e:	461a      	mov	r2, r3
 80041a0:	f000 fa6e 	bl	8004680 <TIM_TI2_ConfigInputStage>
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	2160      	movs	r1, #96	; 0x60
 80041aa:	4618      	mov	r0, r3
 80041ac:	f000 fa97 	bl	80046de <TIM_ITRx_SetConfig>
 80041b0:	e01c      	b.n	80041ec <HAL_TIM_ConfigClockSource+0x174>
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	6818      	ldr	r0, [r3, #0]
 80041b6:	683b      	ldr	r3, [r7, #0]
 80041b8:	6859      	ldr	r1, [r3, #4]
 80041ba:	683b      	ldr	r3, [r7, #0]
 80041bc:	68db      	ldr	r3, [r3, #12]
 80041be:	461a      	mov	r2, r3
 80041c0:	f000 fa30 	bl	8004624 <TIM_TI1_ConfigInputStage>
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	2140      	movs	r1, #64	; 0x40
 80041ca:	4618      	mov	r0, r3
 80041cc:	f000 fa87 	bl	80046de <TIM_ITRx_SetConfig>
 80041d0:	e00c      	b.n	80041ec <HAL_TIM_ConfigClockSource+0x174>
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	681a      	ldr	r2, [r3, #0]
 80041d6:	683b      	ldr	r3, [r7, #0]
 80041d8:	681b      	ldr	r3, [r3, #0]
 80041da:	4619      	mov	r1, r3
 80041dc:	4610      	mov	r0, r2
 80041de:	f000 fa7e 	bl	80046de <TIM_ITRx_SetConfig>
 80041e2:	e003      	b.n	80041ec <HAL_TIM_ConfigClockSource+0x174>
 80041e4:	2301      	movs	r3, #1
 80041e6:	73fb      	strb	r3, [r7, #15]
 80041e8:	e000      	b.n	80041ec <HAL_TIM_ConfigClockSource+0x174>
 80041ea:	bf00      	nop
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	2201      	movs	r2, #1
 80041f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	2200      	movs	r2, #0
 80041f8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80041fc:	7bfb      	ldrb	r3, [r7, #15]
 80041fe:	4618      	mov	r0, r3
 8004200:	3710      	adds	r7, #16
 8004202:	46bd      	mov	sp, r7
 8004204:	bd80      	pop	{r7, pc}

08004206 <HAL_TIM_OC_DelayElapsedCallback>:
 8004206:	b480      	push	{r7}
 8004208:	b083      	sub	sp, #12
 800420a:	af00      	add	r7, sp, #0
 800420c:	6078      	str	r0, [r7, #4]
 800420e:	bf00      	nop
 8004210:	370c      	adds	r7, #12
 8004212:	46bd      	mov	sp, r7
 8004214:	bc80      	pop	{r7}
 8004216:	4770      	bx	lr

08004218 <HAL_TIM_IC_CaptureCallback>:
 8004218:	b480      	push	{r7}
 800421a:	b083      	sub	sp, #12
 800421c:	af00      	add	r7, sp, #0
 800421e:	6078      	str	r0, [r7, #4]
 8004220:	bf00      	nop
 8004222:	370c      	adds	r7, #12
 8004224:	46bd      	mov	sp, r7
 8004226:	bc80      	pop	{r7}
 8004228:	4770      	bx	lr

0800422a <HAL_TIM_PWM_PulseFinishedCallback>:
 800422a:	b480      	push	{r7}
 800422c:	b083      	sub	sp, #12
 800422e:	af00      	add	r7, sp, #0
 8004230:	6078      	str	r0, [r7, #4]
 8004232:	bf00      	nop
 8004234:	370c      	adds	r7, #12
 8004236:	46bd      	mov	sp, r7
 8004238:	bc80      	pop	{r7}
 800423a:	4770      	bx	lr

0800423c <HAL_TIM_TriggerCallback>:
 800423c:	b480      	push	{r7}
 800423e:	b083      	sub	sp, #12
 8004240:	af00      	add	r7, sp, #0
 8004242:	6078      	str	r0, [r7, #4]
 8004244:	bf00      	nop
 8004246:	370c      	adds	r7, #12
 8004248:	46bd      	mov	sp, r7
 800424a:	bc80      	pop	{r7}
 800424c:	4770      	bx	lr
	...

08004250 <TIM_Base_SetConfig>:
 8004250:	b480      	push	{r7}
 8004252:	b085      	sub	sp, #20
 8004254:	af00      	add	r7, sp, #0
 8004256:	6078      	str	r0, [r7, #4]
 8004258:	6039      	str	r1, [r7, #0]
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	60fb      	str	r3, [r7, #12]
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	4a29      	ldr	r2, [pc, #164]	; (8004308 <TIM_Base_SetConfig+0xb8>)
 8004264:	4293      	cmp	r3, r2
 8004266:	d00b      	beq.n	8004280 <TIM_Base_SetConfig+0x30>
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800426e:	d007      	beq.n	8004280 <TIM_Base_SetConfig+0x30>
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	4a26      	ldr	r2, [pc, #152]	; (800430c <TIM_Base_SetConfig+0xbc>)
 8004274:	4293      	cmp	r3, r2
 8004276:	d003      	beq.n	8004280 <TIM_Base_SetConfig+0x30>
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	4a25      	ldr	r2, [pc, #148]	; (8004310 <TIM_Base_SetConfig+0xc0>)
 800427c:	4293      	cmp	r3, r2
 800427e:	d108      	bne.n	8004292 <TIM_Base_SetConfig+0x42>
 8004280:	68fb      	ldr	r3, [r7, #12]
 8004282:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004286:	60fb      	str	r3, [r7, #12]
 8004288:	683b      	ldr	r3, [r7, #0]
 800428a:	685b      	ldr	r3, [r3, #4]
 800428c:	68fa      	ldr	r2, [r7, #12]
 800428e:	4313      	orrs	r3, r2
 8004290:	60fb      	str	r3, [r7, #12]
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	4a1c      	ldr	r2, [pc, #112]	; (8004308 <TIM_Base_SetConfig+0xb8>)
 8004296:	4293      	cmp	r3, r2
 8004298:	d00b      	beq.n	80042b2 <TIM_Base_SetConfig+0x62>
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80042a0:	d007      	beq.n	80042b2 <TIM_Base_SetConfig+0x62>
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	4a19      	ldr	r2, [pc, #100]	; (800430c <TIM_Base_SetConfig+0xbc>)
 80042a6:	4293      	cmp	r3, r2
 80042a8:	d003      	beq.n	80042b2 <TIM_Base_SetConfig+0x62>
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	4a18      	ldr	r2, [pc, #96]	; (8004310 <TIM_Base_SetConfig+0xc0>)
 80042ae:	4293      	cmp	r3, r2
 80042b0:	d108      	bne.n	80042c4 <TIM_Base_SetConfig+0x74>
 80042b2:	68fb      	ldr	r3, [r7, #12]
 80042b4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80042b8:	60fb      	str	r3, [r7, #12]
 80042ba:	683b      	ldr	r3, [r7, #0]
 80042bc:	68db      	ldr	r3, [r3, #12]
 80042be:	68fa      	ldr	r2, [r7, #12]
 80042c0:	4313      	orrs	r3, r2
 80042c2:	60fb      	str	r3, [r7, #12]
 80042c4:	68fb      	ldr	r3, [r7, #12]
 80042c6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80042ca:	683b      	ldr	r3, [r7, #0]
 80042cc:	695b      	ldr	r3, [r3, #20]
 80042ce:	4313      	orrs	r3, r2
 80042d0:	60fb      	str	r3, [r7, #12]
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	68fa      	ldr	r2, [r7, #12]
 80042d6:	601a      	str	r2, [r3, #0]
 80042d8:	683b      	ldr	r3, [r7, #0]
 80042da:	689a      	ldr	r2, [r3, #8]
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	62da      	str	r2, [r3, #44]	; 0x2c
 80042e0:	683b      	ldr	r3, [r7, #0]
 80042e2:	681a      	ldr	r2, [r3, #0]
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	629a      	str	r2, [r3, #40]	; 0x28
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	4a07      	ldr	r2, [pc, #28]	; (8004308 <TIM_Base_SetConfig+0xb8>)
 80042ec:	4293      	cmp	r3, r2
 80042ee:	d103      	bne.n	80042f8 <TIM_Base_SetConfig+0xa8>
 80042f0:	683b      	ldr	r3, [r7, #0]
 80042f2:	691a      	ldr	r2, [r3, #16]
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	631a      	str	r2, [r3, #48]	; 0x30
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	2201      	movs	r2, #1
 80042fc:	615a      	str	r2, [r3, #20]
 80042fe:	bf00      	nop
 8004300:	3714      	adds	r7, #20
 8004302:	46bd      	mov	sp, r7
 8004304:	bc80      	pop	{r7}
 8004306:	4770      	bx	lr
 8004308:	40012c00 	.word	0x40012c00
 800430c:	40000400 	.word	0x40000400
 8004310:	40000800 	.word	0x40000800

08004314 <TIM_OC1_SetConfig>:
 8004314:	b480      	push	{r7}
 8004316:	b087      	sub	sp, #28
 8004318:	af00      	add	r7, sp, #0
 800431a:	6078      	str	r0, [r7, #4]
 800431c:	6039      	str	r1, [r7, #0]
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	6a1b      	ldr	r3, [r3, #32]
 8004322:	617b      	str	r3, [r7, #20]
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	6a1b      	ldr	r3, [r3, #32]
 8004328:	f023 0201 	bic.w	r2, r3, #1
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	621a      	str	r2, [r3, #32]
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	685b      	ldr	r3, [r3, #4]
 8004334:	613b      	str	r3, [r7, #16]
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	699b      	ldr	r3, [r3, #24]
 800433a:	60fb      	str	r3, [r7, #12]
 800433c:	68fb      	ldr	r3, [r7, #12]
 800433e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004342:	60fb      	str	r3, [r7, #12]
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	f023 0303 	bic.w	r3, r3, #3
 800434a:	60fb      	str	r3, [r7, #12]
 800434c:	683b      	ldr	r3, [r7, #0]
 800434e:	681b      	ldr	r3, [r3, #0]
 8004350:	68fa      	ldr	r2, [r7, #12]
 8004352:	4313      	orrs	r3, r2
 8004354:	60fb      	str	r3, [r7, #12]
 8004356:	697b      	ldr	r3, [r7, #20]
 8004358:	f023 0302 	bic.w	r3, r3, #2
 800435c:	617b      	str	r3, [r7, #20]
 800435e:	683b      	ldr	r3, [r7, #0]
 8004360:	689b      	ldr	r3, [r3, #8]
 8004362:	697a      	ldr	r2, [r7, #20]
 8004364:	4313      	orrs	r3, r2
 8004366:	617b      	str	r3, [r7, #20]
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	4a1c      	ldr	r2, [pc, #112]	; (80043dc <TIM_OC1_SetConfig+0xc8>)
 800436c:	4293      	cmp	r3, r2
 800436e:	d10c      	bne.n	800438a <TIM_OC1_SetConfig+0x76>
 8004370:	697b      	ldr	r3, [r7, #20]
 8004372:	f023 0308 	bic.w	r3, r3, #8
 8004376:	617b      	str	r3, [r7, #20]
 8004378:	683b      	ldr	r3, [r7, #0]
 800437a:	68db      	ldr	r3, [r3, #12]
 800437c:	697a      	ldr	r2, [r7, #20]
 800437e:	4313      	orrs	r3, r2
 8004380:	617b      	str	r3, [r7, #20]
 8004382:	697b      	ldr	r3, [r7, #20]
 8004384:	f023 0304 	bic.w	r3, r3, #4
 8004388:	617b      	str	r3, [r7, #20]
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	4a13      	ldr	r2, [pc, #76]	; (80043dc <TIM_OC1_SetConfig+0xc8>)
 800438e:	4293      	cmp	r3, r2
 8004390:	d111      	bne.n	80043b6 <TIM_OC1_SetConfig+0xa2>
 8004392:	693b      	ldr	r3, [r7, #16]
 8004394:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004398:	613b      	str	r3, [r7, #16]
 800439a:	693b      	ldr	r3, [r7, #16]
 800439c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80043a0:	613b      	str	r3, [r7, #16]
 80043a2:	683b      	ldr	r3, [r7, #0]
 80043a4:	695b      	ldr	r3, [r3, #20]
 80043a6:	693a      	ldr	r2, [r7, #16]
 80043a8:	4313      	orrs	r3, r2
 80043aa:	613b      	str	r3, [r7, #16]
 80043ac:	683b      	ldr	r3, [r7, #0]
 80043ae:	699b      	ldr	r3, [r3, #24]
 80043b0:	693a      	ldr	r2, [r7, #16]
 80043b2:	4313      	orrs	r3, r2
 80043b4:	613b      	str	r3, [r7, #16]
 80043b6:	687b      	ldr	r3, [r7, #4]
 80043b8:	693a      	ldr	r2, [r7, #16]
 80043ba:	605a      	str	r2, [r3, #4]
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	68fa      	ldr	r2, [r7, #12]
 80043c0:	619a      	str	r2, [r3, #24]
 80043c2:	683b      	ldr	r3, [r7, #0]
 80043c4:	685a      	ldr	r2, [r3, #4]
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	635a      	str	r2, [r3, #52]	; 0x34
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	697a      	ldr	r2, [r7, #20]
 80043ce:	621a      	str	r2, [r3, #32]
 80043d0:	bf00      	nop
 80043d2:	371c      	adds	r7, #28
 80043d4:	46bd      	mov	sp, r7
 80043d6:	bc80      	pop	{r7}
 80043d8:	4770      	bx	lr
 80043da:	bf00      	nop
 80043dc:	40012c00 	.word	0x40012c00

080043e0 <TIM_OC2_SetConfig>:
 80043e0:	b480      	push	{r7}
 80043e2:	b087      	sub	sp, #28
 80043e4:	af00      	add	r7, sp, #0
 80043e6:	6078      	str	r0, [r7, #4]
 80043e8:	6039      	str	r1, [r7, #0]
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	6a1b      	ldr	r3, [r3, #32]
 80043ee:	617b      	str	r3, [r7, #20]
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	6a1b      	ldr	r3, [r3, #32]
 80043f4:	f023 0210 	bic.w	r2, r3, #16
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	621a      	str	r2, [r3, #32]
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	685b      	ldr	r3, [r3, #4]
 8004400:	613b      	str	r3, [r7, #16]
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	699b      	ldr	r3, [r3, #24]
 8004406:	60fb      	str	r3, [r7, #12]
 8004408:	68fb      	ldr	r3, [r7, #12]
 800440a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800440e:	60fb      	str	r3, [r7, #12]
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004416:	60fb      	str	r3, [r7, #12]
 8004418:	683b      	ldr	r3, [r7, #0]
 800441a:	681b      	ldr	r3, [r3, #0]
 800441c:	021b      	lsls	r3, r3, #8
 800441e:	68fa      	ldr	r2, [r7, #12]
 8004420:	4313      	orrs	r3, r2
 8004422:	60fb      	str	r3, [r7, #12]
 8004424:	697b      	ldr	r3, [r7, #20]
 8004426:	f023 0320 	bic.w	r3, r3, #32
 800442a:	617b      	str	r3, [r7, #20]
 800442c:	683b      	ldr	r3, [r7, #0]
 800442e:	689b      	ldr	r3, [r3, #8]
 8004430:	011b      	lsls	r3, r3, #4
 8004432:	697a      	ldr	r2, [r7, #20]
 8004434:	4313      	orrs	r3, r2
 8004436:	617b      	str	r3, [r7, #20]
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	4a1d      	ldr	r2, [pc, #116]	; (80044b0 <TIM_OC2_SetConfig+0xd0>)
 800443c:	4293      	cmp	r3, r2
 800443e:	d10d      	bne.n	800445c <TIM_OC2_SetConfig+0x7c>
 8004440:	697b      	ldr	r3, [r7, #20]
 8004442:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004446:	617b      	str	r3, [r7, #20]
 8004448:	683b      	ldr	r3, [r7, #0]
 800444a:	68db      	ldr	r3, [r3, #12]
 800444c:	011b      	lsls	r3, r3, #4
 800444e:	697a      	ldr	r2, [r7, #20]
 8004450:	4313      	orrs	r3, r2
 8004452:	617b      	str	r3, [r7, #20]
 8004454:	697b      	ldr	r3, [r7, #20]
 8004456:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800445a:	617b      	str	r3, [r7, #20]
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	4a14      	ldr	r2, [pc, #80]	; (80044b0 <TIM_OC2_SetConfig+0xd0>)
 8004460:	4293      	cmp	r3, r2
 8004462:	d113      	bne.n	800448c <TIM_OC2_SetConfig+0xac>
 8004464:	693b      	ldr	r3, [r7, #16]
 8004466:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800446a:	613b      	str	r3, [r7, #16]
 800446c:	693b      	ldr	r3, [r7, #16]
 800446e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004472:	613b      	str	r3, [r7, #16]
 8004474:	683b      	ldr	r3, [r7, #0]
 8004476:	695b      	ldr	r3, [r3, #20]
 8004478:	009b      	lsls	r3, r3, #2
 800447a:	693a      	ldr	r2, [r7, #16]
 800447c:	4313      	orrs	r3, r2
 800447e:	613b      	str	r3, [r7, #16]
 8004480:	683b      	ldr	r3, [r7, #0]
 8004482:	699b      	ldr	r3, [r3, #24]
 8004484:	009b      	lsls	r3, r3, #2
 8004486:	693a      	ldr	r2, [r7, #16]
 8004488:	4313      	orrs	r3, r2
 800448a:	613b      	str	r3, [r7, #16]
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	693a      	ldr	r2, [r7, #16]
 8004490:	605a      	str	r2, [r3, #4]
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	68fa      	ldr	r2, [r7, #12]
 8004496:	619a      	str	r2, [r3, #24]
 8004498:	683b      	ldr	r3, [r7, #0]
 800449a:	685a      	ldr	r2, [r3, #4]
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	639a      	str	r2, [r3, #56]	; 0x38
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	697a      	ldr	r2, [r7, #20]
 80044a4:	621a      	str	r2, [r3, #32]
 80044a6:	bf00      	nop
 80044a8:	371c      	adds	r7, #28
 80044aa:	46bd      	mov	sp, r7
 80044ac:	bc80      	pop	{r7}
 80044ae:	4770      	bx	lr
 80044b0:	40012c00 	.word	0x40012c00

080044b4 <TIM_OC3_SetConfig>:
 80044b4:	b480      	push	{r7}
 80044b6:	b087      	sub	sp, #28
 80044b8:	af00      	add	r7, sp, #0
 80044ba:	6078      	str	r0, [r7, #4]
 80044bc:	6039      	str	r1, [r7, #0]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	6a1b      	ldr	r3, [r3, #32]
 80044c2:	617b      	str	r3, [r7, #20]
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	6a1b      	ldr	r3, [r3, #32]
 80044c8:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	621a      	str	r2, [r3, #32]
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	685b      	ldr	r3, [r3, #4]
 80044d4:	613b      	str	r3, [r7, #16]
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	69db      	ldr	r3, [r3, #28]
 80044da:	60fb      	str	r3, [r7, #12]
 80044dc:	68fb      	ldr	r3, [r7, #12]
 80044de:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80044e2:	60fb      	str	r3, [r7, #12]
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	f023 0303 	bic.w	r3, r3, #3
 80044ea:	60fb      	str	r3, [r7, #12]
 80044ec:	683b      	ldr	r3, [r7, #0]
 80044ee:	681b      	ldr	r3, [r3, #0]
 80044f0:	68fa      	ldr	r2, [r7, #12]
 80044f2:	4313      	orrs	r3, r2
 80044f4:	60fb      	str	r3, [r7, #12]
 80044f6:	697b      	ldr	r3, [r7, #20]
 80044f8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80044fc:	617b      	str	r3, [r7, #20]
 80044fe:	683b      	ldr	r3, [r7, #0]
 8004500:	689b      	ldr	r3, [r3, #8]
 8004502:	021b      	lsls	r3, r3, #8
 8004504:	697a      	ldr	r2, [r7, #20]
 8004506:	4313      	orrs	r3, r2
 8004508:	617b      	str	r3, [r7, #20]
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	4a1d      	ldr	r2, [pc, #116]	; (8004584 <TIM_OC3_SetConfig+0xd0>)
 800450e:	4293      	cmp	r3, r2
 8004510:	d10d      	bne.n	800452e <TIM_OC3_SetConfig+0x7a>
 8004512:	697b      	ldr	r3, [r7, #20]
 8004514:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004518:	617b      	str	r3, [r7, #20]
 800451a:	683b      	ldr	r3, [r7, #0]
 800451c:	68db      	ldr	r3, [r3, #12]
 800451e:	021b      	lsls	r3, r3, #8
 8004520:	697a      	ldr	r2, [r7, #20]
 8004522:	4313      	orrs	r3, r2
 8004524:	617b      	str	r3, [r7, #20]
 8004526:	697b      	ldr	r3, [r7, #20]
 8004528:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800452c:	617b      	str	r3, [r7, #20]
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	4a14      	ldr	r2, [pc, #80]	; (8004584 <TIM_OC3_SetConfig+0xd0>)
 8004532:	4293      	cmp	r3, r2
 8004534:	d113      	bne.n	800455e <TIM_OC3_SetConfig+0xaa>
 8004536:	693b      	ldr	r3, [r7, #16]
 8004538:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800453c:	613b      	str	r3, [r7, #16]
 800453e:	693b      	ldr	r3, [r7, #16]
 8004540:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004544:	613b      	str	r3, [r7, #16]
 8004546:	683b      	ldr	r3, [r7, #0]
 8004548:	695b      	ldr	r3, [r3, #20]
 800454a:	011b      	lsls	r3, r3, #4
 800454c:	693a      	ldr	r2, [r7, #16]
 800454e:	4313      	orrs	r3, r2
 8004550:	613b      	str	r3, [r7, #16]
 8004552:	683b      	ldr	r3, [r7, #0]
 8004554:	699b      	ldr	r3, [r3, #24]
 8004556:	011b      	lsls	r3, r3, #4
 8004558:	693a      	ldr	r2, [r7, #16]
 800455a:	4313      	orrs	r3, r2
 800455c:	613b      	str	r3, [r7, #16]
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	693a      	ldr	r2, [r7, #16]
 8004562:	605a      	str	r2, [r3, #4]
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	68fa      	ldr	r2, [r7, #12]
 8004568:	61da      	str	r2, [r3, #28]
 800456a:	683b      	ldr	r3, [r7, #0]
 800456c:	685a      	ldr	r2, [r3, #4]
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	63da      	str	r2, [r3, #60]	; 0x3c
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	697a      	ldr	r2, [r7, #20]
 8004576:	621a      	str	r2, [r3, #32]
 8004578:	bf00      	nop
 800457a:	371c      	adds	r7, #28
 800457c:	46bd      	mov	sp, r7
 800457e:	bc80      	pop	{r7}
 8004580:	4770      	bx	lr
 8004582:	bf00      	nop
 8004584:	40012c00 	.word	0x40012c00

08004588 <TIM_OC4_SetConfig>:
 8004588:	b480      	push	{r7}
 800458a:	b087      	sub	sp, #28
 800458c:	af00      	add	r7, sp, #0
 800458e:	6078      	str	r0, [r7, #4]
 8004590:	6039      	str	r1, [r7, #0]
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	6a1b      	ldr	r3, [r3, #32]
 8004596:	613b      	str	r3, [r7, #16]
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	6a1b      	ldr	r3, [r3, #32]
 800459c:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	621a      	str	r2, [r3, #32]
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	685b      	ldr	r3, [r3, #4]
 80045a8:	617b      	str	r3, [r7, #20]
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	69db      	ldr	r3, [r3, #28]
 80045ae:	60fb      	str	r3, [r7, #12]
 80045b0:	68fb      	ldr	r3, [r7, #12]
 80045b2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80045b6:	60fb      	str	r3, [r7, #12]
 80045b8:	68fb      	ldr	r3, [r7, #12]
 80045ba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80045be:	60fb      	str	r3, [r7, #12]
 80045c0:	683b      	ldr	r3, [r7, #0]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	021b      	lsls	r3, r3, #8
 80045c6:	68fa      	ldr	r2, [r7, #12]
 80045c8:	4313      	orrs	r3, r2
 80045ca:	60fb      	str	r3, [r7, #12]
 80045cc:	693b      	ldr	r3, [r7, #16]
 80045ce:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80045d2:	613b      	str	r3, [r7, #16]
 80045d4:	683b      	ldr	r3, [r7, #0]
 80045d6:	689b      	ldr	r3, [r3, #8]
 80045d8:	031b      	lsls	r3, r3, #12
 80045da:	693a      	ldr	r2, [r7, #16]
 80045dc:	4313      	orrs	r3, r2
 80045de:	613b      	str	r3, [r7, #16]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	4a0f      	ldr	r2, [pc, #60]	; (8004620 <TIM_OC4_SetConfig+0x98>)
 80045e4:	4293      	cmp	r3, r2
 80045e6:	d109      	bne.n	80045fc <TIM_OC4_SetConfig+0x74>
 80045e8:	697b      	ldr	r3, [r7, #20]
 80045ea:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80045ee:	617b      	str	r3, [r7, #20]
 80045f0:	683b      	ldr	r3, [r7, #0]
 80045f2:	695b      	ldr	r3, [r3, #20]
 80045f4:	019b      	lsls	r3, r3, #6
 80045f6:	697a      	ldr	r2, [r7, #20]
 80045f8:	4313      	orrs	r3, r2
 80045fa:	617b      	str	r3, [r7, #20]
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	697a      	ldr	r2, [r7, #20]
 8004600:	605a      	str	r2, [r3, #4]
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	68fa      	ldr	r2, [r7, #12]
 8004606:	61da      	str	r2, [r3, #28]
 8004608:	683b      	ldr	r3, [r7, #0]
 800460a:	685a      	ldr	r2, [r3, #4]
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	641a      	str	r2, [r3, #64]	; 0x40
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	693a      	ldr	r2, [r7, #16]
 8004614:	621a      	str	r2, [r3, #32]
 8004616:	bf00      	nop
 8004618:	371c      	adds	r7, #28
 800461a:	46bd      	mov	sp, r7
 800461c:	bc80      	pop	{r7}
 800461e:	4770      	bx	lr
 8004620:	40012c00 	.word	0x40012c00

08004624 <TIM_TI1_ConfigInputStage>:
 8004624:	b480      	push	{r7}
 8004626:	b087      	sub	sp, #28
 8004628:	af00      	add	r7, sp, #0
 800462a:	60f8      	str	r0, [r7, #12]
 800462c:	60b9      	str	r1, [r7, #8]
 800462e:	607a      	str	r2, [r7, #4]
 8004630:	68fb      	ldr	r3, [r7, #12]
 8004632:	6a1b      	ldr	r3, [r3, #32]
 8004634:	617b      	str	r3, [r7, #20]
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	6a1b      	ldr	r3, [r3, #32]
 800463a:	f023 0201 	bic.w	r2, r3, #1
 800463e:	68fb      	ldr	r3, [r7, #12]
 8004640:	621a      	str	r2, [r3, #32]
 8004642:	68fb      	ldr	r3, [r7, #12]
 8004644:	699b      	ldr	r3, [r3, #24]
 8004646:	613b      	str	r3, [r7, #16]
 8004648:	693b      	ldr	r3, [r7, #16]
 800464a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800464e:	613b      	str	r3, [r7, #16]
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	011b      	lsls	r3, r3, #4
 8004654:	693a      	ldr	r2, [r7, #16]
 8004656:	4313      	orrs	r3, r2
 8004658:	613b      	str	r3, [r7, #16]
 800465a:	697b      	ldr	r3, [r7, #20]
 800465c:	f023 030a 	bic.w	r3, r3, #10
 8004660:	617b      	str	r3, [r7, #20]
 8004662:	697a      	ldr	r2, [r7, #20]
 8004664:	68bb      	ldr	r3, [r7, #8]
 8004666:	4313      	orrs	r3, r2
 8004668:	617b      	str	r3, [r7, #20]
 800466a:	68fb      	ldr	r3, [r7, #12]
 800466c:	693a      	ldr	r2, [r7, #16]
 800466e:	619a      	str	r2, [r3, #24]
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	697a      	ldr	r2, [r7, #20]
 8004674:	621a      	str	r2, [r3, #32]
 8004676:	bf00      	nop
 8004678:	371c      	adds	r7, #28
 800467a:	46bd      	mov	sp, r7
 800467c:	bc80      	pop	{r7}
 800467e:	4770      	bx	lr

08004680 <TIM_TI2_ConfigInputStage>:
 8004680:	b480      	push	{r7}
 8004682:	b087      	sub	sp, #28
 8004684:	af00      	add	r7, sp, #0
 8004686:	60f8      	str	r0, [r7, #12]
 8004688:	60b9      	str	r1, [r7, #8]
 800468a:	607a      	str	r2, [r7, #4]
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	6a1b      	ldr	r3, [r3, #32]
 8004690:	617b      	str	r3, [r7, #20]
 8004692:	68fb      	ldr	r3, [r7, #12]
 8004694:	6a1b      	ldr	r3, [r3, #32]
 8004696:	f023 0210 	bic.w	r2, r3, #16
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	621a      	str	r2, [r3, #32]
 800469e:	68fb      	ldr	r3, [r7, #12]
 80046a0:	699b      	ldr	r3, [r3, #24]
 80046a2:	613b      	str	r3, [r7, #16]
 80046a4:	693b      	ldr	r3, [r7, #16]
 80046a6:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80046aa:	613b      	str	r3, [r7, #16]
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	031b      	lsls	r3, r3, #12
 80046b0:	693a      	ldr	r2, [r7, #16]
 80046b2:	4313      	orrs	r3, r2
 80046b4:	613b      	str	r3, [r7, #16]
 80046b6:	697b      	ldr	r3, [r7, #20]
 80046b8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80046bc:	617b      	str	r3, [r7, #20]
 80046be:	68bb      	ldr	r3, [r7, #8]
 80046c0:	011b      	lsls	r3, r3, #4
 80046c2:	697a      	ldr	r2, [r7, #20]
 80046c4:	4313      	orrs	r3, r2
 80046c6:	617b      	str	r3, [r7, #20]
 80046c8:	68fb      	ldr	r3, [r7, #12]
 80046ca:	693a      	ldr	r2, [r7, #16]
 80046cc:	619a      	str	r2, [r3, #24]
 80046ce:	68fb      	ldr	r3, [r7, #12]
 80046d0:	697a      	ldr	r2, [r7, #20]
 80046d2:	621a      	str	r2, [r3, #32]
 80046d4:	bf00      	nop
 80046d6:	371c      	adds	r7, #28
 80046d8:	46bd      	mov	sp, r7
 80046da:	bc80      	pop	{r7}
 80046dc:	4770      	bx	lr

080046de <TIM_ITRx_SetConfig>:
 80046de:	b480      	push	{r7}
 80046e0:	b085      	sub	sp, #20
 80046e2:	af00      	add	r7, sp, #0
 80046e4:	6078      	str	r0, [r7, #4]
 80046e6:	6039      	str	r1, [r7, #0]
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	689b      	ldr	r3, [r3, #8]
 80046ec:	60fb      	str	r3, [r7, #12]
 80046ee:	68fb      	ldr	r3, [r7, #12]
 80046f0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80046f4:	60fb      	str	r3, [r7, #12]
 80046f6:	683a      	ldr	r2, [r7, #0]
 80046f8:	68fb      	ldr	r3, [r7, #12]
 80046fa:	4313      	orrs	r3, r2
 80046fc:	f043 0307 	orr.w	r3, r3, #7
 8004700:	60fb      	str	r3, [r7, #12]
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	68fa      	ldr	r2, [r7, #12]
 8004706:	609a      	str	r2, [r3, #8]
 8004708:	bf00      	nop
 800470a:	3714      	adds	r7, #20
 800470c:	46bd      	mov	sp, r7
 800470e:	bc80      	pop	{r7}
 8004710:	4770      	bx	lr

08004712 <TIM_ETR_SetConfig>:
 8004712:	b480      	push	{r7}
 8004714:	b087      	sub	sp, #28
 8004716:	af00      	add	r7, sp, #0
 8004718:	60f8      	str	r0, [r7, #12]
 800471a:	60b9      	str	r1, [r7, #8]
 800471c:	607a      	str	r2, [r7, #4]
 800471e:	603b      	str	r3, [r7, #0]
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	689b      	ldr	r3, [r3, #8]
 8004724:	617b      	str	r3, [r7, #20]
 8004726:	697b      	ldr	r3, [r7, #20]
 8004728:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800472c:	617b      	str	r3, [r7, #20]
 800472e:	683b      	ldr	r3, [r7, #0]
 8004730:	021a      	lsls	r2, r3, #8
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	431a      	orrs	r2, r3
 8004736:	68bb      	ldr	r3, [r7, #8]
 8004738:	4313      	orrs	r3, r2
 800473a:	697a      	ldr	r2, [r7, #20]
 800473c:	4313      	orrs	r3, r2
 800473e:	617b      	str	r3, [r7, #20]
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	697a      	ldr	r2, [r7, #20]
 8004744:	609a      	str	r2, [r3, #8]
 8004746:	bf00      	nop
 8004748:	371c      	adds	r7, #28
 800474a:	46bd      	mov	sp, r7
 800474c:	bc80      	pop	{r7}
 800474e:	4770      	bx	lr

08004750 <TIM_CCxChannelCmd>:
 8004750:	b480      	push	{r7}
 8004752:	b087      	sub	sp, #28
 8004754:	af00      	add	r7, sp, #0
 8004756:	60f8      	str	r0, [r7, #12]
 8004758:	60b9      	str	r1, [r7, #8]
 800475a:	607a      	str	r2, [r7, #4]
 800475c:	68bb      	ldr	r3, [r7, #8]
 800475e:	f003 031f 	and.w	r3, r3, #31
 8004762:	2201      	movs	r2, #1
 8004764:	fa02 f303 	lsl.w	r3, r2, r3
 8004768:	617b      	str	r3, [r7, #20]
 800476a:	68fb      	ldr	r3, [r7, #12]
 800476c:	6a1a      	ldr	r2, [r3, #32]
 800476e:	697b      	ldr	r3, [r7, #20]
 8004770:	43db      	mvns	r3, r3
 8004772:	401a      	ands	r2, r3
 8004774:	68fb      	ldr	r3, [r7, #12]
 8004776:	621a      	str	r2, [r3, #32]
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	6a1a      	ldr	r2, [r3, #32]
 800477c:	68bb      	ldr	r3, [r7, #8]
 800477e:	f003 031f 	and.w	r3, r3, #31
 8004782:	6879      	ldr	r1, [r7, #4]
 8004784:	fa01 f303 	lsl.w	r3, r1, r3
 8004788:	431a      	orrs	r2, r3
 800478a:	68fb      	ldr	r3, [r7, #12]
 800478c:	621a      	str	r2, [r3, #32]
 800478e:	bf00      	nop
 8004790:	371c      	adds	r7, #28
 8004792:	46bd      	mov	sp, r7
 8004794:	bc80      	pop	{r7}
 8004796:	4770      	bx	lr

08004798 <HAL_TIMEx_MasterConfigSynchronization>:
 8004798:	b480      	push	{r7}
 800479a:	b085      	sub	sp, #20
 800479c:	af00      	add	r7, sp, #0
 800479e:	6078      	str	r0, [r7, #4]
 80047a0:	6039      	str	r1, [r7, #0]
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80047a8:	2b01      	cmp	r3, #1
 80047aa:	d101      	bne.n	80047b0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80047ac:	2302      	movs	r3, #2
 80047ae:	e046      	b.n	800483e <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	2201      	movs	r2, #1
 80047b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	2202      	movs	r2, #2
 80047bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	685b      	ldr	r3, [r3, #4]
 80047c6:	60fb      	str	r3, [r7, #12]
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	681b      	ldr	r3, [r3, #0]
 80047cc:	689b      	ldr	r3, [r3, #8]
 80047ce:	60bb      	str	r3, [r7, #8]
 80047d0:	68fb      	ldr	r3, [r7, #12]
 80047d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80047d6:	60fb      	str	r3, [r7, #12]
 80047d8:	683b      	ldr	r3, [r7, #0]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	68fa      	ldr	r2, [r7, #12]
 80047de:	4313      	orrs	r3, r2
 80047e0:	60fb      	str	r3, [r7, #12]
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	68fa      	ldr	r2, [r7, #12]
 80047e8:	605a      	str	r2, [r3, #4]
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	4a16      	ldr	r2, [pc, #88]	; (8004848 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80047f0:	4293      	cmp	r3, r2
 80047f2:	d00e      	beq.n	8004812 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80047f4:	687b      	ldr	r3, [r7, #4]
 80047f6:	681b      	ldr	r3, [r3, #0]
 80047f8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80047fc:	d009      	beq.n	8004812 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	4a12      	ldr	r2, [pc, #72]	; (800484c <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8004804:	4293      	cmp	r3, r2
 8004806:	d004      	beq.n	8004812 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	4a10      	ldr	r2, [pc, #64]	; (8004850 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800480e:	4293      	cmp	r3, r2
 8004810:	d10c      	bne.n	800482c <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004812:	68bb      	ldr	r3, [r7, #8]
 8004814:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004818:	60bb      	str	r3, [r7, #8]
 800481a:	683b      	ldr	r3, [r7, #0]
 800481c:	685b      	ldr	r3, [r3, #4]
 800481e:	68ba      	ldr	r2, [r7, #8]
 8004820:	4313      	orrs	r3, r2
 8004822:	60bb      	str	r3, [r7, #8]
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	68ba      	ldr	r2, [r7, #8]
 800482a:	609a      	str	r2, [r3, #8]
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	2201      	movs	r2, #1
 8004830:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	2200      	movs	r2, #0
 8004838:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800483c:	2300      	movs	r3, #0
 800483e:	4618      	mov	r0, r3
 8004840:	3714      	adds	r7, #20
 8004842:	46bd      	mov	sp, r7
 8004844:	bc80      	pop	{r7}
 8004846:	4770      	bx	lr
 8004848:	40012c00 	.word	0x40012c00
 800484c:	40000400 	.word	0x40000400
 8004850:	40000800 	.word	0x40000800

08004854 <HAL_TIMEx_CommutCallback>:
 8004854:	b480      	push	{r7}
 8004856:	b083      	sub	sp, #12
 8004858:	af00      	add	r7, sp, #0
 800485a:	6078      	str	r0, [r7, #4]
 800485c:	bf00      	nop
 800485e:	370c      	adds	r7, #12
 8004860:	46bd      	mov	sp, r7
 8004862:	bc80      	pop	{r7}
 8004864:	4770      	bx	lr

08004866 <HAL_TIMEx_BreakCallback>:
 8004866:	b480      	push	{r7}
 8004868:	b083      	sub	sp, #12
 800486a:	af00      	add	r7, sp, #0
 800486c:	6078      	str	r0, [r7, #4]
 800486e:	bf00      	nop
 8004870:	370c      	adds	r7, #12
 8004872:	46bd      	mov	sp, r7
 8004874:	bc80      	pop	{r7}
 8004876:	4770      	bx	lr

08004878 <HAL_UART_Init>:
 8004878:	b580      	push	{r7, lr}
 800487a:	b082      	sub	sp, #8
 800487c:	af00      	add	r7, sp, #0
 800487e:	6078      	str	r0, [r7, #4]
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	2b00      	cmp	r3, #0
 8004884:	d101      	bne.n	800488a <HAL_UART_Init+0x12>
 8004886:	2301      	movs	r3, #1
 8004888:	e042      	b.n	8004910 <HAL_UART_Init+0x98>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004890:	b2db      	uxtb	r3, r3
 8004892:	2b00      	cmp	r3, #0
 8004894:	d106      	bne.n	80048a4 <HAL_UART_Init+0x2c>
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	2200      	movs	r2, #0
 800489a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800489e:	6878      	ldr	r0, [r7, #4]
 80048a0:	f7fd ff72 	bl	8002788 <HAL_UART_MspInit>
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	2224      	movs	r2, #36	; 0x24
 80048a8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	68da      	ldr	r2, [r3, #12]
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80048ba:	60da      	str	r2, [r3, #12]
 80048bc:	6878      	ldr	r0, [r7, #4]
 80048be:	f000 fd71 	bl	80053a4 <UART_SetConfig>
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	691a      	ldr	r2, [r3, #16]
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80048d0:	611a      	str	r2, [r3, #16]
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	695a      	ldr	r2, [r3, #20]
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80048e0:	615a      	str	r2, [r3, #20]
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	68da      	ldr	r2, [r3, #12]
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80048f0:	60da      	str	r2, [r3, #12]
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	2200      	movs	r2, #0
 80048f6:	645a      	str	r2, [r3, #68]	; 0x44
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	2220      	movs	r2, #32
 80048fc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	2220      	movs	r2, #32
 8004904:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	2200      	movs	r2, #0
 800490c:	635a      	str	r2, [r3, #52]	; 0x34
 800490e:	2300      	movs	r3, #0
 8004910:	4618      	mov	r0, r3
 8004912:	3708      	adds	r7, #8
 8004914:	46bd      	mov	sp, r7
 8004916:	bd80      	pop	{r7, pc}

08004918 <HAL_UART_Transmit>:
 8004918:	b580      	push	{r7, lr}
 800491a:	b08a      	sub	sp, #40	; 0x28
 800491c:	af02      	add	r7, sp, #8
 800491e:	60f8      	str	r0, [r7, #12]
 8004920:	60b9      	str	r1, [r7, #8]
 8004922:	603b      	str	r3, [r7, #0]
 8004924:	4613      	mov	r3, r2
 8004926:	80fb      	strh	r3, [r7, #6]
 8004928:	2300      	movs	r3, #0
 800492a:	617b      	str	r3, [r7, #20]
 800492c:	68fb      	ldr	r3, [r7, #12]
 800492e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004932:	b2db      	uxtb	r3, r3
 8004934:	2b20      	cmp	r3, #32
 8004936:	d16d      	bne.n	8004a14 <HAL_UART_Transmit+0xfc>
 8004938:	68bb      	ldr	r3, [r7, #8]
 800493a:	2b00      	cmp	r3, #0
 800493c:	d002      	beq.n	8004944 <HAL_UART_Transmit+0x2c>
 800493e:	88fb      	ldrh	r3, [r7, #6]
 8004940:	2b00      	cmp	r3, #0
 8004942:	d101      	bne.n	8004948 <HAL_UART_Transmit+0x30>
 8004944:	2301      	movs	r3, #1
 8004946:	e066      	b.n	8004a16 <HAL_UART_Transmit+0xfe>
 8004948:	68fb      	ldr	r3, [r7, #12]
 800494a:	2200      	movs	r2, #0
 800494c:	645a      	str	r2, [r3, #68]	; 0x44
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	2221      	movs	r2, #33	; 0x21
 8004952:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004956:	f7fe f869 	bl	8002a2c <HAL_GetTick>
 800495a:	6178      	str	r0, [r7, #20]
 800495c:	68fb      	ldr	r3, [r7, #12]
 800495e:	88fa      	ldrh	r2, [r7, #6]
 8004960:	849a      	strh	r2, [r3, #36]	; 0x24
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	88fa      	ldrh	r2, [r7, #6]
 8004966:	84da      	strh	r2, [r3, #38]	; 0x26
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	689b      	ldr	r3, [r3, #8]
 800496c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004970:	d108      	bne.n	8004984 <HAL_UART_Transmit+0x6c>
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	691b      	ldr	r3, [r3, #16]
 8004976:	2b00      	cmp	r3, #0
 8004978:	d104      	bne.n	8004984 <HAL_UART_Transmit+0x6c>
 800497a:	2300      	movs	r3, #0
 800497c:	61fb      	str	r3, [r7, #28]
 800497e:	68bb      	ldr	r3, [r7, #8]
 8004980:	61bb      	str	r3, [r7, #24]
 8004982:	e003      	b.n	800498c <HAL_UART_Transmit+0x74>
 8004984:	68bb      	ldr	r3, [r7, #8]
 8004986:	61fb      	str	r3, [r7, #28]
 8004988:	2300      	movs	r3, #0
 800498a:	61bb      	str	r3, [r7, #24]
 800498c:	e02a      	b.n	80049e4 <HAL_UART_Transmit+0xcc>
 800498e:	683b      	ldr	r3, [r7, #0]
 8004990:	9300      	str	r3, [sp, #0]
 8004992:	697b      	ldr	r3, [r7, #20]
 8004994:	2200      	movs	r2, #0
 8004996:	2180      	movs	r1, #128	; 0x80
 8004998:	68f8      	ldr	r0, [r7, #12]
 800499a:	f000 faf9 	bl	8004f90 <UART_WaitOnFlagUntilTimeout>
 800499e:	4603      	mov	r3, r0
 80049a0:	2b00      	cmp	r3, #0
 80049a2:	d001      	beq.n	80049a8 <HAL_UART_Transmit+0x90>
 80049a4:	2303      	movs	r3, #3
 80049a6:	e036      	b.n	8004a16 <HAL_UART_Transmit+0xfe>
 80049a8:	69fb      	ldr	r3, [r7, #28]
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d10b      	bne.n	80049c6 <HAL_UART_Transmit+0xae>
 80049ae:	69bb      	ldr	r3, [r7, #24]
 80049b0:	881b      	ldrh	r3, [r3, #0]
 80049b2:	461a      	mov	r2, r3
 80049b4:	68fb      	ldr	r3, [r7, #12]
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80049bc:	605a      	str	r2, [r3, #4]
 80049be:	69bb      	ldr	r3, [r7, #24]
 80049c0:	3302      	adds	r3, #2
 80049c2:	61bb      	str	r3, [r7, #24]
 80049c4:	e007      	b.n	80049d6 <HAL_UART_Transmit+0xbe>
 80049c6:	69fb      	ldr	r3, [r7, #28]
 80049c8:	781a      	ldrb	r2, [r3, #0]
 80049ca:	68fb      	ldr	r3, [r7, #12]
 80049cc:	681b      	ldr	r3, [r3, #0]
 80049ce:	605a      	str	r2, [r3, #4]
 80049d0:	69fb      	ldr	r3, [r7, #28]
 80049d2:	3301      	adds	r3, #1
 80049d4:	61fb      	str	r3, [r7, #28]
 80049d6:	68fb      	ldr	r3, [r7, #12]
 80049d8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80049da:	b29b      	uxth	r3, r3
 80049dc:	3b01      	subs	r3, #1
 80049de:	b29a      	uxth	r2, r3
 80049e0:	68fb      	ldr	r3, [r7, #12]
 80049e2:	84da      	strh	r2, [r3, #38]	; 0x26
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80049e8:	b29b      	uxth	r3, r3
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	d1cf      	bne.n	800498e <HAL_UART_Transmit+0x76>
 80049ee:	683b      	ldr	r3, [r7, #0]
 80049f0:	9300      	str	r3, [sp, #0]
 80049f2:	697b      	ldr	r3, [r7, #20]
 80049f4:	2200      	movs	r2, #0
 80049f6:	2140      	movs	r1, #64	; 0x40
 80049f8:	68f8      	ldr	r0, [r7, #12]
 80049fa:	f000 fac9 	bl	8004f90 <UART_WaitOnFlagUntilTimeout>
 80049fe:	4603      	mov	r3, r0
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	d001      	beq.n	8004a08 <HAL_UART_Transmit+0xf0>
 8004a04:	2303      	movs	r3, #3
 8004a06:	e006      	b.n	8004a16 <HAL_UART_Transmit+0xfe>
 8004a08:	68fb      	ldr	r3, [r7, #12]
 8004a0a:	2220      	movs	r2, #32
 8004a0c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004a10:	2300      	movs	r3, #0
 8004a12:	e000      	b.n	8004a16 <HAL_UART_Transmit+0xfe>
 8004a14:	2302      	movs	r3, #2
 8004a16:	4618      	mov	r0, r3
 8004a18:	3720      	adds	r7, #32
 8004a1a:	46bd      	mov	sp, r7
 8004a1c:	bd80      	pop	{r7, pc}
	...

08004a20 <HAL_UART_IRQHandler>:
 8004a20:	b580      	push	{r7, lr}
 8004a22:	b0ba      	sub	sp, #232	; 0xe8
 8004a24:	af00      	add	r7, sp, #0
 8004a26:	6078      	str	r0, [r7, #4]
 8004a28:	687b      	ldr	r3, [r7, #4]
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	68db      	ldr	r3, [r3, #12]
 8004a38:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	695b      	ldr	r3, [r3, #20]
 8004a42:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8004a46:	2300      	movs	r3, #0
 8004a48:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8004a4c:	2300      	movs	r3, #0
 8004a4e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8004a52:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004a56:	f003 030f 	and.w	r3, r3, #15
 8004a5a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8004a5e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8004a62:	2b00      	cmp	r3, #0
 8004a64:	d10f      	bne.n	8004a86 <HAL_UART_IRQHandler+0x66>
 8004a66:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004a6a:	f003 0320 	and.w	r3, r3, #32
 8004a6e:	2b00      	cmp	r3, #0
 8004a70:	d009      	beq.n	8004a86 <HAL_UART_IRQHandler+0x66>
 8004a72:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004a76:	f003 0320 	and.w	r3, r3, #32
 8004a7a:	2b00      	cmp	r3, #0
 8004a7c:	d003      	beq.n	8004a86 <HAL_UART_IRQHandler+0x66>
 8004a7e:	6878      	ldr	r0, [r7, #4]
 8004a80:	f000 fbd1 	bl	8005226 <UART_Receive_IT>
 8004a84:	e25b      	b.n	8004f3e <HAL_UART_IRQHandler+0x51e>
 8004a86:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	f000 80de 	beq.w	8004c4c <HAL_UART_IRQHandler+0x22c>
 8004a90:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004a94:	f003 0301 	and.w	r3, r3, #1
 8004a98:	2b00      	cmp	r3, #0
 8004a9a:	d106      	bne.n	8004aaa <HAL_UART_IRQHandler+0x8a>
 8004a9c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004aa0:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004aa4:	2b00      	cmp	r3, #0
 8004aa6:	f000 80d1 	beq.w	8004c4c <HAL_UART_IRQHandler+0x22c>
 8004aaa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004aae:	f003 0301 	and.w	r3, r3, #1
 8004ab2:	2b00      	cmp	r3, #0
 8004ab4:	d00b      	beq.n	8004ace <HAL_UART_IRQHandler+0xae>
 8004ab6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004aba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004abe:	2b00      	cmp	r3, #0
 8004ac0:	d005      	beq.n	8004ace <HAL_UART_IRQHandler+0xae>
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004ac6:	f043 0201 	orr.w	r2, r3, #1
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	645a      	str	r2, [r3, #68]	; 0x44
 8004ace:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004ad2:	f003 0304 	and.w	r3, r3, #4
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d00b      	beq.n	8004af2 <HAL_UART_IRQHandler+0xd2>
 8004ada:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004ade:	f003 0301 	and.w	r3, r3, #1
 8004ae2:	2b00      	cmp	r3, #0
 8004ae4:	d005      	beq.n	8004af2 <HAL_UART_IRQHandler+0xd2>
 8004ae6:	687b      	ldr	r3, [r7, #4]
 8004ae8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004aea:	f043 0202 	orr.w	r2, r3, #2
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	645a      	str	r2, [r3, #68]	; 0x44
 8004af2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004af6:	f003 0302 	and.w	r3, r3, #2
 8004afa:	2b00      	cmp	r3, #0
 8004afc:	d00b      	beq.n	8004b16 <HAL_UART_IRQHandler+0xf6>
 8004afe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004b02:	f003 0301 	and.w	r3, r3, #1
 8004b06:	2b00      	cmp	r3, #0
 8004b08:	d005      	beq.n	8004b16 <HAL_UART_IRQHandler+0xf6>
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b0e:	f043 0204 	orr.w	r2, r3, #4
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	645a      	str	r2, [r3, #68]	; 0x44
 8004b16:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004b1a:	f003 0308 	and.w	r3, r3, #8
 8004b1e:	2b00      	cmp	r3, #0
 8004b20:	d011      	beq.n	8004b46 <HAL_UART_IRQHandler+0x126>
 8004b22:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004b26:	f003 0320 	and.w	r3, r3, #32
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d105      	bne.n	8004b3a <HAL_UART_IRQHandler+0x11a>
 8004b2e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8004b32:	f003 0301 	and.w	r3, r3, #1
 8004b36:	2b00      	cmp	r3, #0
 8004b38:	d005      	beq.n	8004b46 <HAL_UART_IRQHandler+0x126>
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b3e:	f043 0208 	orr.w	r2, r3, #8
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	645a      	str	r2, [r3, #68]	; 0x44
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	f000 81f2 	beq.w	8004f34 <HAL_UART_IRQHandler+0x514>
 8004b50:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004b54:	f003 0320 	and.w	r3, r3, #32
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d008      	beq.n	8004b6e <HAL_UART_IRQHandler+0x14e>
 8004b5c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004b60:	f003 0320 	and.w	r3, r3, #32
 8004b64:	2b00      	cmp	r3, #0
 8004b66:	d002      	beq.n	8004b6e <HAL_UART_IRQHandler+0x14e>
 8004b68:	6878      	ldr	r0, [r7, #4]
 8004b6a:	f000 fb5c 	bl	8005226 <UART_Receive_IT>
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	681b      	ldr	r3, [r3, #0]
 8004b72:	695b      	ldr	r3, [r3, #20]
 8004b74:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004b78:	2b00      	cmp	r3, #0
 8004b7a:	bf14      	ite	ne
 8004b7c:	2301      	movne	r3, #1
 8004b7e:	2300      	moveq	r3, #0
 8004b80:	b2db      	uxtb	r3, r3
 8004b82:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8004b86:	687b      	ldr	r3, [r7, #4]
 8004b88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b8a:	f003 0308 	and.w	r3, r3, #8
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	d103      	bne.n	8004b9a <HAL_UART_IRQHandler+0x17a>
 8004b92:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	d04f      	beq.n	8004c3a <HAL_UART_IRQHandler+0x21a>
 8004b9a:	6878      	ldr	r0, [r7, #4]
 8004b9c:	f000 fa66 	bl	800506c <UART_EndRxTransfer>
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	695b      	ldr	r3, [r3, #20]
 8004ba6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004baa:	2b00      	cmp	r3, #0
 8004bac:	d041      	beq.n	8004c32 <HAL_UART_IRQHandler+0x212>
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	681b      	ldr	r3, [r3, #0]
 8004bb2:	3314      	adds	r3, #20
 8004bb4:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8004bb8:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8004bbc:	e853 3f00 	ldrex	r3, [r3]
 8004bc0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004bc4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8004bc8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004bcc:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	3314      	adds	r3, #20
 8004bd6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8004bda:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8004bde:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8004be2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8004be6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8004bea:	e841 2300 	strex	r3, r2, [r1]
 8004bee:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8004bf2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8004bf6:	2b00      	cmp	r3, #0
 8004bf8:	d1d9      	bne.n	8004bae <HAL_UART_IRQHandler+0x18e>
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	d013      	beq.n	8004c2a <HAL_UART_IRQHandler+0x20a>
 8004c02:	687b      	ldr	r3, [r7, #4]
 8004c04:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004c06:	4a7e      	ldr	r2, [pc, #504]	; (8004e00 <HAL_UART_IRQHandler+0x3e0>)
 8004c08:	635a      	str	r2, [r3, #52]	; 0x34
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004c0e:	4618      	mov	r0, r3
 8004c10:	f7fe f85e 	bl	8002cd0 <HAL_DMA_Abort_IT>
 8004c14:	4603      	mov	r3, r0
 8004c16:	2b00      	cmp	r3, #0
 8004c18:	d016      	beq.n	8004c48 <HAL_UART_IRQHandler+0x228>
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004c1e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004c20:	687a      	ldr	r2, [r7, #4]
 8004c22:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8004c24:	4610      	mov	r0, r2
 8004c26:	4798      	blx	r3
 8004c28:	e00e      	b.n	8004c48 <HAL_UART_IRQHandler+0x228>
 8004c2a:	6878      	ldr	r0, [r7, #4]
 8004c2c:	f000 f99c 	bl	8004f68 <HAL_UART_ErrorCallback>
 8004c30:	e00a      	b.n	8004c48 <HAL_UART_IRQHandler+0x228>
 8004c32:	6878      	ldr	r0, [r7, #4]
 8004c34:	f000 f998 	bl	8004f68 <HAL_UART_ErrorCallback>
 8004c38:	e006      	b.n	8004c48 <HAL_UART_IRQHandler+0x228>
 8004c3a:	6878      	ldr	r0, [r7, #4]
 8004c3c:	f000 f994 	bl	8004f68 <HAL_UART_ErrorCallback>
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	2200      	movs	r2, #0
 8004c44:	645a      	str	r2, [r3, #68]	; 0x44
 8004c46:	e175      	b.n	8004f34 <HAL_UART_IRQHandler+0x514>
 8004c48:	bf00      	nop
 8004c4a:	e173      	b.n	8004f34 <HAL_UART_IRQHandler+0x514>
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c50:	2b01      	cmp	r3, #1
 8004c52:	f040 814f 	bne.w	8004ef4 <HAL_UART_IRQHandler+0x4d4>
 8004c56:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004c5a:	f003 0310 	and.w	r3, r3, #16
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	f000 8148 	beq.w	8004ef4 <HAL_UART_IRQHandler+0x4d4>
 8004c64:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004c68:	f003 0310 	and.w	r3, r3, #16
 8004c6c:	2b00      	cmp	r3, #0
 8004c6e:	f000 8141 	beq.w	8004ef4 <HAL_UART_IRQHandler+0x4d4>
 8004c72:	2300      	movs	r3, #0
 8004c74:	60bb      	str	r3, [r7, #8]
 8004c76:	687b      	ldr	r3, [r7, #4]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	681b      	ldr	r3, [r3, #0]
 8004c7c:	60bb      	str	r3, [r7, #8]
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	685b      	ldr	r3, [r3, #4]
 8004c84:	60bb      	str	r3, [r7, #8]
 8004c86:	68bb      	ldr	r3, [r7, #8]
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	695b      	ldr	r3, [r3, #20]
 8004c8e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004c92:	2b00      	cmp	r3, #0
 8004c94:	f000 80b6 	beq.w	8004e04 <HAL_UART_IRQHandler+0x3e4>
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	685b      	ldr	r3, [r3, #4]
 8004ca0:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8004ca4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8004ca8:	2b00      	cmp	r3, #0
 8004caa:	f000 8145 	beq.w	8004f38 <HAL_UART_IRQHandler+0x518>
 8004cae:	687b      	ldr	r3, [r7, #4]
 8004cb0:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004cb2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8004cb6:	429a      	cmp	r2, r3
 8004cb8:	f080 813e 	bcs.w	8004f38 <HAL_UART_IRQHandler+0x518>
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8004cc2:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004cc8:	699b      	ldr	r3, [r3, #24]
 8004cca:	2b20      	cmp	r3, #32
 8004ccc:	f000 8088 	beq.w	8004de0 <HAL_UART_IRQHandler+0x3c0>
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	681b      	ldr	r3, [r3, #0]
 8004cd4:	330c      	adds	r3, #12
 8004cd6:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8004cda:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8004cde:	e853 3f00 	ldrex	r3, [r3]
 8004ce2:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8004ce6:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004cea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004cee:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	330c      	adds	r3, #12
 8004cf8:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8004cfc:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8004d00:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8004d04:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8004d08:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8004d0c:	e841 2300 	strex	r3, r2, [r1]
 8004d10:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8004d14:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8004d18:	2b00      	cmp	r3, #0
 8004d1a:	d1d9      	bne.n	8004cd0 <HAL_UART_IRQHandler+0x2b0>
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	3314      	adds	r3, #20
 8004d22:	677b      	str	r3, [r7, #116]	; 0x74
 8004d24:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8004d26:	e853 3f00 	ldrex	r3, [r3]
 8004d2a:	673b      	str	r3, [r7, #112]	; 0x70
 8004d2c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004d2e:	f023 0301 	bic.w	r3, r3, #1
 8004d32:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8004d36:	687b      	ldr	r3, [r7, #4]
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	3314      	adds	r3, #20
 8004d3c:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8004d40:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8004d44:	67fb      	str	r3, [r7, #124]	; 0x7c
 8004d46:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8004d48:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8004d4c:	e841 2300 	strex	r3, r2, [r1]
 8004d50:	67bb      	str	r3, [r7, #120]	; 0x78
 8004d52:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8004d54:	2b00      	cmp	r3, #0
 8004d56:	d1e1      	bne.n	8004d1c <HAL_UART_IRQHandler+0x2fc>
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	3314      	adds	r3, #20
 8004d5e:	663b      	str	r3, [r7, #96]	; 0x60
 8004d60:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8004d62:	e853 3f00 	ldrex	r3, [r3]
 8004d66:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004d68:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8004d6a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004d6e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	3314      	adds	r3, #20
 8004d78:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8004d7c:	66fa      	str	r2, [r7, #108]	; 0x6c
 8004d7e:	66bb      	str	r3, [r7, #104]	; 0x68
 8004d80:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8004d82:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8004d84:	e841 2300 	strex	r3, r2, [r1]
 8004d88:	667b      	str	r3, [r7, #100]	; 0x64
 8004d8a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8004d8c:	2b00      	cmp	r3, #0
 8004d8e:	d1e3      	bne.n	8004d58 <HAL_UART_IRQHandler+0x338>
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	2220      	movs	r2, #32
 8004d94:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	2200      	movs	r2, #0
 8004d9c:	631a      	str	r2, [r3, #48]	; 0x30
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	330c      	adds	r3, #12
 8004da4:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004da6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004da8:	e853 3f00 	ldrex	r3, [r3]
 8004dac:	64bb      	str	r3, [r7, #72]	; 0x48
 8004dae:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004db0:	f023 0310 	bic.w	r3, r3, #16
 8004db4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	330c      	adds	r3, #12
 8004dbe:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8004dc2:	65ba      	str	r2, [r7, #88]	; 0x58
 8004dc4:	657b      	str	r3, [r7, #84]	; 0x54
 8004dc6:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8004dc8:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8004dca:	e841 2300 	strex	r3, r2, [r1]
 8004dce:	653b      	str	r3, [r7, #80]	; 0x50
 8004dd0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	d1e3      	bne.n	8004d9e <HAL_UART_IRQHandler+0x37e>
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004dda:	4618      	mov	r0, r3
 8004ddc:	f7fd ff3d 	bl	8002c5a <HAL_DMA_Abort>
 8004de0:	687b      	ldr	r3, [r7, #4]
 8004de2:	2202      	movs	r2, #2
 8004de4:	635a      	str	r2, [r3, #52]	; 0x34
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004dee:	b29b      	uxth	r3, r3
 8004df0:	1ad3      	subs	r3, r2, r3
 8004df2:	b29b      	uxth	r3, r3
 8004df4:	4619      	mov	r1, r3
 8004df6:	6878      	ldr	r0, [r7, #4]
 8004df8:	f000 f8bf 	bl	8004f7a <HAL_UARTEx_RxEventCallback>
 8004dfc:	e09c      	b.n	8004f38 <HAL_UART_IRQHandler+0x518>
 8004dfe:	bf00      	nop
 8004e00:	08005131 	.word	0x08005131
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004e0c:	b29b      	uxth	r3, r3
 8004e0e:	1ad3      	subs	r3, r2, r3
 8004e10:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004e18:	b29b      	uxth	r3, r3
 8004e1a:	2b00      	cmp	r3, #0
 8004e1c:	f000 808e 	beq.w	8004f3c <HAL_UART_IRQHandler+0x51c>
 8004e20:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	f000 8089 	beq.w	8004f3c <HAL_UART_IRQHandler+0x51c>
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	330c      	adds	r3, #12
 8004e30:	63bb      	str	r3, [r7, #56]	; 0x38
 8004e32:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004e34:	e853 3f00 	ldrex	r3, [r3]
 8004e38:	637b      	str	r3, [r7, #52]	; 0x34
 8004e3a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004e3c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8004e40:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	330c      	adds	r3, #12
 8004e4a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8004e4e:	647a      	str	r2, [r7, #68]	; 0x44
 8004e50:	643b      	str	r3, [r7, #64]	; 0x40
 8004e52:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8004e54:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8004e56:	e841 2300 	strex	r3, r2, [r1]
 8004e5a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004e5c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004e5e:	2b00      	cmp	r3, #0
 8004e60:	d1e3      	bne.n	8004e2a <HAL_UART_IRQHandler+0x40a>
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	681b      	ldr	r3, [r3, #0]
 8004e66:	3314      	adds	r3, #20
 8004e68:	627b      	str	r3, [r7, #36]	; 0x24
 8004e6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e6c:	e853 3f00 	ldrex	r3, [r3]
 8004e70:	623b      	str	r3, [r7, #32]
 8004e72:	6a3b      	ldr	r3, [r7, #32]
 8004e74:	f023 0301 	bic.w	r3, r3, #1
 8004e78:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	3314      	adds	r3, #20
 8004e82:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8004e86:	633a      	str	r2, [r7, #48]	; 0x30
 8004e88:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004e8a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004e8c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004e8e:	e841 2300 	strex	r3, r2, [r1]
 8004e92:	62bb      	str	r3, [r7, #40]	; 0x28
 8004e94:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d1e3      	bne.n	8004e62 <HAL_UART_IRQHandler+0x442>
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	2220      	movs	r2, #32
 8004e9e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	2200      	movs	r2, #0
 8004ea6:	631a      	str	r2, [r3, #48]	; 0x30
 8004ea8:	687b      	ldr	r3, [r7, #4]
 8004eaa:	681b      	ldr	r3, [r3, #0]
 8004eac:	330c      	adds	r3, #12
 8004eae:	613b      	str	r3, [r7, #16]
 8004eb0:	693b      	ldr	r3, [r7, #16]
 8004eb2:	e853 3f00 	ldrex	r3, [r3]
 8004eb6:	60fb      	str	r3, [r7, #12]
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	f023 0310 	bic.w	r3, r3, #16
 8004ebe:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	330c      	adds	r3, #12
 8004ec8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8004ecc:	61fa      	str	r2, [r7, #28]
 8004ece:	61bb      	str	r3, [r7, #24]
 8004ed0:	69b9      	ldr	r1, [r7, #24]
 8004ed2:	69fa      	ldr	r2, [r7, #28]
 8004ed4:	e841 2300 	strex	r3, r2, [r1]
 8004ed8:	617b      	str	r3, [r7, #20]
 8004eda:	697b      	ldr	r3, [r7, #20]
 8004edc:	2b00      	cmp	r3, #0
 8004ede:	d1e3      	bne.n	8004ea8 <HAL_UART_IRQHandler+0x488>
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	2202      	movs	r2, #2
 8004ee4:	635a      	str	r2, [r3, #52]	; 0x34
 8004ee6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8004eea:	4619      	mov	r1, r3
 8004eec:	6878      	ldr	r0, [r7, #4]
 8004eee:	f000 f844 	bl	8004f7a <HAL_UARTEx_RxEventCallback>
 8004ef2:	e023      	b.n	8004f3c <HAL_UART_IRQHandler+0x51c>
 8004ef4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004ef8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004efc:	2b00      	cmp	r3, #0
 8004efe:	d009      	beq.n	8004f14 <HAL_UART_IRQHandler+0x4f4>
 8004f00:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004f04:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004f08:	2b00      	cmp	r3, #0
 8004f0a:	d003      	beq.n	8004f14 <HAL_UART_IRQHandler+0x4f4>
 8004f0c:	6878      	ldr	r0, [r7, #4]
 8004f0e:	f000 f923 	bl	8005158 <UART_Transmit_IT>
 8004f12:	e014      	b.n	8004f3e <HAL_UART_IRQHandler+0x51e>
 8004f14:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004f18:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f1c:	2b00      	cmp	r3, #0
 8004f1e:	d00e      	beq.n	8004f3e <HAL_UART_IRQHandler+0x51e>
 8004f20:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004f24:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f28:	2b00      	cmp	r3, #0
 8004f2a:	d008      	beq.n	8004f3e <HAL_UART_IRQHandler+0x51e>
 8004f2c:	6878      	ldr	r0, [r7, #4]
 8004f2e:	f000 f962 	bl	80051f6 <UART_EndTransmit_IT>
 8004f32:	e004      	b.n	8004f3e <HAL_UART_IRQHandler+0x51e>
 8004f34:	bf00      	nop
 8004f36:	e002      	b.n	8004f3e <HAL_UART_IRQHandler+0x51e>
 8004f38:	bf00      	nop
 8004f3a:	e000      	b.n	8004f3e <HAL_UART_IRQHandler+0x51e>
 8004f3c:	bf00      	nop
 8004f3e:	37e8      	adds	r7, #232	; 0xe8
 8004f40:	46bd      	mov	sp, r7
 8004f42:	bd80      	pop	{r7, pc}

08004f44 <HAL_UART_TxCpltCallback>:
 8004f44:	b480      	push	{r7}
 8004f46:	b083      	sub	sp, #12
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	6078      	str	r0, [r7, #4]
 8004f4c:	bf00      	nop
 8004f4e:	370c      	adds	r7, #12
 8004f50:	46bd      	mov	sp, r7
 8004f52:	bc80      	pop	{r7}
 8004f54:	4770      	bx	lr

08004f56 <HAL_UART_RxCpltCallback>:
 8004f56:	b480      	push	{r7}
 8004f58:	b083      	sub	sp, #12
 8004f5a:	af00      	add	r7, sp, #0
 8004f5c:	6078      	str	r0, [r7, #4]
 8004f5e:	bf00      	nop
 8004f60:	370c      	adds	r7, #12
 8004f62:	46bd      	mov	sp, r7
 8004f64:	bc80      	pop	{r7}
 8004f66:	4770      	bx	lr

08004f68 <HAL_UART_ErrorCallback>:
 8004f68:	b480      	push	{r7}
 8004f6a:	b083      	sub	sp, #12
 8004f6c:	af00      	add	r7, sp, #0
 8004f6e:	6078      	str	r0, [r7, #4]
 8004f70:	bf00      	nop
 8004f72:	370c      	adds	r7, #12
 8004f74:	46bd      	mov	sp, r7
 8004f76:	bc80      	pop	{r7}
 8004f78:	4770      	bx	lr

08004f7a <HAL_UARTEx_RxEventCallback>:
 8004f7a:	b480      	push	{r7}
 8004f7c:	b083      	sub	sp, #12
 8004f7e:	af00      	add	r7, sp, #0
 8004f80:	6078      	str	r0, [r7, #4]
 8004f82:	460b      	mov	r3, r1
 8004f84:	807b      	strh	r3, [r7, #2]
 8004f86:	bf00      	nop
 8004f88:	370c      	adds	r7, #12
 8004f8a:	46bd      	mov	sp, r7
 8004f8c:	bc80      	pop	{r7}
 8004f8e:	4770      	bx	lr

08004f90 <UART_WaitOnFlagUntilTimeout>:
 8004f90:	b580      	push	{r7, lr}
 8004f92:	b090      	sub	sp, #64	; 0x40
 8004f94:	af00      	add	r7, sp, #0
 8004f96:	60f8      	str	r0, [r7, #12]
 8004f98:	60b9      	str	r1, [r7, #8]
 8004f9a:	603b      	str	r3, [r7, #0]
 8004f9c:	4613      	mov	r3, r2
 8004f9e:	71fb      	strb	r3, [r7, #7]
 8004fa0:	e050      	b.n	8005044 <UART_WaitOnFlagUntilTimeout+0xb4>
 8004fa2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004fa4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004fa8:	d04c      	beq.n	8005044 <UART_WaitOnFlagUntilTimeout+0xb4>
 8004faa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004fac:	2b00      	cmp	r3, #0
 8004fae:	d007      	beq.n	8004fc0 <UART_WaitOnFlagUntilTimeout+0x30>
 8004fb0:	f7fd fd3c 	bl	8002a2c <HAL_GetTick>
 8004fb4:	4602      	mov	r2, r0
 8004fb6:	683b      	ldr	r3, [r7, #0]
 8004fb8:	1ad3      	subs	r3, r2, r3
 8004fba:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8004fbc:	429a      	cmp	r2, r3
 8004fbe:	d241      	bcs.n	8005044 <UART_WaitOnFlagUntilTimeout+0xb4>
 8004fc0:	68fb      	ldr	r3, [r7, #12]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	330c      	adds	r3, #12
 8004fc6:	62bb      	str	r3, [r7, #40]	; 0x28
 8004fc8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004fca:	e853 3f00 	ldrex	r3, [r3]
 8004fce:	627b      	str	r3, [r7, #36]	; 0x24
 8004fd0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fd2:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8004fd6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004fd8:	68fb      	ldr	r3, [r7, #12]
 8004fda:	681b      	ldr	r3, [r3, #0]
 8004fdc:	330c      	adds	r3, #12
 8004fde:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004fe0:	637a      	str	r2, [r7, #52]	; 0x34
 8004fe2:	633b      	str	r3, [r7, #48]	; 0x30
 8004fe4:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8004fe6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8004fe8:	e841 2300 	strex	r3, r2, [r1]
 8004fec:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004fee:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	d1e5      	bne.n	8004fc0 <UART_WaitOnFlagUntilTimeout+0x30>
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	3314      	adds	r3, #20
 8004ffa:	617b      	str	r3, [r7, #20]
 8004ffc:	697b      	ldr	r3, [r7, #20]
 8004ffe:	e853 3f00 	ldrex	r3, [r3]
 8005002:	613b      	str	r3, [r7, #16]
 8005004:	693b      	ldr	r3, [r7, #16]
 8005006:	f023 0301 	bic.w	r3, r3, #1
 800500a:	63bb      	str	r3, [r7, #56]	; 0x38
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	3314      	adds	r3, #20
 8005012:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8005014:	623a      	str	r2, [r7, #32]
 8005016:	61fb      	str	r3, [r7, #28]
 8005018:	69f9      	ldr	r1, [r7, #28]
 800501a:	6a3a      	ldr	r2, [r7, #32]
 800501c:	e841 2300 	strex	r3, r2, [r1]
 8005020:	61bb      	str	r3, [r7, #24]
 8005022:	69bb      	ldr	r3, [r7, #24]
 8005024:	2b00      	cmp	r3, #0
 8005026:	d1e5      	bne.n	8004ff4 <UART_WaitOnFlagUntilTimeout+0x64>
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	2220      	movs	r2, #32
 800502c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	2220      	movs	r2, #32
 8005034:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005038:	68fb      	ldr	r3, [r7, #12]
 800503a:	2200      	movs	r2, #0
 800503c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005040:	2303      	movs	r3, #3
 8005042:	e00f      	b.n	8005064 <UART_WaitOnFlagUntilTimeout+0xd4>
 8005044:	68fb      	ldr	r3, [r7, #12]
 8005046:	681b      	ldr	r3, [r3, #0]
 8005048:	681a      	ldr	r2, [r3, #0]
 800504a:	68bb      	ldr	r3, [r7, #8]
 800504c:	4013      	ands	r3, r2
 800504e:	68ba      	ldr	r2, [r7, #8]
 8005050:	429a      	cmp	r2, r3
 8005052:	bf0c      	ite	eq
 8005054:	2301      	moveq	r3, #1
 8005056:	2300      	movne	r3, #0
 8005058:	b2db      	uxtb	r3, r3
 800505a:	461a      	mov	r2, r3
 800505c:	79fb      	ldrb	r3, [r7, #7]
 800505e:	429a      	cmp	r2, r3
 8005060:	d09f      	beq.n	8004fa2 <UART_WaitOnFlagUntilTimeout+0x12>
 8005062:	2300      	movs	r3, #0
 8005064:	4618      	mov	r0, r3
 8005066:	3740      	adds	r7, #64	; 0x40
 8005068:	46bd      	mov	sp, r7
 800506a:	bd80      	pop	{r7, pc}

0800506c <UART_EndRxTransfer>:
 800506c:	b480      	push	{r7}
 800506e:	b095      	sub	sp, #84	; 0x54
 8005070:	af00      	add	r7, sp, #0
 8005072:	6078      	str	r0, [r7, #4]
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	330c      	adds	r3, #12
 800507a:	637b      	str	r3, [r7, #52]	; 0x34
 800507c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800507e:	e853 3f00 	ldrex	r3, [r3]
 8005082:	633b      	str	r3, [r7, #48]	; 0x30
 8005084:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005086:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800508a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	681b      	ldr	r3, [r3, #0]
 8005090:	330c      	adds	r3, #12
 8005092:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8005094:	643a      	str	r2, [r7, #64]	; 0x40
 8005096:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005098:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800509a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800509c:	e841 2300 	strex	r3, r2, [r1]
 80050a0:	63bb      	str	r3, [r7, #56]	; 0x38
 80050a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80050a4:	2b00      	cmp	r3, #0
 80050a6:	d1e5      	bne.n	8005074 <UART_EndRxTransfer+0x8>
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	681b      	ldr	r3, [r3, #0]
 80050ac:	3314      	adds	r3, #20
 80050ae:	623b      	str	r3, [r7, #32]
 80050b0:	6a3b      	ldr	r3, [r7, #32]
 80050b2:	e853 3f00 	ldrex	r3, [r3]
 80050b6:	61fb      	str	r3, [r7, #28]
 80050b8:	69fb      	ldr	r3, [r7, #28]
 80050ba:	f023 0301 	bic.w	r3, r3, #1
 80050be:	64bb      	str	r3, [r7, #72]	; 0x48
 80050c0:	687b      	ldr	r3, [r7, #4]
 80050c2:	681b      	ldr	r3, [r3, #0]
 80050c4:	3314      	adds	r3, #20
 80050c6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80050c8:	62fa      	str	r2, [r7, #44]	; 0x2c
 80050ca:	62bb      	str	r3, [r7, #40]	; 0x28
 80050cc:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80050ce:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80050d0:	e841 2300 	strex	r3, r2, [r1]
 80050d4:	627b      	str	r3, [r7, #36]	; 0x24
 80050d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80050d8:	2b00      	cmp	r3, #0
 80050da:	d1e5      	bne.n	80050a8 <UART_EndRxTransfer+0x3c>
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050e0:	2b01      	cmp	r3, #1
 80050e2:	d119      	bne.n	8005118 <UART_EndRxTransfer+0xac>
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	681b      	ldr	r3, [r3, #0]
 80050e8:	330c      	adds	r3, #12
 80050ea:	60fb      	str	r3, [r7, #12]
 80050ec:	68fb      	ldr	r3, [r7, #12]
 80050ee:	e853 3f00 	ldrex	r3, [r3]
 80050f2:	60bb      	str	r3, [r7, #8]
 80050f4:	68bb      	ldr	r3, [r7, #8]
 80050f6:	f023 0310 	bic.w	r3, r3, #16
 80050fa:	647b      	str	r3, [r7, #68]	; 0x44
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	330c      	adds	r3, #12
 8005102:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8005104:	61ba      	str	r2, [r7, #24]
 8005106:	617b      	str	r3, [r7, #20]
 8005108:	6979      	ldr	r1, [r7, #20]
 800510a:	69ba      	ldr	r2, [r7, #24]
 800510c:	e841 2300 	strex	r3, r2, [r1]
 8005110:	613b      	str	r3, [r7, #16]
 8005112:	693b      	ldr	r3, [r7, #16]
 8005114:	2b00      	cmp	r3, #0
 8005116:	d1e5      	bne.n	80050e4 <UART_EndRxTransfer+0x78>
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	2220      	movs	r2, #32
 800511c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	2200      	movs	r2, #0
 8005124:	631a      	str	r2, [r3, #48]	; 0x30
 8005126:	bf00      	nop
 8005128:	3754      	adds	r7, #84	; 0x54
 800512a:	46bd      	mov	sp, r7
 800512c:	bc80      	pop	{r7}
 800512e:	4770      	bx	lr

08005130 <UART_DMAAbortOnError>:
 8005130:	b580      	push	{r7, lr}
 8005132:	b084      	sub	sp, #16
 8005134:	af00      	add	r7, sp, #0
 8005136:	6078      	str	r0, [r7, #4]
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800513c:	60fb      	str	r3, [r7, #12]
 800513e:	68fb      	ldr	r3, [r7, #12]
 8005140:	2200      	movs	r2, #0
 8005142:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005144:	68fb      	ldr	r3, [r7, #12]
 8005146:	2200      	movs	r2, #0
 8005148:	84da      	strh	r2, [r3, #38]	; 0x26
 800514a:	68f8      	ldr	r0, [r7, #12]
 800514c:	f7ff ff0c 	bl	8004f68 <HAL_UART_ErrorCallback>
 8005150:	bf00      	nop
 8005152:	3710      	adds	r7, #16
 8005154:	46bd      	mov	sp, r7
 8005156:	bd80      	pop	{r7, pc}

08005158 <UART_Transmit_IT>:
 8005158:	b480      	push	{r7}
 800515a:	b085      	sub	sp, #20
 800515c:	af00      	add	r7, sp, #0
 800515e:	6078      	str	r0, [r7, #4]
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005166:	b2db      	uxtb	r3, r3
 8005168:	2b21      	cmp	r3, #33	; 0x21
 800516a:	d13e      	bne.n	80051ea <UART_Transmit_IT+0x92>
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	689b      	ldr	r3, [r3, #8]
 8005170:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005174:	d114      	bne.n	80051a0 <UART_Transmit_IT+0x48>
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	691b      	ldr	r3, [r3, #16]
 800517a:	2b00      	cmp	r3, #0
 800517c:	d110      	bne.n	80051a0 <UART_Transmit_IT+0x48>
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	6a1b      	ldr	r3, [r3, #32]
 8005182:	60fb      	str	r3, [r7, #12]
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	881b      	ldrh	r3, [r3, #0]
 8005188:	461a      	mov	r2, r3
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005192:	605a      	str	r2, [r3, #4]
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	6a1b      	ldr	r3, [r3, #32]
 8005198:	1c9a      	adds	r2, r3, #2
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	621a      	str	r2, [r3, #32]
 800519e:	e008      	b.n	80051b2 <UART_Transmit_IT+0x5a>
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	6a1b      	ldr	r3, [r3, #32]
 80051a4:	1c59      	adds	r1, r3, #1
 80051a6:	687a      	ldr	r2, [r7, #4]
 80051a8:	6211      	str	r1, [r2, #32]
 80051aa:	781a      	ldrb	r2, [r3, #0]
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	681b      	ldr	r3, [r3, #0]
 80051b0:	605a      	str	r2, [r3, #4]
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80051b6:	b29b      	uxth	r3, r3
 80051b8:	3b01      	subs	r3, #1
 80051ba:	b29b      	uxth	r3, r3
 80051bc:	687a      	ldr	r2, [r7, #4]
 80051be:	4619      	mov	r1, r3
 80051c0:	84d1      	strh	r1, [r2, #38]	; 0x26
 80051c2:	2b00      	cmp	r3, #0
 80051c4:	d10f      	bne.n	80051e6 <UART_Transmit_IT+0x8e>
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	68da      	ldr	r2, [r3, #12]
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	681b      	ldr	r3, [r3, #0]
 80051d0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80051d4:	60da      	str	r2, [r3, #12]
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	68da      	ldr	r2, [r3, #12]
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80051e4:	60da      	str	r2, [r3, #12]
 80051e6:	2300      	movs	r3, #0
 80051e8:	e000      	b.n	80051ec <UART_Transmit_IT+0x94>
 80051ea:	2302      	movs	r3, #2
 80051ec:	4618      	mov	r0, r3
 80051ee:	3714      	adds	r7, #20
 80051f0:	46bd      	mov	sp, r7
 80051f2:	bc80      	pop	{r7}
 80051f4:	4770      	bx	lr

080051f6 <UART_EndTransmit_IT>:
 80051f6:	b580      	push	{r7, lr}
 80051f8:	b082      	sub	sp, #8
 80051fa:	af00      	add	r7, sp, #0
 80051fc:	6078      	str	r0, [r7, #4]
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	68da      	ldr	r2, [r3, #12]
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	681b      	ldr	r3, [r3, #0]
 8005208:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800520c:	60da      	str	r2, [r3, #12]
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	2220      	movs	r2, #32
 8005212:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005216:	6878      	ldr	r0, [r7, #4]
 8005218:	f7ff fe94 	bl	8004f44 <HAL_UART_TxCpltCallback>
 800521c:	2300      	movs	r3, #0
 800521e:	4618      	mov	r0, r3
 8005220:	3708      	adds	r7, #8
 8005222:	46bd      	mov	sp, r7
 8005224:	bd80      	pop	{r7, pc}

08005226 <UART_Receive_IT>:
 8005226:	b580      	push	{r7, lr}
 8005228:	b08c      	sub	sp, #48	; 0x30
 800522a:	af00      	add	r7, sp, #0
 800522c:	6078      	str	r0, [r7, #4]
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8005234:	b2db      	uxtb	r3, r3
 8005236:	2b22      	cmp	r3, #34	; 0x22
 8005238:	f040 80ae 	bne.w	8005398 <UART_Receive_IT+0x172>
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	689b      	ldr	r3, [r3, #8]
 8005240:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005244:	d117      	bne.n	8005276 <UART_Receive_IT+0x50>
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	691b      	ldr	r3, [r3, #16]
 800524a:	2b00      	cmp	r3, #0
 800524c:	d113      	bne.n	8005276 <UART_Receive_IT+0x50>
 800524e:	2300      	movs	r3, #0
 8005250:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005256:	62bb      	str	r3, [r7, #40]	; 0x28
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	685b      	ldr	r3, [r3, #4]
 800525e:	b29b      	uxth	r3, r3
 8005260:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005264:	b29a      	uxth	r2, r3
 8005266:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005268:	801a      	strh	r2, [r3, #0]
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800526e:	1c9a      	adds	r2, r3, #2
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	629a      	str	r2, [r3, #40]	; 0x28
 8005274:	e026      	b.n	80052c4 <UART_Receive_IT+0x9e>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800527a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800527c:	2300      	movs	r3, #0
 800527e:	62bb      	str	r3, [r7, #40]	; 0x28
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	689b      	ldr	r3, [r3, #8]
 8005284:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005288:	d007      	beq.n	800529a <UART_Receive_IT+0x74>
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	689b      	ldr	r3, [r3, #8]
 800528e:	2b00      	cmp	r3, #0
 8005290:	d10a      	bne.n	80052a8 <UART_Receive_IT+0x82>
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	691b      	ldr	r3, [r3, #16]
 8005296:	2b00      	cmp	r3, #0
 8005298:	d106      	bne.n	80052a8 <UART_Receive_IT+0x82>
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	685b      	ldr	r3, [r3, #4]
 80052a0:	b2da      	uxtb	r2, r3
 80052a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80052a4:	701a      	strb	r2, [r3, #0]
 80052a6:	e008      	b.n	80052ba <UART_Receive_IT+0x94>
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	681b      	ldr	r3, [r3, #0]
 80052ac:	685b      	ldr	r3, [r3, #4]
 80052ae:	b2db      	uxtb	r3, r3
 80052b0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80052b4:	b2da      	uxtb	r2, r3
 80052b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80052b8:	701a      	strb	r2, [r3, #0]
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80052be:	1c5a      	adds	r2, r3, #1
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	629a      	str	r2, [r3, #40]	; 0x28
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80052c8:	b29b      	uxth	r3, r3
 80052ca:	3b01      	subs	r3, #1
 80052cc:	b29b      	uxth	r3, r3
 80052ce:	687a      	ldr	r2, [r7, #4]
 80052d0:	4619      	mov	r1, r3
 80052d2:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80052d4:	2b00      	cmp	r3, #0
 80052d6:	d15d      	bne.n	8005394 <UART_Receive_IT+0x16e>
 80052d8:	687b      	ldr	r3, [r7, #4]
 80052da:	681b      	ldr	r3, [r3, #0]
 80052dc:	68da      	ldr	r2, [r3, #12]
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	f022 0220 	bic.w	r2, r2, #32
 80052e6:	60da      	str	r2, [r3, #12]
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	68da      	ldr	r2, [r3, #12]
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80052f6:	60da      	str	r2, [r3, #12]
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	695a      	ldr	r2, [r3, #20]
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	f022 0201 	bic.w	r2, r2, #1
 8005306:	615a      	str	r2, [r3, #20]
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	2220      	movs	r2, #32
 800530c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	2200      	movs	r2, #0
 8005314:	635a      	str	r2, [r3, #52]	; 0x34
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800531a:	2b01      	cmp	r3, #1
 800531c:	d135      	bne.n	800538a <UART_Receive_IT+0x164>
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	2200      	movs	r2, #0
 8005322:	631a      	str	r2, [r3, #48]	; 0x30
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	681b      	ldr	r3, [r3, #0]
 8005328:	330c      	adds	r3, #12
 800532a:	617b      	str	r3, [r7, #20]
 800532c:	697b      	ldr	r3, [r7, #20]
 800532e:	e853 3f00 	ldrex	r3, [r3]
 8005332:	613b      	str	r3, [r7, #16]
 8005334:	693b      	ldr	r3, [r7, #16]
 8005336:	f023 0310 	bic.w	r3, r3, #16
 800533a:	627b      	str	r3, [r7, #36]	; 0x24
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	330c      	adds	r3, #12
 8005342:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005344:	623a      	str	r2, [r7, #32]
 8005346:	61fb      	str	r3, [r7, #28]
 8005348:	69f9      	ldr	r1, [r7, #28]
 800534a:	6a3a      	ldr	r2, [r7, #32]
 800534c:	e841 2300 	strex	r3, r2, [r1]
 8005350:	61bb      	str	r3, [r7, #24]
 8005352:	69bb      	ldr	r3, [r7, #24]
 8005354:	2b00      	cmp	r3, #0
 8005356:	d1e5      	bne.n	8005324 <UART_Receive_IT+0xfe>
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	681b      	ldr	r3, [r3, #0]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	f003 0310 	and.w	r3, r3, #16
 8005362:	2b10      	cmp	r3, #16
 8005364:	d10a      	bne.n	800537c <UART_Receive_IT+0x156>
 8005366:	2300      	movs	r3, #0
 8005368:	60fb      	str	r3, [r7, #12]
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	60fb      	str	r3, [r7, #12]
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	685b      	ldr	r3, [r3, #4]
 8005378:	60fb      	str	r3, [r7, #12]
 800537a:	68fb      	ldr	r3, [r7, #12]
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8005380:	4619      	mov	r1, r3
 8005382:	6878      	ldr	r0, [r7, #4]
 8005384:	f7ff fdf9 	bl	8004f7a <HAL_UARTEx_RxEventCallback>
 8005388:	e002      	b.n	8005390 <UART_Receive_IT+0x16a>
 800538a:	6878      	ldr	r0, [r7, #4]
 800538c:	f7ff fde3 	bl	8004f56 <HAL_UART_RxCpltCallback>
 8005390:	2300      	movs	r3, #0
 8005392:	e002      	b.n	800539a <UART_Receive_IT+0x174>
 8005394:	2300      	movs	r3, #0
 8005396:	e000      	b.n	800539a <UART_Receive_IT+0x174>
 8005398:	2302      	movs	r3, #2
 800539a:	4618      	mov	r0, r3
 800539c:	3730      	adds	r7, #48	; 0x30
 800539e:	46bd      	mov	sp, r7
 80053a0:	bd80      	pop	{r7, pc}
	...

080053a4 <UART_SetConfig>:
 80053a4:	b580      	push	{r7, lr}
 80053a6:	b084      	sub	sp, #16
 80053a8:	af00      	add	r7, sp, #0
 80053aa:	6078      	str	r0, [r7, #4]
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	691b      	ldr	r3, [r3, #16]
 80053b2:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	68da      	ldr	r2, [r3, #12]
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	430a      	orrs	r2, r1
 80053c0:	611a      	str	r2, [r3, #16]
 80053c2:	687b      	ldr	r3, [r7, #4]
 80053c4:	689a      	ldr	r2, [r3, #8]
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	691b      	ldr	r3, [r3, #16]
 80053ca:	431a      	orrs	r2, r3
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	695b      	ldr	r3, [r3, #20]
 80053d0:	4313      	orrs	r3, r2
 80053d2:	60bb      	str	r3, [r7, #8]
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	68db      	ldr	r3, [r3, #12]
 80053da:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80053de:	f023 030c 	bic.w	r3, r3, #12
 80053e2:	687a      	ldr	r2, [r7, #4]
 80053e4:	6812      	ldr	r2, [r2, #0]
 80053e6:	68b9      	ldr	r1, [r7, #8]
 80053e8:	430b      	orrs	r3, r1
 80053ea:	60d3      	str	r3, [r2, #12]
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	695b      	ldr	r3, [r3, #20]
 80053f2:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	699a      	ldr	r2, [r3, #24]
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	681b      	ldr	r3, [r3, #0]
 80053fe:	430a      	orrs	r2, r1
 8005400:	615a      	str	r2, [r3, #20]
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	681b      	ldr	r3, [r3, #0]
 8005406:	4a2c      	ldr	r2, [pc, #176]	; (80054b8 <UART_SetConfig+0x114>)
 8005408:	4293      	cmp	r3, r2
 800540a:	d103      	bne.n	8005414 <UART_SetConfig+0x70>
 800540c:	f7fe fa9c 	bl	8003948 <HAL_RCC_GetPCLK2Freq>
 8005410:	60f8      	str	r0, [r7, #12]
 8005412:	e002      	b.n	800541a <UART_SetConfig+0x76>
 8005414:	f7fe fa84 	bl	8003920 <HAL_RCC_GetPCLK1Freq>
 8005418:	60f8      	str	r0, [r7, #12]
 800541a:	68fa      	ldr	r2, [r7, #12]
 800541c:	4613      	mov	r3, r2
 800541e:	009b      	lsls	r3, r3, #2
 8005420:	4413      	add	r3, r2
 8005422:	009a      	lsls	r2, r3, #2
 8005424:	441a      	add	r2, r3
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	685b      	ldr	r3, [r3, #4]
 800542a:	009b      	lsls	r3, r3, #2
 800542c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005430:	4a22      	ldr	r2, [pc, #136]	; (80054bc <UART_SetConfig+0x118>)
 8005432:	fba2 2303 	umull	r2, r3, r2, r3
 8005436:	095b      	lsrs	r3, r3, #5
 8005438:	0119      	lsls	r1, r3, #4
 800543a:	68fa      	ldr	r2, [r7, #12]
 800543c:	4613      	mov	r3, r2
 800543e:	009b      	lsls	r3, r3, #2
 8005440:	4413      	add	r3, r2
 8005442:	009a      	lsls	r2, r3, #2
 8005444:	441a      	add	r2, r3
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	685b      	ldr	r3, [r3, #4]
 800544a:	009b      	lsls	r3, r3, #2
 800544c:	fbb2 f2f3 	udiv	r2, r2, r3
 8005450:	4b1a      	ldr	r3, [pc, #104]	; (80054bc <UART_SetConfig+0x118>)
 8005452:	fba3 0302 	umull	r0, r3, r3, r2
 8005456:	095b      	lsrs	r3, r3, #5
 8005458:	2064      	movs	r0, #100	; 0x64
 800545a:	fb00 f303 	mul.w	r3, r0, r3
 800545e:	1ad3      	subs	r3, r2, r3
 8005460:	011b      	lsls	r3, r3, #4
 8005462:	3332      	adds	r3, #50	; 0x32
 8005464:	4a15      	ldr	r2, [pc, #84]	; (80054bc <UART_SetConfig+0x118>)
 8005466:	fba2 2303 	umull	r2, r3, r2, r3
 800546a:	095b      	lsrs	r3, r3, #5
 800546c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005470:	4419      	add	r1, r3
 8005472:	68fa      	ldr	r2, [r7, #12]
 8005474:	4613      	mov	r3, r2
 8005476:	009b      	lsls	r3, r3, #2
 8005478:	4413      	add	r3, r2
 800547a:	009a      	lsls	r2, r3, #2
 800547c:	441a      	add	r2, r3
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	685b      	ldr	r3, [r3, #4]
 8005482:	009b      	lsls	r3, r3, #2
 8005484:	fbb2 f2f3 	udiv	r2, r2, r3
 8005488:	4b0c      	ldr	r3, [pc, #48]	; (80054bc <UART_SetConfig+0x118>)
 800548a:	fba3 0302 	umull	r0, r3, r3, r2
 800548e:	095b      	lsrs	r3, r3, #5
 8005490:	2064      	movs	r0, #100	; 0x64
 8005492:	fb00 f303 	mul.w	r3, r0, r3
 8005496:	1ad3      	subs	r3, r2, r3
 8005498:	011b      	lsls	r3, r3, #4
 800549a:	3332      	adds	r3, #50	; 0x32
 800549c:	4a07      	ldr	r2, [pc, #28]	; (80054bc <UART_SetConfig+0x118>)
 800549e:	fba2 2303 	umull	r2, r3, r2, r3
 80054a2:	095b      	lsrs	r3, r3, #5
 80054a4:	f003 020f 	and.w	r2, r3, #15
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	440a      	add	r2, r1
 80054ae:	609a      	str	r2, [r3, #8]
 80054b0:	bf00      	nop
 80054b2:	3710      	adds	r7, #16
 80054b4:	46bd      	mov	sp, r7
 80054b6:	bd80      	pop	{r7, pc}
 80054b8:	40013800 	.word	0x40013800
 80054bc:	51eb851f 	.word	0x51eb851f

080054c0 <__errno>:
 80054c0:	4b01      	ldr	r3, [pc, #4]	; (80054c8 <__errno+0x8>)
 80054c2:	6818      	ldr	r0, [r3, #0]
 80054c4:	4770      	bx	lr
 80054c6:	bf00      	nop
 80054c8:	2000006c 	.word	0x2000006c

080054cc <__libc_init_array>:
 80054cc:	b570      	push	{r4, r5, r6, lr}
 80054ce:	2600      	movs	r6, #0
 80054d0:	4d0c      	ldr	r5, [pc, #48]	; (8005504 <__libc_init_array+0x38>)
 80054d2:	4c0d      	ldr	r4, [pc, #52]	; (8005508 <__libc_init_array+0x3c>)
 80054d4:	1b64      	subs	r4, r4, r5
 80054d6:	10a4      	asrs	r4, r4, #2
 80054d8:	42a6      	cmp	r6, r4
 80054da:	d109      	bne.n	80054f0 <__libc_init_array+0x24>
 80054dc:	f000 fcb4 	bl	8005e48 <_init>
 80054e0:	2600      	movs	r6, #0
 80054e2:	4d0a      	ldr	r5, [pc, #40]	; (800550c <__libc_init_array+0x40>)
 80054e4:	4c0a      	ldr	r4, [pc, #40]	; (8005510 <__libc_init_array+0x44>)
 80054e6:	1b64      	subs	r4, r4, r5
 80054e8:	10a4      	asrs	r4, r4, #2
 80054ea:	42a6      	cmp	r6, r4
 80054ec:	d105      	bne.n	80054fa <__libc_init_array+0x2e>
 80054ee:	bd70      	pop	{r4, r5, r6, pc}
 80054f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80054f4:	4798      	blx	r3
 80054f6:	3601      	adds	r6, #1
 80054f8:	e7ee      	b.n	80054d8 <__libc_init_array+0xc>
 80054fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80054fe:	4798      	blx	r3
 8005500:	3601      	adds	r6, #1
 8005502:	e7f2      	b.n	80054ea <__libc_init_array+0x1e>
 8005504:	0800609c 	.word	0x0800609c
 8005508:	0800609c 	.word	0x0800609c
 800550c:	0800609c 	.word	0x0800609c
 8005510:	080060a0 	.word	0x080060a0

08005514 <malloc>:
 8005514:	4b02      	ldr	r3, [pc, #8]	; (8005520 <malloc+0xc>)
 8005516:	4601      	mov	r1, r0
 8005518:	6818      	ldr	r0, [r3, #0]
 800551a:	f000 b85f 	b.w	80055dc <_malloc_r>
 800551e:	bf00      	nop
 8005520:	2000006c 	.word	0x2000006c

08005524 <free>:
 8005524:	4b02      	ldr	r3, [pc, #8]	; (8005530 <free+0xc>)
 8005526:	4601      	mov	r1, r0
 8005528:	6818      	ldr	r0, [r3, #0]
 800552a:	f000 b80b 	b.w	8005544 <_free_r>
 800552e:	bf00      	nop
 8005530:	2000006c 	.word	0x2000006c

08005534 <memset>:
 8005534:	4603      	mov	r3, r0
 8005536:	4402      	add	r2, r0
 8005538:	4293      	cmp	r3, r2
 800553a:	d100      	bne.n	800553e <memset+0xa>
 800553c:	4770      	bx	lr
 800553e:	f803 1b01 	strb.w	r1, [r3], #1
 8005542:	e7f9      	b.n	8005538 <memset+0x4>

08005544 <_free_r>:
 8005544:	b538      	push	{r3, r4, r5, lr}
 8005546:	4605      	mov	r5, r0
 8005548:	2900      	cmp	r1, #0
 800554a:	d043      	beq.n	80055d4 <_free_r+0x90>
 800554c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005550:	1f0c      	subs	r4, r1, #4
 8005552:	2b00      	cmp	r3, #0
 8005554:	bfb8      	it	lt
 8005556:	18e4      	addlt	r4, r4, r3
 8005558:	f000 f8ca 	bl	80056f0 <__malloc_lock>
 800555c:	4a1e      	ldr	r2, [pc, #120]	; (80055d8 <_free_r+0x94>)
 800555e:	6813      	ldr	r3, [r2, #0]
 8005560:	4610      	mov	r0, r2
 8005562:	b933      	cbnz	r3, 8005572 <_free_r+0x2e>
 8005564:	6063      	str	r3, [r4, #4]
 8005566:	6014      	str	r4, [r2, #0]
 8005568:	4628      	mov	r0, r5
 800556a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800556e:	f000 b8c5 	b.w	80056fc <__malloc_unlock>
 8005572:	42a3      	cmp	r3, r4
 8005574:	d90a      	bls.n	800558c <_free_r+0x48>
 8005576:	6821      	ldr	r1, [r4, #0]
 8005578:	1862      	adds	r2, r4, r1
 800557a:	4293      	cmp	r3, r2
 800557c:	bf01      	itttt	eq
 800557e:	681a      	ldreq	r2, [r3, #0]
 8005580:	685b      	ldreq	r3, [r3, #4]
 8005582:	1852      	addeq	r2, r2, r1
 8005584:	6022      	streq	r2, [r4, #0]
 8005586:	6063      	str	r3, [r4, #4]
 8005588:	6004      	str	r4, [r0, #0]
 800558a:	e7ed      	b.n	8005568 <_free_r+0x24>
 800558c:	461a      	mov	r2, r3
 800558e:	685b      	ldr	r3, [r3, #4]
 8005590:	b10b      	cbz	r3, 8005596 <_free_r+0x52>
 8005592:	42a3      	cmp	r3, r4
 8005594:	d9fa      	bls.n	800558c <_free_r+0x48>
 8005596:	6811      	ldr	r1, [r2, #0]
 8005598:	1850      	adds	r0, r2, r1
 800559a:	42a0      	cmp	r0, r4
 800559c:	d10b      	bne.n	80055b6 <_free_r+0x72>
 800559e:	6820      	ldr	r0, [r4, #0]
 80055a0:	4401      	add	r1, r0
 80055a2:	1850      	adds	r0, r2, r1
 80055a4:	4283      	cmp	r3, r0
 80055a6:	6011      	str	r1, [r2, #0]
 80055a8:	d1de      	bne.n	8005568 <_free_r+0x24>
 80055aa:	6818      	ldr	r0, [r3, #0]
 80055ac:	685b      	ldr	r3, [r3, #4]
 80055ae:	4401      	add	r1, r0
 80055b0:	6011      	str	r1, [r2, #0]
 80055b2:	6053      	str	r3, [r2, #4]
 80055b4:	e7d8      	b.n	8005568 <_free_r+0x24>
 80055b6:	d902      	bls.n	80055be <_free_r+0x7a>
 80055b8:	230c      	movs	r3, #12
 80055ba:	602b      	str	r3, [r5, #0]
 80055bc:	e7d4      	b.n	8005568 <_free_r+0x24>
 80055be:	6820      	ldr	r0, [r4, #0]
 80055c0:	1821      	adds	r1, r4, r0
 80055c2:	428b      	cmp	r3, r1
 80055c4:	bf01      	itttt	eq
 80055c6:	6819      	ldreq	r1, [r3, #0]
 80055c8:	685b      	ldreq	r3, [r3, #4]
 80055ca:	1809      	addeq	r1, r1, r0
 80055cc:	6021      	streq	r1, [r4, #0]
 80055ce:	6063      	str	r3, [r4, #4]
 80055d0:	6054      	str	r4, [r2, #4]
 80055d2:	e7c9      	b.n	8005568 <_free_r+0x24>
 80055d4:	bd38      	pop	{r3, r4, r5, pc}
 80055d6:	bf00      	nop
 80055d8:	20000134 	.word	0x20000134

080055dc <_malloc_r>:
 80055dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80055de:	1ccd      	adds	r5, r1, #3
 80055e0:	f025 0503 	bic.w	r5, r5, #3
 80055e4:	3508      	adds	r5, #8
 80055e6:	2d0c      	cmp	r5, #12
 80055e8:	bf38      	it	cc
 80055ea:	250c      	movcc	r5, #12
 80055ec:	2d00      	cmp	r5, #0
 80055ee:	4606      	mov	r6, r0
 80055f0:	db01      	blt.n	80055f6 <_malloc_r+0x1a>
 80055f2:	42a9      	cmp	r1, r5
 80055f4:	d903      	bls.n	80055fe <_malloc_r+0x22>
 80055f6:	230c      	movs	r3, #12
 80055f8:	6033      	str	r3, [r6, #0]
 80055fa:	2000      	movs	r0, #0
 80055fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80055fe:	f000 f877 	bl	80056f0 <__malloc_lock>
 8005602:	4921      	ldr	r1, [pc, #132]	; (8005688 <_malloc_r+0xac>)
 8005604:	680a      	ldr	r2, [r1, #0]
 8005606:	4614      	mov	r4, r2
 8005608:	b99c      	cbnz	r4, 8005632 <_malloc_r+0x56>
 800560a:	4f20      	ldr	r7, [pc, #128]	; (800568c <_malloc_r+0xb0>)
 800560c:	683b      	ldr	r3, [r7, #0]
 800560e:	b923      	cbnz	r3, 800561a <_malloc_r+0x3e>
 8005610:	4621      	mov	r1, r4
 8005612:	4630      	mov	r0, r6
 8005614:	f000 f83c 	bl	8005690 <_sbrk_r>
 8005618:	6038      	str	r0, [r7, #0]
 800561a:	4629      	mov	r1, r5
 800561c:	4630      	mov	r0, r6
 800561e:	f000 f837 	bl	8005690 <_sbrk_r>
 8005622:	1c43      	adds	r3, r0, #1
 8005624:	d123      	bne.n	800566e <_malloc_r+0x92>
 8005626:	230c      	movs	r3, #12
 8005628:	4630      	mov	r0, r6
 800562a:	6033      	str	r3, [r6, #0]
 800562c:	f000 f866 	bl	80056fc <__malloc_unlock>
 8005630:	e7e3      	b.n	80055fa <_malloc_r+0x1e>
 8005632:	6823      	ldr	r3, [r4, #0]
 8005634:	1b5b      	subs	r3, r3, r5
 8005636:	d417      	bmi.n	8005668 <_malloc_r+0x8c>
 8005638:	2b0b      	cmp	r3, #11
 800563a:	d903      	bls.n	8005644 <_malloc_r+0x68>
 800563c:	6023      	str	r3, [r4, #0]
 800563e:	441c      	add	r4, r3
 8005640:	6025      	str	r5, [r4, #0]
 8005642:	e004      	b.n	800564e <_malloc_r+0x72>
 8005644:	6863      	ldr	r3, [r4, #4]
 8005646:	42a2      	cmp	r2, r4
 8005648:	bf0c      	ite	eq
 800564a:	600b      	streq	r3, [r1, #0]
 800564c:	6053      	strne	r3, [r2, #4]
 800564e:	4630      	mov	r0, r6
 8005650:	f000 f854 	bl	80056fc <__malloc_unlock>
 8005654:	f104 000b 	add.w	r0, r4, #11
 8005658:	1d23      	adds	r3, r4, #4
 800565a:	f020 0007 	bic.w	r0, r0, #7
 800565e:	1ac2      	subs	r2, r0, r3
 8005660:	d0cc      	beq.n	80055fc <_malloc_r+0x20>
 8005662:	1a1b      	subs	r3, r3, r0
 8005664:	50a3      	str	r3, [r4, r2]
 8005666:	e7c9      	b.n	80055fc <_malloc_r+0x20>
 8005668:	4622      	mov	r2, r4
 800566a:	6864      	ldr	r4, [r4, #4]
 800566c:	e7cc      	b.n	8005608 <_malloc_r+0x2c>
 800566e:	1cc4      	adds	r4, r0, #3
 8005670:	f024 0403 	bic.w	r4, r4, #3
 8005674:	42a0      	cmp	r0, r4
 8005676:	d0e3      	beq.n	8005640 <_malloc_r+0x64>
 8005678:	1a21      	subs	r1, r4, r0
 800567a:	4630      	mov	r0, r6
 800567c:	f000 f808 	bl	8005690 <_sbrk_r>
 8005680:	3001      	adds	r0, #1
 8005682:	d1dd      	bne.n	8005640 <_malloc_r+0x64>
 8005684:	e7cf      	b.n	8005626 <_malloc_r+0x4a>
 8005686:	bf00      	nop
 8005688:	20000134 	.word	0x20000134
 800568c:	20000138 	.word	0x20000138

08005690 <_sbrk_r>:
 8005690:	b538      	push	{r3, r4, r5, lr}
 8005692:	2300      	movs	r3, #0
 8005694:	4d05      	ldr	r5, [pc, #20]	; (80056ac <_sbrk_r+0x1c>)
 8005696:	4604      	mov	r4, r0
 8005698:	4608      	mov	r0, r1
 800569a:	602b      	str	r3, [r5, #0]
 800569c:	f7fd f90c 	bl	80028b8 <_sbrk>
 80056a0:	1c43      	adds	r3, r0, #1
 80056a2:	d102      	bne.n	80056aa <_sbrk_r+0x1a>
 80056a4:	682b      	ldr	r3, [r5, #0]
 80056a6:	b103      	cbz	r3, 80056aa <_sbrk_r+0x1a>
 80056a8:	6023      	str	r3, [r4, #0]
 80056aa:	bd38      	pop	{r3, r4, r5, pc}
 80056ac:	2000025c 	.word	0x2000025c

080056b0 <siprintf>:
 80056b0:	b40e      	push	{r1, r2, r3}
 80056b2:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80056b6:	b500      	push	{lr}
 80056b8:	b09c      	sub	sp, #112	; 0x70
 80056ba:	ab1d      	add	r3, sp, #116	; 0x74
 80056bc:	9002      	str	r0, [sp, #8]
 80056be:	9006      	str	r0, [sp, #24]
 80056c0:	9107      	str	r1, [sp, #28]
 80056c2:	9104      	str	r1, [sp, #16]
 80056c4:	4808      	ldr	r0, [pc, #32]	; (80056e8 <siprintf+0x38>)
 80056c6:	4909      	ldr	r1, [pc, #36]	; (80056ec <siprintf+0x3c>)
 80056c8:	f853 2b04 	ldr.w	r2, [r3], #4
 80056cc:	9105      	str	r1, [sp, #20]
 80056ce:	6800      	ldr	r0, [r0, #0]
 80056d0:	a902      	add	r1, sp, #8
 80056d2:	9301      	str	r3, [sp, #4]
 80056d4:	f000 f874 	bl	80057c0 <_svfiprintf_r>
 80056d8:	2200      	movs	r2, #0
 80056da:	9b02      	ldr	r3, [sp, #8]
 80056dc:	701a      	strb	r2, [r3, #0]
 80056de:	b01c      	add	sp, #112	; 0x70
 80056e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80056e4:	b003      	add	sp, #12
 80056e6:	4770      	bx	lr
 80056e8:	2000006c 	.word	0x2000006c
 80056ec:	ffff0208 	.word	0xffff0208

080056f0 <__malloc_lock>:
 80056f0:	4801      	ldr	r0, [pc, #4]	; (80056f8 <__malloc_lock+0x8>)
 80056f2:	f000 bafb 	b.w	8005cec <__retarget_lock_acquire_recursive>
 80056f6:	bf00      	nop
 80056f8:	20000264 	.word	0x20000264

080056fc <__malloc_unlock>:
 80056fc:	4801      	ldr	r0, [pc, #4]	; (8005704 <__malloc_unlock+0x8>)
 80056fe:	f000 baf6 	b.w	8005cee <__retarget_lock_release_recursive>
 8005702:	bf00      	nop
 8005704:	20000264 	.word	0x20000264

08005708 <__ssputs_r>:
 8005708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800570c:	688e      	ldr	r6, [r1, #8]
 800570e:	4682      	mov	sl, r0
 8005710:	429e      	cmp	r6, r3
 8005712:	460c      	mov	r4, r1
 8005714:	4690      	mov	r8, r2
 8005716:	461f      	mov	r7, r3
 8005718:	d838      	bhi.n	800578c <__ssputs_r+0x84>
 800571a:	898a      	ldrh	r2, [r1, #12]
 800571c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005720:	d032      	beq.n	8005788 <__ssputs_r+0x80>
 8005722:	6825      	ldr	r5, [r4, #0]
 8005724:	6909      	ldr	r1, [r1, #16]
 8005726:	3301      	adds	r3, #1
 8005728:	eba5 0901 	sub.w	r9, r5, r1
 800572c:	6965      	ldr	r5, [r4, #20]
 800572e:	444b      	add	r3, r9
 8005730:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005734:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005738:	106d      	asrs	r5, r5, #1
 800573a:	429d      	cmp	r5, r3
 800573c:	bf38      	it	cc
 800573e:	461d      	movcc	r5, r3
 8005740:	0553      	lsls	r3, r2, #21
 8005742:	d531      	bpl.n	80057a8 <__ssputs_r+0xa0>
 8005744:	4629      	mov	r1, r5
 8005746:	f7ff ff49 	bl	80055dc <_malloc_r>
 800574a:	4606      	mov	r6, r0
 800574c:	b950      	cbnz	r0, 8005764 <__ssputs_r+0x5c>
 800574e:	230c      	movs	r3, #12
 8005750:	f04f 30ff 	mov.w	r0, #4294967295
 8005754:	f8ca 3000 	str.w	r3, [sl]
 8005758:	89a3      	ldrh	r3, [r4, #12]
 800575a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800575e:	81a3      	strh	r3, [r4, #12]
 8005760:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005764:	464a      	mov	r2, r9
 8005766:	6921      	ldr	r1, [r4, #16]
 8005768:	f000 fad0 	bl	8005d0c <memcpy>
 800576c:	89a3      	ldrh	r3, [r4, #12]
 800576e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005772:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005776:	81a3      	strh	r3, [r4, #12]
 8005778:	6126      	str	r6, [r4, #16]
 800577a:	444e      	add	r6, r9
 800577c:	6026      	str	r6, [r4, #0]
 800577e:	463e      	mov	r6, r7
 8005780:	6165      	str	r5, [r4, #20]
 8005782:	eba5 0509 	sub.w	r5, r5, r9
 8005786:	60a5      	str	r5, [r4, #8]
 8005788:	42be      	cmp	r6, r7
 800578a:	d900      	bls.n	800578e <__ssputs_r+0x86>
 800578c:	463e      	mov	r6, r7
 800578e:	4632      	mov	r2, r6
 8005790:	4641      	mov	r1, r8
 8005792:	6820      	ldr	r0, [r4, #0]
 8005794:	f000 fac8 	bl	8005d28 <memmove>
 8005798:	68a3      	ldr	r3, [r4, #8]
 800579a:	6822      	ldr	r2, [r4, #0]
 800579c:	1b9b      	subs	r3, r3, r6
 800579e:	4432      	add	r2, r6
 80057a0:	2000      	movs	r0, #0
 80057a2:	60a3      	str	r3, [r4, #8]
 80057a4:	6022      	str	r2, [r4, #0]
 80057a6:	e7db      	b.n	8005760 <__ssputs_r+0x58>
 80057a8:	462a      	mov	r2, r5
 80057aa:	f000 fad7 	bl	8005d5c <_realloc_r>
 80057ae:	4606      	mov	r6, r0
 80057b0:	2800      	cmp	r0, #0
 80057b2:	d1e1      	bne.n	8005778 <__ssputs_r+0x70>
 80057b4:	4650      	mov	r0, sl
 80057b6:	6921      	ldr	r1, [r4, #16]
 80057b8:	f7ff fec4 	bl	8005544 <_free_r>
 80057bc:	e7c7      	b.n	800574e <__ssputs_r+0x46>
	...

080057c0 <_svfiprintf_r>:
 80057c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057c4:	4698      	mov	r8, r3
 80057c6:	898b      	ldrh	r3, [r1, #12]
 80057c8:	4607      	mov	r7, r0
 80057ca:	061b      	lsls	r3, r3, #24
 80057cc:	460d      	mov	r5, r1
 80057ce:	4614      	mov	r4, r2
 80057d0:	b09d      	sub	sp, #116	; 0x74
 80057d2:	d50e      	bpl.n	80057f2 <_svfiprintf_r+0x32>
 80057d4:	690b      	ldr	r3, [r1, #16]
 80057d6:	b963      	cbnz	r3, 80057f2 <_svfiprintf_r+0x32>
 80057d8:	2140      	movs	r1, #64	; 0x40
 80057da:	f7ff feff 	bl	80055dc <_malloc_r>
 80057de:	6028      	str	r0, [r5, #0]
 80057e0:	6128      	str	r0, [r5, #16]
 80057e2:	b920      	cbnz	r0, 80057ee <_svfiprintf_r+0x2e>
 80057e4:	230c      	movs	r3, #12
 80057e6:	603b      	str	r3, [r7, #0]
 80057e8:	f04f 30ff 	mov.w	r0, #4294967295
 80057ec:	e0d1      	b.n	8005992 <_svfiprintf_r+0x1d2>
 80057ee:	2340      	movs	r3, #64	; 0x40
 80057f0:	616b      	str	r3, [r5, #20]
 80057f2:	2300      	movs	r3, #0
 80057f4:	9309      	str	r3, [sp, #36]	; 0x24
 80057f6:	2320      	movs	r3, #32
 80057f8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80057fc:	2330      	movs	r3, #48	; 0x30
 80057fe:	f04f 0901 	mov.w	r9, #1
 8005802:	f8cd 800c 	str.w	r8, [sp, #12]
 8005806:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80059ac <_svfiprintf_r+0x1ec>
 800580a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800580e:	4623      	mov	r3, r4
 8005810:	469a      	mov	sl, r3
 8005812:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005816:	b10a      	cbz	r2, 800581c <_svfiprintf_r+0x5c>
 8005818:	2a25      	cmp	r2, #37	; 0x25
 800581a:	d1f9      	bne.n	8005810 <_svfiprintf_r+0x50>
 800581c:	ebba 0b04 	subs.w	fp, sl, r4
 8005820:	d00b      	beq.n	800583a <_svfiprintf_r+0x7a>
 8005822:	465b      	mov	r3, fp
 8005824:	4622      	mov	r2, r4
 8005826:	4629      	mov	r1, r5
 8005828:	4638      	mov	r0, r7
 800582a:	f7ff ff6d 	bl	8005708 <__ssputs_r>
 800582e:	3001      	adds	r0, #1
 8005830:	f000 80aa 	beq.w	8005988 <_svfiprintf_r+0x1c8>
 8005834:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005836:	445a      	add	r2, fp
 8005838:	9209      	str	r2, [sp, #36]	; 0x24
 800583a:	f89a 3000 	ldrb.w	r3, [sl]
 800583e:	2b00      	cmp	r3, #0
 8005840:	f000 80a2 	beq.w	8005988 <_svfiprintf_r+0x1c8>
 8005844:	2300      	movs	r3, #0
 8005846:	f04f 32ff 	mov.w	r2, #4294967295
 800584a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800584e:	f10a 0a01 	add.w	sl, sl, #1
 8005852:	9304      	str	r3, [sp, #16]
 8005854:	9307      	str	r3, [sp, #28]
 8005856:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800585a:	931a      	str	r3, [sp, #104]	; 0x68
 800585c:	4654      	mov	r4, sl
 800585e:	2205      	movs	r2, #5
 8005860:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005864:	4851      	ldr	r0, [pc, #324]	; (80059ac <_svfiprintf_r+0x1ec>)
 8005866:	f000 fa43 	bl	8005cf0 <memchr>
 800586a:	9a04      	ldr	r2, [sp, #16]
 800586c:	b9d8      	cbnz	r0, 80058a6 <_svfiprintf_r+0xe6>
 800586e:	06d0      	lsls	r0, r2, #27
 8005870:	bf44      	itt	mi
 8005872:	2320      	movmi	r3, #32
 8005874:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005878:	0711      	lsls	r1, r2, #28
 800587a:	bf44      	itt	mi
 800587c:	232b      	movmi	r3, #43	; 0x2b
 800587e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005882:	f89a 3000 	ldrb.w	r3, [sl]
 8005886:	2b2a      	cmp	r3, #42	; 0x2a
 8005888:	d015      	beq.n	80058b6 <_svfiprintf_r+0xf6>
 800588a:	4654      	mov	r4, sl
 800588c:	2000      	movs	r0, #0
 800588e:	f04f 0c0a 	mov.w	ip, #10
 8005892:	9a07      	ldr	r2, [sp, #28]
 8005894:	4621      	mov	r1, r4
 8005896:	f811 3b01 	ldrb.w	r3, [r1], #1
 800589a:	3b30      	subs	r3, #48	; 0x30
 800589c:	2b09      	cmp	r3, #9
 800589e:	d94e      	bls.n	800593e <_svfiprintf_r+0x17e>
 80058a0:	b1b0      	cbz	r0, 80058d0 <_svfiprintf_r+0x110>
 80058a2:	9207      	str	r2, [sp, #28]
 80058a4:	e014      	b.n	80058d0 <_svfiprintf_r+0x110>
 80058a6:	eba0 0308 	sub.w	r3, r0, r8
 80058aa:	fa09 f303 	lsl.w	r3, r9, r3
 80058ae:	4313      	orrs	r3, r2
 80058b0:	46a2      	mov	sl, r4
 80058b2:	9304      	str	r3, [sp, #16]
 80058b4:	e7d2      	b.n	800585c <_svfiprintf_r+0x9c>
 80058b6:	9b03      	ldr	r3, [sp, #12]
 80058b8:	1d19      	adds	r1, r3, #4
 80058ba:	681b      	ldr	r3, [r3, #0]
 80058bc:	9103      	str	r1, [sp, #12]
 80058be:	2b00      	cmp	r3, #0
 80058c0:	bfbb      	ittet	lt
 80058c2:	425b      	neglt	r3, r3
 80058c4:	f042 0202 	orrlt.w	r2, r2, #2
 80058c8:	9307      	strge	r3, [sp, #28]
 80058ca:	9307      	strlt	r3, [sp, #28]
 80058cc:	bfb8      	it	lt
 80058ce:	9204      	strlt	r2, [sp, #16]
 80058d0:	7823      	ldrb	r3, [r4, #0]
 80058d2:	2b2e      	cmp	r3, #46	; 0x2e
 80058d4:	d10c      	bne.n	80058f0 <_svfiprintf_r+0x130>
 80058d6:	7863      	ldrb	r3, [r4, #1]
 80058d8:	2b2a      	cmp	r3, #42	; 0x2a
 80058da:	d135      	bne.n	8005948 <_svfiprintf_r+0x188>
 80058dc:	9b03      	ldr	r3, [sp, #12]
 80058de:	3402      	adds	r4, #2
 80058e0:	1d1a      	adds	r2, r3, #4
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	9203      	str	r2, [sp, #12]
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	bfb8      	it	lt
 80058ea:	f04f 33ff 	movlt.w	r3, #4294967295
 80058ee:	9305      	str	r3, [sp, #20]
 80058f0:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80059bc <_svfiprintf_r+0x1fc>
 80058f4:	2203      	movs	r2, #3
 80058f6:	4650      	mov	r0, sl
 80058f8:	7821      	ldrb	r1, [r4, #0]
 80058fa:	f000 f9f9 	bl	8005cf0 <memchr>
 80058fe:	b140      	cbz	r0, 8005912 <_svfiprintf_r+0x152>
 8005900:	2340      	movs	r3, #64	; 0x40
 8005902:	eba0 000a 	sub.w	r0, r0, sl
 8005906:	fa03 f000 	lsl.w	r0, r3, r0
 800590a:	9b04      	ldr	r3, [sp, #16]
 800590c:	3401      	adds	r4, #1
 800590e:	4303      	orrs	r3, r0
 8005910:	9304      	str	r3, [sp, #16]
 8005912:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005916:	2206      	movs	r2, #6
 8005918:	4825      	ldr	r0, [pc, #148]	; (80059b0 <_svfiprintf_r+0x1f0>)
 800591a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800591e:	f000 f9e7 	bl	8005cf0 <memchr>
 8005922:	2800      	cmp	r0, #0
 8005924:	d038      	beq.n	8005998 <_svfiprintf_r+0x1d8>
 8005926:	4b23      	ldr	r3, [pc, #140]	; (80059b4 <_svfiprintf_r+0x1f4>)
 8005928:	bb1b      	cbnz	r3, 8005972 <_svfiprintf_r+0x1b2>
 800592a:	9b03      	ldr	r3, [sp, #12]
 800592c:	3307      	adds	r3, #7
 800592e:	f023 0307 	bic.w	r3, r3, #7
 8005932:	3308      	adds	r3, #8
 8005934:	9303      	str	r3, [sp, #12]
 8005936:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005938:	4433      	add	r3, r6
 800593a:	9309      	str	r3, [sp, #36]	; 0x24
 800593c:	e767      	b.n	800580e <_svfiprintf_r+0x4e>
 800593e:	460c      	mov	r4, r1
 8005940:	2001      	movs	r0, #1
 8005942:	fb0c 3202 	mla	r2, ip, r2, r3
 8005946:	e7a5      	b.n	8005894 <_svfiprintf_r+0xd4>
 8005948:	2300      	movs	r3, #0
 800594a:	f04f 0c0a 	mov.w	ip, #10
 800594e:	4619      	mov	r1, r3
 8005950:	3401      	adds	r4, #1
 8005952:	9305      	str	r3, [sp, #20]
 8005954:	4620      	mov	r0, r4
 8005956:	f810 2b01 	ldrb.w	r2, [r0], #1
 800595a:	3a30      	subs	r2, #48	; 0x30
 800595c:	2a09      	cmp	r2, #9
 800595e:	d903      	bls.n	8005968 <_svfiprintf_r+0x1a8>
 8005960:	2b00      	cmp	r3, #0
 8005962:	d0c5      	beq.n	80058f0 <_svfiprintf_r+0x130>
 8005964:	9105      	str	r1, [sp, #20]
 8005966:	e7c3      	b.n	80058f0 <_svfiprintf_r+0x130>
 8005968:	4604      	mov	r4, r0
 800596a:	2301      	movs	r3, #1
 800596c:	fb0c 2101 	mla	r1, ip, r1, r2
 8005970:	e7f0      	b.n	8005954 <_svfiprintf_r+0x194>
 8005972:	ab03      	add	r3, sp, #12
 8005974:	9300      	str	r3, [sp, #0]
 8005976:	462a      	mov	r2, r5
 8005978:	4638      	mov	r0, r7
 800597a:	4b0f      	ldr	r3, [pc, #60]	; (80059b8 <_svfiprintf_r+0x1f8>)
 800597c:	a904      	add	r1, sp, #16
 800597e:	f3af 8000 	nop.w
 8005982:	1c42      	adds	r2, r0, #1
 8005984:	4606      	mov	r6, r0
 8005986:	d1d6      	bne.n	8005936 <_svfiprintf_r+0x176>
 8005988:	89ab      	ldrh	r3, [r5, #12]
 800598a:	065b      	lsls	r3, r3, #25
 800598c:	f53f af2c 	bmi.w	80057e8 <_svfiprintf_r+0x28>
 8005990:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005992:	b01d      	add	sp, #116	; 0x74
 8005994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005998:	ab03      	add	r3, sp, #12
 800599a:	9300      	str	r3, [sp, #0]
 800599c:	462a      	mov	r2, r5
 800599e:	4638      	mov	r0, r7
 80059a0:	4b05      	ldr	r3, [pc, #20]	; (80059b8 <_svfiprintf_r+0x1f8>)
 80059a2:	a904      	add	r1, sp, #16
 80059a4:	f000 f87c 	bl	8005aa0 <_printf_i>
 80059a8:	e7eb      	b.n	8005982 <_svfiprintf_r+0x1c2>
 80059aa:	bf00      	nop
 80059ac:	08006066 	.word	0x08006066
 80059b0:	08006070 	.word	0x08006070
 80059b4:	00000000 	.word	0x00000000
 80059b8:	08005709 	.word	0x08005709
 80059bc:	0800606c 	.word	0x0800606c

080059c0 <_printf_common>:
 80059c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059c4:	4616      	mov	r6, r2
 80059c6:	4699      	mov	r9, r3
 80059c8:	688a      	ldr	r2, [r1, #8]
 80059ca:	690b      	ldr	r3, [r1, #16]
 80059cc:	4607      	mov	r7, r0
 80059ce:	4293      	cmp	r3, r2
 80059d0:	bfb8      	it	lt
 80059d2:	4613      	movlt	r3, r2
 80059d4:	6033      	str	r3, [r6, #0]
 80059d6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80059da:	460c      	mov	r4, r1
 80059dc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80059e0:	b10a      	cbz	r2, 80059e6 <_printf_common+0x26>
 80059e2:	3301      	adds	r3, #1
 80059e4:	6033      	str	r3, [r6, #0]
 80059e6:	6823      	ldr	r3, [r4, #0]
 80059e8:	0699      	lsls	r1, r3, #26
 80059ea:	bf42      	ittt	mi
 80059ec:	6833      	ldrmi	r3, [r6, #0]
 80059ee:	3302      	addmi	r3, #2
 80059f0:	6033      	strmi	r3, [r6, #0]
 80059f2:	6825      	ldr	r5, [r4, #0]
 80059f4:	f015 0506 	ands.w	r5, r5, #6
 80059f8:	d106      	bne.n	8005a08 <_printf_common+0x48>
 80059fa:	f104 0a19 	add.w	sl, r4, #25
 80059fe:	68e3      	ldr	r3, [r4, #12]
 8005a00:	6832      	ldr	r2, [r6, #0]
 8005a02:	1a9b      	subs	r3, r3, r2
 8005a04:	42ab      	cmp	r3, r5
 8005a06:	dc28      	bgt.n	8005a5a <_printf_common+0x9a>
 8005a08:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8005a0c:	1e13      	subs	r3, r2, #0
 8005a0e:	6822      	ldr	r2, [r4, #0]
 8005a10:	bf18      	it	ne
 8005a12:	2301      	movne	r3, #1
 8005a14:	0692      	lsls	r2, r2, #26
 8005a16:	d42d      	bmi.n	8005a74 <_printf_common+0xb4>
 8005a18:	4649      	mov	r1, r9
 8005a1a:	4638      	mov	r0, r7
 8005a1c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005a20:	47c0      	blx	r8
 8005a22:	3001      	adds	r0, #1
 8005a24:	d020      	beq.n	8005a68 <_printf_common+0xa8>
 8005a26:	6823      	ldr	r3, [r4, #0]
 8005a28:	68e5      	ldr	r5, [r4, #12]
 8005a2a:	f003 0306 	and.w	r3, r3, #6
 8005a2e:	2b04      	cmp	r3, #4
 8005a30:	bf18      	it	ne
 8005a32:	2500      	movne	r5, #0
 8005a34:	6832      	ldr	r2, [r6, #0]
 8005a36:	f04f 0600 	mov.w	r6, #0
 8005a3a:	68a3      	ldr	r3, [r4, #8]
 8005a3c:	bf08      	it	eq
 8005a3e:	1aad      	subeq	r5, r5, r2
 8005a40:	6922      	ldr	r2, [r4, #16]
 8005a42:	bf08      	it	eq
 8005a44:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005a48:	4293      	cmp	r3, r2
 8005a4a:	bfc4      	itt	gt
 8005a4c:	1a9b      	subgt	r3, r3, r2
 8005a4e:	18ed      	addgt	r5, r5, r3
 8005a50:	341a      	adds	r4, #26
 8005a52:	42b5      	cmp	r5, r6
 8005a54:	d11a      	bne.n	8005a8c <_printf_common+0xcc>
 8005a56:	2000      	movs	r0, #0
 8005a58:	e008      	b.n	8005a6c <_printf_common+0xac>
 8005a5a:	2301      	movs	r3, #1
 8005a5c:	4652      	mov	r2, sl
 8005a5e:	4649      	mov	r1, r9
 8005a60:	4638      	mov	r0, r7
 8005a62:	47c0      	blx	r8
 8005a64:	3001      	adds	r0, #1
 8005a66:	d103      	bne.n	8005a70 <_printf_common+0xb0>
 8005a68:	f04f 30ff 	mov.w	r0, #4294967295
 8005a6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a70:	3501      	adds	r5, #1
 8005a72:	e7c4      	b.n	80059fe <_printf_common+0x3e>
 8005a74:	2030      	movs	r0, #48	; 0x30
 8005a76:	18e1      	adds	r1, r4, r3
 8005a78:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005a7c:	1c5a      	adds	r2, r3, #1
 8005a7e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005a82:	4422      	add	r2, r4
 8005a84:	3302      	adds	r3, #2
 8005a86:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005a8a:	e7c5      	b.n	8005a18 <_printf_common+0x58>
 8005a8c:	2301      	movs	r3, #1
 8005a8e:	4622      	mov	r2, r4
 8005a90:	4649      	mov	r1, r9
 8005a92:	4638      	mov	r0, r7
 8005a94:	47c0      	blx	r8
 8005a96:	3001      	adds	r0, #1
 8005a98:	d0e6      	beq.n	8005a68 <_printf_common+0xa8>
 8005a9a:	3601      	adds	r6, #1
 8005a9c:	e7d9      	b.n	8005a52 <_printf_common+0x92>
	...

08005aa0 <_printf_i>:
 8005aa0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005aa4:	460c      	mov	r4, r1
 8005aa6:	7e27      	ldrb	r7, [r4, #24]
 8005aa8:	4691      	mov	r9, r2
 8005aaa:	2f78      	cmp	r7, #120	; 0x78
 8005aac:	4680      	mov	r8, r0
 8005aae:	469a      	mov	sl, r3
 8005ab0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005ab2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005ab6:	d807      	bhi.n	8005ac8 <_printf_i+0x28>
 8005ab8:	2f62      	cmp	r7, #98	; 0x62
 8005aba:	d80a      	bhi.n	8005ad2 <_printf_i+0x32>
 8005abc:	2f00      	cmp	r7, #0
 8005abe:	f000 80d9 	beq.w	8005c74 <_printf_i+0x1d4>
 8005ac2:	2f58      	cmp	r7, #88	; 0x58
 8005ac4:	f000 80a4 	beq.w	8005c10 <_printf_i+0x170>
 8005ac8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8005acc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005ad0:	e03a      	b.n	8005b48 <_printf_i+0xa8>
 8005ad2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8005ad6:	2b15      	cmp	r3, #21
 8005ad8:	d8f6      	bhi.n	8005ac8 <_printf_i+0x28>
 8005ada:	a001      	add	r0, pc, #4	; (adr r0, 8005ae0 <_printf_i+0x40>)
 8005adc:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8005ae0:	08005b39 	.word	0x08005b39
 8005ae4:	08005b4d 	.word	0x08005b4d
 8005ae8:	08005ac9 	.word	0x08005ac9
 8005aec:	08005ac9 	.word	0x08005ac9
 8005af0:	08005ac9 	.word	0x08005ac9
 8005af4:	08005ac9 	.word	0x08005ac9
 8005af8:	08005b4d 	.word	0x08005b4d
 8005afc:	08005ac9 	.word	0x08005ac9
 8005b00:	08005ac9 	.word	0x08005ac9
 8005b04:	08005ac9 	.word	0x08005ac9
 8005b08:	08005ac9 	.word	0x08005ac9
 8005b0c:	08005c5b 	.word	0x08005c5b
 8005b10:	08005b7d 	.word	0x08005b7d
 8005b14:	08005c3d 	.word	0x08005c3d
 8005b18:	08005ac9 	.word	0x08005ac9
 8005b1c:	08005ac9 	.word	0x08005ac9
 8005b20:	08005c7d 	.word	0x08005c7d
 8005b24:	08005ac9 	.word	0x08005ac9
 8005b28:	08005b7d 	.word	0x08005b7d
 8005b2c:	08005ac9 	.word	0x08005ac9
 8005b30:	08005ac9 	.word	0x08005ac9
 8005b34:	08005c45 	.word	0x08005c45
 8005b38:	680b      	ldr	r3, [r1, #0]
 8005b3a:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8005b3e:	1d1a      	adds	r2, r3, #4
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	600a      	str	r2, [r1, #0]
 8005b44:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005b48:	2301      	movs	r3, #1
 8005b4a:	e0a4      	b.n	8005c96 <_printf_i+0x1f6>
 8005b4c:	6825      	ldr	r5, [r4, #0]
 8005b4e:	6808      	ldr	r0, [r1, #0]
 8005b50:	062e      	lsls	r6, r5, #24
 8005b52:	f100 0304 	add.w	r3, r0, #4
 8005b56:	d50a      	bpl.n	8005b6e <_printf_i+0xce>
 8005b58:	6805      	ldr	r5, [r0, #0]
 8005b5a:	600b      	str	r3, [r1, #0]
 8005b5c:	2d00      	cmp	r5, #0
 8005b5e:	da03      	bge.n	8005b68 <_printf_i+0xc8>
 8005b60:	232d      	movs	r3, #45	; 0x2d
 8005b62:	426d      	negs	r5, r5
 8005b64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005b68:	230a      	movs	r3, #10
 8005b6a:	485e      	ldr	r0, [pc, #376]	; (8005ce4 <_printf_i+0x244>)
 8005b6c:	e019      	b.n	8005ba2 <_printf_i+0x102>
 8005b6e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8005b72:	6805      	ldr	r5, [r0, #0]
 8005b74:	600b      	str	r3, [r1, #0]
 8005b76:	bf18      	it	ne
 8005b78:	b22d      	sxthne	r5, r5
 8005b7a:	e7ef      	b.n	8005b5c <_printf_i+0xbc>
 8005b7c:	680b      	ldr	r3, [r1, #0]
 8005b7e:	6825      	ldr	r5, [r4, #0]
 8005b80:	1d18      	adds	r0, r3, #4
 8005b82:	6008      	str	r0, [r1, #0]
 8005b84:	0628      	lsls	r0, r5, #24
 8005b86:	d501      	bpl.n	8005b8c <_printf_i+0xec>
 8005b88:	681d      	ldr	r5, [r3, #0]
 8005b8a:	e002      	b.n	8005b92 <_printf_i+0xf2>
 8005b8c:	0669      	lsls	r1, r5, #25
 8005b8e:	d5fb      	bpl.n	8005b88 <_printf_i+0xe8>
 8005b90:	881d      	ldrh	r5, [r3, #0]
 8005b92:	2f6f      	cmp	r7, #111	; 0x6f
 8005b94:	bf0c      	ite	eq
 8005b96:	2308      	moveq	r3, #8
 8005b98:	230a      	movne	r3, #10
 8005b9a:	4852      	ldr	r0, [pc, #328]	; (8005ce4 <_printf_i+0x244>)
 8005b9c:	2100      	movs	r1, #0
 8005b9e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005ba2:	6866      	ldr	r6, [r4, #4]
 8005ba4:	2e00      	cmp	r6, #0
 8005ba6:	bfa8      	it	ge
 8005ba8:	6821      	ldrge	r1, [r4, #0]
 8005baa:	60a6      	str	r6, [r4, #8]
 8005bac:	bfa4      	itt	ge
 8005bae:	f021 0104 	bicge.w	r1, r1, #4
 8005bb2:	6021      	strge	r1, [r4, #0]
 8005bb4:	b90d      	cbnz	r5, 8005bba <_printf_i+0x11a>
 8005bb6:	2e00      	cmp	r6, #0
 8005bb8:	d04d      	beq.n	8005c56 <_printf_i+0x1b6>
 8005bba:	4616      	mov	r6, r2
 8005bbc:	fbb5 f1f3 	udiv	r1, r5, r3
 8005bc0:	fb03 5711 	mls	r7, r3, r1, r5
 8005bc4:	5dc7      	ldrb	r7, [r0, r7]
 8005bc6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005bca:	462f      	mov	r7, r5
 8005bcc:	42bb      	cmp	r3, r7
 8005bce:	460d      	mov	r5, r1
 8005bd0:	d9f4      	bls.n	8005bbc <_printf_i+0x11c>
 8005bd2:	2b08      	cmp	r3, #8
 8005bd4:	d10b      	bne.n	8005bee <_printf_i+0x14e>
 8005bd6:	6823      	ldr	r3, [r4, #0]
 8005bd8:	07df      	lsls	r7, r3, #31
 8005bda:	d508      	bpl.n	8005bee <_printf_i+0x14e>
 8005bdc:	6923      	ldr	r3, [r4, #16]
 8005bde:	6861      	ldr	r1, [r4, #4]
 8005be0:	4299      	cmp	r1, r3
 8005be2:	bfde      	ittt	le
 8005be4:	2330      	movle	r3, #48	; 0x30
 8005be6:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005bea:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005bee:	1b92      	subs	r2, r2, r6
 8005bf0:	6122      	str	r2, [r4, #16]
 8005bf2:	464b      	mov	r3, r9
 8005bf4:	4621      	mov	r1, r4
 8005bf6:	4640      	mov	r0, r8
 8005bf8:	f8cd a000 	str.w	sl, [sp]
 8005bfc:	aa03      	add	r2, sp, #12
 8005bfe:	f7ff fedf 	bl	80059c0 <_printf_common>
 8005c02:	3001      	adds	r0, #1
 8005c04:	d14c      	bne.n	8005ca0 <_printf_i+0x200>
 8005c06:	f04f 30ff 	mov.w	r0, #4294967295
 8005c0a:	b004      	add	sp, #16
 8005c0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c10:	4834      	ldr	r0, [pc, #208]	; (8005ce4 <_printf_i+0x244>)
 8005c12:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8005c16:	680e      	ldr	r6, [r1, #0]
 8005c18:	6823      	ldr	r3, [r4, #0]
 8005c1a:	f856 5b04 	ldr.w	r5, [r6], #4
 8005c1e:	061f      	lsls	r7, r3, #24
 8005c20:	600e      	str	r6, [r1, #0]
 8005c22:	d514      	bpl.n	8005c4e <_printf_i+0x1ae>
 8005c24:	07d9      	lsls	r1, r3, #31
 8005c26:	bf44      	itt	mi
 8005c28:	f043 0320 	orrmi.w	r3, r3, #32
 8005c2c:	6023      	strmi	r3, [r4, #0]
 8005c2e:	b91d      	cbnz	r5, 8005c38 <_printf_i+0x198>
 8005c30:	6823      	ldr	r3, [r4, #0]
 8005c32:	f023 0320 	bic.w	r3, r3, #32
 8005c36:	6023      	str	r3, [r4, #0]
 8005c38:	2310      	movs	r3, #16
 8005c3a:	e7af      	b.n	8005b9c <_printf_i+0xfc>
 8005c3c:	6823      	ldr	r3, [r4, #0]
 8005c3e:	f043 0320 	orr.w	r3, r3, #32
 8005c42:	6023      	str	r3, [r4, #0]
 8005c44:	2378      	movs	r3, #120	; 0x78
 8005c46:	4828      	ldr	r0, [pc, #160]	; (8005ce8 <_printf_i+0x248>)
 8005c48:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8005c4c:	e7e3      	b.n	8005c16 <_printf_i+0x176>
 8005c4e:	065e      	lsls	r6, r3, #25
 8005c50:	bf48      	it	mi
 8005c52:	b2ad      	uxthmi	r5, r5
 8005c54:	e7e6      	b.n	8005c24 <_printf_i+0x184>
 8005c56:	4616      	mov	r6, r2
 8005c58:	e7bb      	b.n	8005bd2 <_printf_i+0x132>
 8005c5a:	680b      	ldr	r3, [r1, #0]
 8005c5c:	6826      	ldr	r6, [r4, #0]
 8005c5e:	1d1d      	adds	r5, r3, #4
 8005c60:	6960      	ldr	r0, [r4, #20]
 8005c62:	600d      	str	r5, [r1, #0]
 8005c64:	0635      	lsls	r5, r6, #24
 8005c66:	681b      	ldr	r3, [r3, #0]
 8005c68:	d501      	bpl.n	8005c6e <_printf_i+0x1ce>
 8005c6a:	6018      	str	r0, [r3, #0]
 8005c6c:	e002      	b.n	8005c74 <_printf_i+0x1d4>
 8005c6e:	0671      	lsls	r1, r6, #25
 8005c70:	d5fb      	bpl.n	8005c6a <_printf_i+0x1ca>
 8005c72:	8018      	strh	r0, [r3, #0]
 8005c74:	2300      	movs	r3, #0
 8005c76:	4616      	mov	r6, r2
 8005c78:	6123      	str	r3, [r4, #16]
 8005c7a:	e7ba      	b.n	8005bf2 <_printf_i+0x152>
 8005c7c:	680b      	ldr	r3, [r1, #0]
 8005c7e:	1d1a      	adds	r2, r3, #4
 8005c80:	600a      	str	r2, [r1, #0]
 8005c82:	681e      	ldr	r6, [r3, #0]
 8005c84:	2100      	movs	r1, #0
 8005c86:	4630      	mov	r0, r6
 8005c88:	6862      	ldr	r2, [r4, #4]
 8005c8a:	f000 f831 	bl	8005cf0 <memchr>
 8005c8e:	b108      	cbz	r0, 8005c94 <_printf_i+0x1f4>
 8005c90:	1b80      	subs	r0, r0, r6
 8005c92:	6060      	str	r0, [r4, #4]
 8005c94:	6863      	ldr	r3, [r4, #4]
 8005c96:	6123      	str	r3, [r4, #16]
 8005c98:	2300      	movs	r3, #0
 8005c9a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005c9e:	e7a8      	b.n	8005bf2 <_printf_i+0x152>
 8005ca0:	4632      	mov	r2, r6
 8005ca2:	4649      	mov	r1, r9
 8005ca4:	4640      	mov	r0, r8
 8005ca6:	6923      	ldr	r3, [r4, #16]
 8005ca8:	47d0      	blx	sl
 8005caa:	3001      	adds	r0, #1
 8005cac:	d0ab      	beq.n	8005c06 <_printf_i+0x166>
 8005cae:	6823      	ldr	r3, [r4, #0]
 8005cb0:	079b      	lsls	r3, r3, #30
 8005cb2:	d413      	bmi.n	8005cdc <_printf_i+0x23c>
 8005cb4:	68e0      	ldr	r0, [r4, #12]
 8005cb6:	9b03      	ldr	r3, [sp, #12]
 8005cb8:	4298      	cmp	r0, r3
 8005cba:	bfb8      	it	lt
 8005cbc:	4618      	movlt	r0, r3
 8005cbe:	e7a4      	b.n	8005c0a <_printf_i+0x16a>
 8005cc0:	2301      	movs	r3, #1
 8005cc2:	4632      	mov	r2, r6
 8005cc4:	4649      	mov	r1, r9
 8005cc6:	4640      	mov	r0, r8
 8005cc8:	47d0      	blx	sl
 8005cca:	3001      	adds	r0, #1
 8005ccc:	d09b      	beq.n	8005c06 <_printf_i+0x166>
 8005cce:	3501      	adds	r5, #1
 8005cd0:	68e3      	ldr	r3, [r4, #12]
 8005cd2:	9903      	ldr	r1, [sp, #12]
 8005cd4:	1a5b      	subs	r3, r3, r1
 8005cd6:	42ab      	cmp	r3, r5
 8005cd8:	dcf2      	bgt.n	8005cc0 <_printf_i+0x220>
 8005cda:	e7eb      	b.n	8005cb4 <_printf_i+0x214>
 8005cdc:	2500      	movs	r5, #0
 8005cde:	f104 0619 	add.w	r6, r4, #25
 8005ce2:	e7f5      	b.n	8005cd0 <_printf_i+0x230>
 8005ce4:	08006077 	.word	0x08006077
 8005ce8:	08006088 	.word	0x08006088

08005cec <__retarget_lock_acquire_recursive>:
 8005cec:	4770      	bx	lr

08005cee <__retarget_lock_release_recursive>:
 8005cee:	4770      	bx	lr

08005cf0 <memchr>:
 8005cf0:	4603      	mov	r3, r0
 8005cf2:	b510      	push	{r4, lr}
 8005cf4:	b2c9      	uxtb	r1, r1
 8005cf6:	4402      	add	r2, r0
 8005cf8:	4293      	cmp	r3, r2
 8005cfa:	4618      	mov	r0, r3
 8005cfc:	d101      	bne.n	8005d02 <memchr+0x12>
 8005cfe:	2000      	movs	r0, #0
 8005d00:	e003      	b.n	8005d0a <memchr+0x1a>
 8005d02:	7804      	ldrb	r4, [r0, #0]
 8005d04:	3301      	adds	r3, #1
 8005d06:	428c      	cmp	r4, r1
 8005d08:	d1f6      	bne.n	8005cf8 <memchr+0x8>
 8005d0a:	bd10      	pop	{r4, pc}

08005d0c <memcpy>:
 8005d0c:	440a      	add	r2, r1
 8005d0e:	4291      	cmp	r1, r2
 8005d10:	f100 33ff 	add.w	r3, r0, #4294967295
 8005d14:	d100      	bne.n	8005d18 <memcpy+0xc>
 8005d16:	4770      	bx	lr
 8005d18:	b510      	push	{r4, lr}
 8005d1a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005d1e:	4291      	cmp	r1, r2
 8005d20:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005d24:	d1f9      	bne.n	8005d1a <memcpy+0xe>
 8005d26:	bd10      	pop	{r4, pc}

08005d28 <memmove>:
 8005d28:	4288      	cmp	r0, r1
 8005d2a:	b510      	push	{r4, lr}
 8005d2c:	eb01 0402 	add.w	r4, r1, r2
 8005d30:	d902      	bls.n	8005d38 <memmove+0x10>
 8005d32:	4284      	cmp	r4, r0
 8005d34:	4623      	mov	r3, r4
 8005d36:	d807      	bhi.n	8005d48 <memmove+0x20>
 8005d38:	1e43      	subs	r3, r0, #1
 8005d3a:	42a1      	cmp	r1, r4
 8005d3c:	d008      	beq.n	8005d50 <memmove+0x28>
 8005d3e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005d42:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005d46:	e7f8      	b.n	8005d3a <memmove+0x12>
 8005d48:	4601      	mov	r1, r0
 8005d4a:	4402      	add	r2, r0
 8005d4c:	428a      	cmp	r2, r1
 8005d4e:	d100      	bne.n	8005d52 <memmove+0x2a>
 8005d50:	bd10      	pop	{r4, pc}
 8005d52:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005d56:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005d5a:	e7f7      	b.n	8005d4c <memmove+0x24>

08005d5c <_realloc_r>:
 8005d5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d5e:	4607      	mov	r7, r0
 8005d60:	4614      	mov	r4, r2
 8005d62:	460e      	mov	r6, r1
 8005d64:	b921      	cbnz	r1, 8005d70 <_realloc_r+0x14>
 8005d66:	4611      	mov	r1, r2
 8005d68:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005d6c:	f7ff bc36 	b.w	80055dc <_malloc_r>
 8005d70:	b922      	cbnz	r2, 8005d7c <_realloc_r+0x20>
 8005d72:	f7ff fbe7 	bl	8005544 <_free_r>
 8005d76:	4625      	mov	r5, r4
 8005d78:	4628      	mov	r0, r5
 8005d7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d7c:	f000 f814 	bl	8005da8 <_malloc_usable_size_r>
 8005d80:	42a0      	cmp	r0, r4
 8005d82:	d20f      	bcs.n	8005da4 <_realloc_r+0x48>
 8005d84:	4621      	mov	r1, r4
 8005d86:	4638      	mov	r0, r7
 8005d88:	f7ff fc28 	bl	80055dc <_malloc_r>
 8005d8c:	4605      	mov	r5, r0
 8005d8e:	2800      	cmp	r0, #0
 8005d90:	d0f2      	beq.n	8005d78 <_realloc_r+0x1c>
 8005d92:	4631      	mov	r1, r6
 8005d94:	4622      	mov	r2, r4
 8005d96:	f7ff ffb9 	bl	8005d0c <memcpy>
 8005d9a:	4631      	mov	r1, r6
 8005d9c:	4638      	mov	r0, r7
 8005d9e:	f7ff fbd1 	bl	8005544 <_free_r>
 8005da2:	e7e9      	b.n	8005d78 <_realloc_r+0x1c>
 8005da4:	4635      	mov	r5, r6
 8005da6:	e7e7      	b.n	8005d78 <_realloc_r+0x1c>

08005da8 <_malloc_usable_size_r>:
 8005da8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005dac:	1f18      	subs	r0, r3, #4
 8005dae:	2b00      	cmp	r3, #0
 8005db0:	bfbc      	itt	lt
 8005db2:	580b      	ldrlt	r3, [r1, r0]
 8005db4:	18c0      	addlt	r0, r0, r3
 8005db6:	4770      	bx	lr

08005db8 <round>:
 8005db8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005dba:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8005dbe:	f2a7 34ff 	subw	r4, r7, #1023	; 0x3ff
 8005dc2:	2c13      	cmp	r4, #19
 8005dc4:	4602      	mov	r2, r0
 8005dc6:	460b      	mov	r3, r1
 8005dc8:	4606      	mov	r6, r0
 8005dca:	460d      	mov	r5, r1
 8005dcc:	dc19      	bgt.n	8005e02 <round+0x4a>
 8005dce:	2c00      	cmp	r4, #0
 8005dd0:	da09      	bge.n	8005de6 <round+0x2e>
 8005dd2:	3401      	adds	r4, #1
 8005dd4:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 8005dd8:	d103      	bne.n	8005de2 <round+0x2a>
 8005dda:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8005dde:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8005de2:	2200      	movs	r2, #0
 8005de4:	e02a      	b.n	8005e3c <round+0x84>
 8005de6:	4917      	ldr	r1, [pc, #92]	; (8005e44 <round+0x8c>)
 8005de8:	4121      	asrs	r1, r4
 8005dea:	ea03 0001 	and.w	r0, r3, r1
 8005dee:	4302      	orrs	r2, r0
 8005df0:	d010      	beq.n	8005e14 <round+0x5c>
 8005df2:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8005df6:	fa42 f404 	asr.w	r4, r2, r4
 8005dfa:	4423      	add	r3, r4
 8005dfc:	ea23 0301 	bic.w	r3, r3, r1
 8005e00:	e7ef      	b.n	8005de2 <round+0x2a>
 8005e02:	2c33      	cmp	r4, #51	; 0x33
 8005e04:	dd09      	ble.n	8005e1a <round+0x62>
 8005e06:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
 8005e0a:	d103      	bne.n	8005e14 <round+0x5c>
 8005e0c:	f7fa face 	bl	80003ac <__adddf3>
 8005e10:	4606      	mov	r6, r0
 8005e12:	460d      	mov	r5, r1
 8005e14:	4630      	mov	r0, r6
 8005e16:	4629      	mov	r1, r5
 8005e18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005e1a:	f04f 30ff 	mov.w	r0, #4294967295
 8005e1e:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8005e22:	40f8      	lsrs	r0, r7
 8005e24:	4202      	tst	r2, r0
 8005e26:	d0f5      	beq.n	8005e14 <round+0x5c>
 8005e28:	2101      	movs	r1, #1
 8005e2a:	f1c4 0433 	rsb	r4, r4, #51	; 0x33
 8005e2e:	fa01 f404 	lsl.w	r4, r1, r4
 8005e32:	1912      	adds	r2, r2, r4
 8005e34:	bf28      	it	cs
 8005e36:	185b      	addcs	r3, r3, r1
 8005e38:	ea22 0200 	bic.w	r2, r2, r0
 8005e3c:	4619      	mov	r1, r3
 8005e3e:	4610      	mov	r0, r2
 8005e40:	e7e6      	b.n	8005e10 <round+0x58>
 8005e42:	bf00      	nop
 8005e44:	000fffff 	.word	0x000fffff

08005e48 <_init>:
 8005e48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005e4a:	bf00      	nop
 8005e4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005e4e:	bc08      	pop	{r3}
 8005e50:	469e      	mov	lr, r3
 8005e52:	4770      	bx	lr

08005e54 <_fini>:
 8005e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005e56:	bf00      	nop
 8005e58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005e5a:	bc08      	pop	{r3}
 8005e5c:	469e      	mov	lr, r3
 8005e5e:	4770      	bx	lr

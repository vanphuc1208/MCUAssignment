
Assignment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004e18  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000084  08004f24  08004f24  00014f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004fa8  08004fa8  000200d0  2**0
                  CONTENTS
  4 .ARM          00000000  08004fa8  08004fa8  000200d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004fa8  08004fa8  000200d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004fa8  08004fa8  00014fa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004fac  08004fac  00014fac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000d0  20000000  08004fb0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000198  200000d0  08005080  000200d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000268  08005080  00020268  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000122dc  00000000  00000000  000200f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002aab  00000000  00000000  000323d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e70  00000000  00000000  00034e80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000d30  00000000  00000000  00035cf0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018e7b  00000000  00000000  00036a20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011a9d  00000000  00000000  0004f89b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b917  00000000  00000000  00061338  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000ecc4f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003d54  00000000  00000000  000ecca4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000d0 	.word	0x200000d0
 8000128:	00000000 	.word	0x00000000
 800012c:	08004f0c 	.word	0x08004f0c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000d4 	.word	0x200000d4
 8000148:	08004f0c 	.word	0x08004f0c

0800014c <Button_Reading>:
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
 8000152:	2300      	movs	r3, #0
 8000154:	607b      	str	r3, [r7, #4]
 8000156:	e076      	b.n	8000246 <Button_Reading+0xfa>
 8000158:	4a3f      	ldr	r2, [pc, #252]	; (8000258 <Button_Reading+0x10c>)
 800015a:	687b      	ldr	r3, [r7, #4]
 800015c:	4413      	add	r3, r2
 800015e:	7819      	ldrb	r1, [r3, #0]
 8000160:	4a3e      	ldr	r2, [pc, #248]	; (800025c <Button_Reading+0x110>)
 8000162:	687b      	ldr	r3, [r7, #4]
 8000164:	4413      	add	r3, r2
 8000166:	460a      	mov	r2, r1
 8000168:	701a      	strb	r2, [r3, #0]
 800016a:	4a3d      	ldr	r2, [pc, #244]	; (8000260 <Button_Reading+0x114>)
 800016c:	687b      	ldr	r3, [r7, #4]
 800016e:	4413      	add	r3, r2
 8000170:	7819      	ldrb	r1, [r3, #0]
 8000172:	4a39      	ldr	r2, [pc, #228]	; (8000258 <Button_Reading+0x10c>)
 8000174:	687b      	ldr	r3, [r7, #4]
 8000176:	4413      	add	r3, r2
 8000178:	460a      	mov	r2, r1
 800017a:	701a      	strb	r2, [r3, #0]
 800017c:	4a39      	ldr	r2, [pc, #228]	; (8000264 <Button_Reading+0x118>)
 800017e:	687b      	ldr	r3, [r7, #4]
 8000180:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000184:	4938      	ldr	r1, [pc, #224]	; (8000268 <Button_Reading+0x11c>)
 8000186:	687b      	ldr	r3, [r7, #4]
 8000188:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800018c:	b29b      	uxth	r3, r3
 800018e:	4619      	mov	r1, r3
 8000190:	4610      	mov	r0, r2
 8000192:	f002 f843 	bl	800221c <HAL_GPIO_ReadPin>
 8000196:	4603      	mov	r3, r0
 8000198:	4619      	mov	r1, r3
 800019a:	4a31      	ldr	r2, [pc, #196]	; (8000260 <Button_Reading+0x114>)
 800019c:	687b      	ldr	r3, [r7, #4]
 800019e:	4413      	add	r3, r2
 80001a0:	460a      	mov	r2, r1
 80001a2:	701a      	strb	r2, [r3, #0]
 80001a4:	4a2e      	ldr	r2, [pc, #184]	; (8000260 <Button_Reading+0x114>)
 80001a6:	687b      	ldr	r3, [r7, #4]
 80001a8:	4413      	add	r3, r2
 80001aa:	781a      	ldrb	r2, [r3, #0]
 80001ac:	492a      	ldr	r1, [pc, #168]	; (8000258 <Button_Reading+0x10c>)
 80001ae:	687b      	ldr	r3, [r7, #4]
 80001b0:	440b      	add	r3, r1
 80001b2:	781b      	ldrb	r3, [r3, #0]
 80001b4:	429a      	cmp	r2, r3
 80001b6:	d12d      	bne.n	8000214 <Button_Reading+0xc8>
 80001b8:	4a27      	ldr	r2, [pc, #156]	; (8000258 <Button_Reading+0x10c>)
 80001ba:	687b      	ldr	r3, [r7, #4]
 80001bc:	4413      	add	r3, r2
 80001be:	781a      	ldrb	r2, [r3, #0]
 80001c0:	4926      	ldr	r1, [pc, #152]	; (800025c <Button_Reading+0x110>)
 80001c2:	687b      	ldr	r3, [r7, #4]
 80001c4:	440b      	add	r3, r1
 80001c6:	781b      	ldrb	r3, [r3, #0]
 80001c8:	429a      	cmp	r2, r3
 80001ca:	d123      	bne.n	8000214 <Button_Reading+0xc8>
 80001cc:	4a24      	ldr	r2, [pc, #144]	; (8000260 <Button_Reading+0x114>)
 80001ce:	687b      	ldr	r3, [r7, #4]
 80001d0:	4413      	add	r3, r2
 80001d2:	781a      	ldrb	r2, [r3, #0]
 80001d4:	4925      	ldr	r1, [pc, #148]	; (800026c <Button_Reading+0x120>)
 80001d6:	687b      	ldr	r3, [r7, #4]
 80001d8:	440b      	add	r3, r1
 80001da:	781b      	ldrb	r3, [r3, #0]
 80001dc:	429a      	cmp	r2, r3
 80001de:	d02e      	beq.n	800023e <Button_Reading+0xf2>
 80001e0:	4a1f      	ldr	r2, [pc, #124]	; (8000260 <Button_Reading+0x114>)
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	4413      	add	r3, r2
 80001e6:	7819      	ldrb	r1, [r3, #0]
 80001e8:	4a20      	ldr	r2, [pc, #128]	; (800026c <Button_Reading+0x120>)
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4413      	add	r3, r2
 80001ee:	460a      	mov	r2, r1
 80001f0:	701a      	strb	r2, [r3, #0]
 80001f2:	4a1e      	ldr	r2, [pc, #120]	; (800026c <Button_Reading+0x120>)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	4413      	add	r3, r2
 80001f8:	781b      	ldrb	r3, [r3, #0]
 80001fa:	2b00      	cmp	r3, #0
 80001fc:	d11f      	bne.n	800023e <Button_Reading+0xf2>
 80001fe:	4a1c      	ldr	r2, [pc, #112]	; (8000270 <Button_Reading+0x124>)
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	2101      	movs	r1, #1
 8000204:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000208:	4a1a      	ldr	r2, [pc, #104]	; (8000274 <Button_Reading+0x128>)
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	2164      	movs	r1, #100	; 0x64
 800020e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000212:	e014      	b.n	800023e <Button_Reading+0xf2>
 8000214:	4a17      	ldr	r2, [pc, #92]	; (8000274 <Button_Reading+0x128>)
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800021c:	1e5a      	subs	r2, r3, #1
 800021e:	4915      	ldr	r1, [pc, #84]	; (8000274 <Button_Reading+0x128>)
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000226:	4a13      	ldr	r2, [pc, #76]	; (8000274 <Button_Reading+0x128>)
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800022e:	2b00      	cmp	r3, #0
 8000230:	dc06      	bgt.n	8000240 <Button_Reading+0xf4>
 8000232:	4a0e      	ldr	r2, [pc, #56]	; (800026c <Button_Reading+0x120>)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	4413      	add	r3, r2
 8000238:	2201      	movs	r2, #1
 800023a:	701a      	strb	r2, [r3, #0]
 800023c:	e000      	b.n	8000240 <Button_Reading+0xf4>
 800023e:	bf00      	nop
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	3301      	adds	r3, #1
 8000244:	607b      	str	r3, [r7, #4]
 8000246:	687b      	ldr	r3, [r7, #4]
 8000248:	2b03      	cmp	r3, #3
 800024a:	dd85      	ble.n	8000158 <Button_Reading+0xc>
 800024c:	bf00      	nop
 800024e:	bf00      	nop
 8000250:	3708      	adds	r7, #8
 8000252:	46bd      	mov	sp, r7
 8000254:	bd80      	pop	{r7, pc}
 8000256:	bf00      	nop
 8000258:	20000100 	.word	0x20000100
 800025c:	20000104 	.word	0x20000104
 8000260:	200000fc 	.word	0x200000fc
 8000264:	20000004 	.word	0x20000004
 8000268:	20000014 	.word	0x20000014
 800026c:	20000000 	.word	0x20000000
 8000270:	20000108 	.word	0x20000108
 8000274:	200000ec 	.word	0x200000ec

08000278 <Is_Button_Pressed>:
 8000278:	b480      	push	{r7}
 800027a:	b083      	sub	sp, #12
 800027c:	af00      	add	r7, sp, #0
 800027e:	6078      	str	r0, [r7, #4]
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	2b03      	cmp	r3, #3
 8000284:	dc02      	bgt.n	800028c <Is_Button_Pressed+0x14>
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	2b00      	cmp	r3, #0
 800028a:	da01      	bge.n	8000290 <Is_Button_Pressed+0x18>
 800028c:	2300      	movs	r3, #0
 800028e:	e00d      	b.n	80002ac <Is_Button_Pressed+0x34>
 8000290:	4a09      	ldr	r2, [pc, #36]	; (80002b8 <Is_Button_Pressed+0x40>)
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000298:	2b01      	cmp	r3, #1
 800029a:	d106      	bne.n	80002aa <Is_Button_Pressed+0x32>
 800029c:	4a06      	ldr	r2, [pc, #24]	; (80002b8 <Is_Button_Pressed+0x40>)
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	2100      	movs	r1, #0
 80002a2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80002a6:	2301      	movs	r3, #1
 80002a8:	e000      	b.n	80002ac <Is_Button_Pressed+0x34>
 80002aa:	2300      	movs	r3, #0
 80002ac:	4618      	mov	r0, r3
 80002ae:	370c      	adds	r7, #12
 80002b0:	46bd      	mov	sp, r7
 80002b2:	bc80      	pop	{r7}
 80002b4:	4770      	bx	lr
 80002b6:	bf00      	nop
 80002b8:	20000108 	.word	0x20000108

080002bc <buzzer>:
 */

#include "buzzer.h"

void buzzer(int duty_cycle)
{
 80002bc:	b480      	push	{r7}
 80002be:	b083      	sub	sp, #12
 80002c0:	af00      	add	r7, sp, #0
 80002c2:	6078      	str	r0, [r7, #4]
	 htim3.Instance->CCR1 = duty_cycle;
 80002c4:	4b04      	ldr	r3, [pc, #16]	; (80002d8 <buzzer+0x1c>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	687a      	ldr	r2, [r7, #4]
 80002ca:	635a      	str	r2, [r3, #52]	; 0x34
//     __HAL_TIM_SET_AUTORELOAD(&htim3, buzzerValue*2); // Increasing frequency : Auto-Reload Register - ARR
//     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, buzzerValue); // Increasing duty cycle: Capture/Compare Register - CCR
}
 80002cc:	bf00      	nop
 80002ce:	370c      	adds	r7, #12
 80002d0:	46bd      	mov	sp, r7
 80002d2:	bc80      	pop	{r7}
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	2000013c 	.word	0x2000013c

080002dc <clearAllLed1>:
 80002dc:	b580      	push	{r7, lr}
 80002de:	af00      	add	r7, sp, #0
 80002e0:	2200      	movs	r2, #0
 80002e2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80002e6:	4805      	ldr	r0, [pc, #20]	; (80002fc <clearAllLed1+0x20>)
 80002e8:	f001 ffaf 	bl	800224a <HAL_GPIO_WritePin>
 80002ec:	2200      	movs	r2, #0
 80002ee:	2108      	movs	r1, #8
 80002f0:	4803      	ldr	r0, [pc, #12]	; (8000300 <clearAllLed1+0x24>)
 80002f2:	f001 ffaa 	bl	800224a <HAL_GPIO_WritePin>
 80002f6:	bf00      	nop
 80002f8:	bd80      	pop	{r7, pc}
 80002fa:	bf00      	nop
 80002fc:	40010800 	.word	0x40010800
 8000300:	40010c00 	.word	0x40010c00

08000304 <clearAllLed2>:
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
 8000308:	2200      	movs	r2, #0
 800030a:	2120      	movs	r1, #32
 800030c:	4804      	ldr	r0, [pc, #16]	; (8000320 <clearAllLed2+0x1c>)
 800030e:	f001 ff9c 	bl	800224a <HAL_GPIO_WritePin>
 8000312:	2200      	movs	r2, #0
 8000314:	2110      	movs	r1, #16
 8000316:	4802      	ldr	r0, [pc, #8]	; (8000320 <clearAllLed2+0x1c>)
 8000318:	f001 ff97 	bl	800224a <HAL_GPIO_WritePin>
 800031c:	bf00      	nop
 800031e:	bd80      	pop	{r7, pc}
 8000320:	40010c00 	.word	0x40010c00

08000324 <displayRed1>:
 8000324:	b580      	push	{r7, lr}
 8000326:	af00      	add	r7, sp, #0
 8000328:	2201      	movs	r2, #1
 800032a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800032e:	4805      	ldr	r0, [pc, #20]	; (8000344 <displayRed1+0x20>)
 8000330:	f001 ff8b 	bl	800224a <HAL_GPIO_WritePin>
 8000334:	2200      	movs	r2, #0
 8000336:	2108      	movs	r1, #8
 8000338:	4803      	ldr	r0, [pc, #12]	; (8000348 <displayRed1+0x24>)
 800033a:	f001 ff86 	bl	800224a <HAL_GPIO_WritePin>
 800033e:	bf00      	nop
 8000340:	bd80      	pop	{r7, pc}
 8000342:	bf00      	nop
 8000344:	40010800 	.word	0x40010800
 8000348:	40010c00 	.word	0x40010c00

0800034c <displayYellow1>:
 800034c:	b580      	push	{r7, lr}
 800034e:	af00      	add	r7, sp, #0
 8000350:	2201      	movs	r2, #1
 8000352:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000356:	4805      	ldr	r0, [pc, #20]	; (800036c <displayYellow1+0x20>)
 8000358:	f001 ff77 	bl	800224a <HAL_GPIO_WritePin>
 800035c:	2201      	movs	r2, #1
 800035e:	2108      	movs	r1, #8
 8000360:	4803      	ldr	r0, [pc, #12]	; (8000370 <displayYellow1+0x24>)
 8000362:	f001 ff72 	bl	800224a <HAL_GPIO_WritePin>
 8000366:	bf00      	nop
 8000368:	bd80      	pop	{r7, pc}
 800036a:	bf00      	nop
 800036c:	40010800 	.word	0x40010800
 8000370:	40010c00 	.word	0x40010c00

08000374 <displayGreen1>:
 8000374:	b580      	push	{r7, lr}
 8000376:	af00      	add	r7, sp, #0
 8000378:	2200      	movs	r2, #0
 800037a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800037e:	4805      	ldr	r0, [pc, #20]	; (8000394 <displayGreen1+0x20>)
 8000380:	f001 ff63 	bl	800224a <HAL_GPIO_WritePin>
 8000384:	2201      	movs	r2, #1
 8000386:	2108      	movs	r1, #8
 8000388:	4803      	ldr	r0, [pc, #12]	; (8000398 <displayGreen1+0x24>)
 800038a:	f001 ff5e 	bl	800224a <HAL_GPIO_WritePin>
 800038e:	bf00      	nop
 8000390:	bd80      	pop	{r7, pc}
 8000392:	bf00      	nop
 8000394:	40010800 	.word	0x40010800
 8000398:	40010c00 	.word	0x40010c00

0800039c <displayRed2>:
 800039c:	b580      	push	{r7, lr}
 800039e:	af00      	add	r7, sp, #0
 80003a0:	2201      	movs	r2, #1
 80003a2:	2120      	movs	r1, #32
 80003a4:	4804      	ldr	r0, [pc, #16]	; (80003b8 <displayRed2+0x1c>)
 80003a6:	f001 ff50 	bl	800224a <HAL_GPIO_WritePin>
 80003aa:	2200      	movs	r2, #0
 80003ac:	2110      	movs	r1, #16
 80003ae:	4802      	ldr	r0, [pc, #8]	; (80003b8 <displayRed2+0x1c>)
 80003b0:	f001 ff4b 	bl	800224a <HAL_GPIO_WritePin>
 80003b4:	bf00      	nop
 80003b6:	bd80      	pop	{r7, pc}
 80003b8:	40010c00 	.word	0x40010c00

080003bc <displayYellow2>:
 80003bc:	b580      	push	{r7, lr}
 80003be:	af00      	add	r7, sp, #0
 80003c0:	2201      	movs	r2, #1
 80003c2:	2120      	movs	r1, #32
 80003c4:	4804      	ldr	r0, [pc, #16]	; (80003d8 <displayYellow2+0x1c>)
 80003c6:	f001 ff40 	bl	800224a <HAL_GPIO_WritePin>
 80003ca:	2201      	movs	r2, #1
 80003cc:	2110      	movs	r1, #16
 80003ce:	4802      	ldr	r0, [pc, #8]	; (80003d8 <displayYellow2+0x1c>)
 80003d0:	f001 ff3b 	bl	800224a <HAL_GPIO_WritePin>
 80003d4:	bf00      	nop
 80003d6:	bd80      	pop	{r7, pc}
 80003d8:	40010c00 	.word	0x40010c00

080003dc <displayGreen2>:
 80003dc:	b580      	push	{r7, lr}
 80003de:	af00      	add	r7, sp, #0
 80003e0:	2200      	movs	r2, #0
 80003e2:	2120      	movs	r1, #32
 80003e4:	4804      	ldr	r0, [pc, #16]	; (80003f8 <displayGreen2+0x1c>)
 80003e6:	f001 ff30 	bl	800224a <HAL_GPIO_WritePin>
 80003ea:	2201      	movs	r2, #1
 80003ec:	2110      	movs	r1, #16
 80003ee:	4802      	ldr	r0, [pc, #8]	; (80003f8 <displayGreen2+0x1c>)
 80003f0:	f001 ff2b 	bl	800224a <HAL_GPIO_WritePin>
 80003f4:	bf00      	nop
 80003f6:	bd80      	pop	{r7, pc}
 80003f8:	40010c00 	.word	0x40010c00

080003fc <toggleRed>:
 80003fc:	b580      	push	{r7, lr}
 80003fe:	af00      	add	r7, sp, #0
 8000400:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000404:	4804      	ldr	r0, [pc, #16]	; (8000418 <toggleRed+0x1c>)
 8000406:	f001 ff38 	bl	800227a <HAL_GPIO_TogglePin>
 800040a:	2120      	movs	r1, #32
 800040c:	4803      	ldr	r0, [pc, #12]	; (800041c <toggleRed+0x20>)
 800040e:	f001 ff34 	bl	800227a <HAL_GPIO_TogglePin>
 8000412:	bf00      	nop
 8000414:	bd80      	pop	{r7, pc}
 8000416:	bf00      	nop
 8000418:	40010800 	.word	0x40010800
 800041c:	40010c00 	.word	0x40010c00

08000420 <toggleYellow>:
 8000420:	b580      	push	{r7, lr}
 8000422:	af00      	add	r7, sp, #0
 8000424:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000428:	4808      	ldr	r0, [pc, #32]	; (800044c <toggleYellow+0x2c>)
 800042a:	f001 ff26 	bl	800227a <HAL_GPIO_TogglePin>
 800042e:	2108      	movs	r1, #8
 8000430:	4807      	ldr	r0, [pc, #28]	; (8000450 <toggleYellow+0x30>)
 8000432:	f001 ff22 	bl	800227a <HAL_GPIO_TogglePin>
 8000436:	2120      	movs	r1, #32
 8000438:	4805      	ldr	r0, [pc, #20]	; (8000450 <toggleYellow+0x30>)
 800043a:	f001 ff1e 	bl	800227a <HAL_GPIO_TogglePin>
 800043e:	2110      	movs	r1, #16
 8000440:	4803      	ldr	r0, [pc, #12]	; (8000450 <toggleYellow+0x30>)
 8000442:	f001 ff1a 	bl	800227a <HAL_GPIO_TogglePin>
 8000446:	bf00      	nop
 8000448:	bd80      	pop	{r7, pc}
 800044a:	bf00      	nop
 800044c:	40010800 	.word	0x40010800
 8000450:	40010c00 	.word	0x40010c00

08000454 <toggleGreen>:
 8000454:	b580      	push	{r7, lr}
 8000456:	af00      	add	r7, sp, #0
 8000458:	2108      	movs	r1, #8
 800045a:	4804      	ldr	r0, [pc, #16]	; (800046c <toggleGreen+0x18>)
 800045c:	f001 ff0d 	bl	800227a <HAL_GPIO_TogglePin>
 8000460:	2110      	movs	r1, #16
 8000462:	4802      	ldr	r0, [pc, #8]	; (800046c <toggleGreen+0x18>)
 8000464:	f001 ff09 	bl	800227a <HAL_GPIO_TogglePin>
 8000468:	bf00      	nop
 800046a:	bd80      	pop	{r7, pc}
 800046c:	40010c00 	.word	0x40010c00

08000470 <clearPedestrian>:
 8000470:	b580      	push	{r7, lr}
 8000472:	af00      	add	r7, sp, #0
 8000474:	2200      	movs	r2, #0
 8000476:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800047a:	4805      	ldr	r0, [pc, #20]	; (8000490 <clearPedestrian+0x20>)
 800047c:	f001 fee5 	bl	800224a <HAL_GPIO_WritePin>
 8000480:	2200      	movs	r2, #0
 8000482:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000486:	4803      	ldr	r0, [pc, #12]	; (8000494 <clearPedestrian+0x24>)
 8000488:	f001 fedf 	bl	800224a <HAL_GPIO_WritePin>
 800048c:	bf00      	nop
 800048e:	bd80      	pop	{r7, pc}
 8000490:	40010c00 	.word	0x40010c00
 8000494:	40010800 	.word	0x40010800

08000498 <displayPedestrianRed>:
 8000498:	b580      	push	{r7, lr}
 800049a:	af00      	add	r7, sp, #0
 800049c:	2201      	movs	r2, #1
 800049e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80004a2:	4805      	ldr	r0, [pc, #20]	; (80004b8 <displayPedestrianRed+0x20>)
 80004a4:	f001 fed1 	bl	800224a <HAL_GPIO_WritePin>
 80004a8:	2200      	movs	r2, #0
 80004aa:	f44f 7180 	mov.w	r1, #256	; 0x100
 80004ae:	4803      	ldr	r0, [pc, #12]	; (80004bc <displayPedestrianRed+0x24>)
 80004b0:	f001 fecb 	bl	800224a <HAL_GPIO_WritePin>
 80004b4:	bf00      	nop
 80004b6:	bd80      	pop	{r7, pc}
 80004b8:	40010c00 	.word	0x40010c00
 80004bc:	40010800 	.word	0x40010800

080004c0 <displayPedestrianGreen>:
 80004c0:	b580      	push	{r7, lr}
 80004c2:	af00      	add	r7, sp, #0
 80004c4:	2200      	movs	r2, #0
 80004c6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80004ca:	4805      	ldr	r0, [pc, #20]	; (80004e0 <displayPedestrianGreen+0x20>)
 80004cc:	f001 febd 	bl	800224a <HAL_GPIO_WritePin>
 80004d0:	2201      	movs	r2, #1
 80004d2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80004d6:	4803      	ldr	r0, [pc, #12]	; (80004e4 <displayPedestrianGreen+0x24>)
 80004d8:	f001 feb7 	bl	800224a <HAL_GPIO_WritePin>
 80004dc:	bf00      	nop
 80004de:	bd80      	pop	{r7, pc}
 80004e0:	40010c00 	.word	0x40010c00
 80004e4:	40010800 	.word	0x40010800

080004e8 <increase>:
 */

#include "global.h"

void increase()
{
 80004e8:	b480      	push	{r7}
 80004ea:	af00      	add	r7, sp, #0
	time1++;
 80004ec:	4b07      	ldr	r3, [pc, #28]	; (800050c <increase+0x24>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	3301      	adds	r3, #1
 80004f2:	4a06      	ldr	r2, [pc, #24]	; (800050c <increase+0x24>)
 80004f4:	6013      	str	r3, [r2, #0]
	if(time1 > 99)
 80004f6:	4b05      	ldr	r3, [pc, #20]	; (800050c <increase+0x24>)
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	2b63      	cmp	r3, #99	; 0x63
 80004fc:	dd02      	ble.n	8000504 <increase+0x1c>
		time1 = 1;
 80004fe:	4b03      	ldr	r3, [pc, #12]	; (800050c <increase+0x24>)
 8000500:	2201      	movs	r2, #1
 8000502:	601a      	str	r2, [r3, #0]
}
 8000504:	bf00      	nop
 8000506:	46bd      	mov	sp, r7
 8000508:	bc80      	pop	{r7}
 800050a:	4770      	bx	lr
 800050c:	20000138 	.word	0x20000138

08000510 <balance>:

void balance(int RED, int AMBER, int GREEN)
{
 8000510:	b480      	push	{r7}
 8000512:	b085      	sub	sp, #20
 8000514:	af00      	add	r7, sp, #0
 8000516:	60f8      	str	r0, [r7, #12]
 8000518:	60b9      	str	r1, [r7, #8]
 800051a:	607a      	str	r2, [r7, #4]
	if(RED > timeRed)
 800051c:	4b5c      	ldr	r3, [pc, #368]	; (8000690 <balance+0x180>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	68fa      	ldr	r2, [r7, #12]
 8000522:	429a      	cmp	r2, r3
 8000524:	dd19      	ble.n	800055a <balance+0x4a>
	{
		timeYellow = timeYellow * (RED / timeRed);
 8000526:	4b5a      	ldr	r3, [pc, #360]	; (8000690 <balance+0x180>)
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	68fa      	ldr	r2, [r7, #12]
 800052c:	fb92 f3f3 	sdiv	r3, r2, r3
 8000530:	4a58      	ldr	r2, [pc, #352]	; (8000694 <balance+0x184>)
 8000532:	6812      	ldr	r2, [r2, #0]
 8000534:	fb02 f303 	mul.w	r3, r2, r3
 8000538:	4a56      	ldr	r2, [pc, #344]	; (8000694 <balance+0x184>)
 800053a:	6013      	str	r3, [r2, #0]
		timeGreen = timeGreen * (RED / timeRed);
 800053c:	4b54      	ldr	r3, [pc, #336]	; (8000690 <balance+0x180>)
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	68fa      	ldr	r2, [r7, #12]
 8000542:	fb92 f3f3 	sdiv	r3, r2, r3
 8000546:	4a54      	ldr	r2, [pc, #336]	; (8000698 <balance+0x188>)
 8000548:	6812      	ldr	r2, [r2, #0]
 800054a:	fb02 f303 	mul.w	r3, r2, r3
 800054e:	4a52      	ldr	r2, [pc, #328]	; (8000698 <balance+0x188>)
 8000550:	6013      	str	r3, [r2, #0]
		timeRed = RED;
 8000552:	4a4f      	ldr	r2, [pc, #316]	; (8000690 <balance+0x180>)
 8000554:	68fb      	ldr	r3, [r7, #12]
 8000556:	6013      	str	r3, [r2, #0]
	{
		timeRed = (GREEN / 3) * 5;
		timeYellow = (GREEN / 3) * 2;
		timeGreen = GREEN;
	}
}
 8000558:	e094      	b.n	8000684 <balance+0x174>
	else if(AMBER > timeYellow)
 800055a:	4b4e      	ldr	r3, [pc, #312]	; (8000694 <balance+0x184>)
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	68ba      	ldr	r2, [r7, #8]
 8000560:	429a      	cmp	r2, r3
 8000562:	dd19      	ble.n	8000598 <balance+0x88>
		timeRed = timeRed * (AMBER / timeYellow);
 8000564:	4b4b      	ldr	r3, [pc, #300]	; (8000694 <balance+0x184>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	68ba      	ldr	r2, [r7, #8]
 800056a:	fb92 f3f3 	sdiv	r3, r2, r3
 800056e:	4a48      	ldr	r2, [pc, #288]	; (8000690 <balance+0x180>)
 8000570:	6812      	ldr	r2, [r2, #0]
 8000572:	fb02 f303 	mul.w	r3, r2, r3
 8000576:	4a46      	ldr	r2, [pc, #280]	; (8000690 <balance+0x180>)
 8000578:	6013      	str	r3, [r2, #0]
		timeGreen = timeGreen * (AMBER / timeYellow);
 800057a:	4b46      	ldr	r3, [pc, #280]	; (8000694 <balance+0x184>)
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	68ba      	ldr	r2, [r7, #8]
 8000580:	fb92 f3f3 	sdiv	r3, r2, r3
 8000584:	4a44      	ldr	r2, [pc, #272]	; (8000698 <balance+0x188>)
 8000586:	6812      	ldr	r2, [r2, #0]
 8000588:	fb02 f303 	mul.w	r3, r2, r3
 800058c:	4a42      	ldr	r2, [pc, #264]	; (8000698 <balance+0x188>)
 800058e:	6013      	str	r3, [r2, #0]
		timeYellow = AMBER;
 8000590:	4a40      	ldr	r2, [pc, #256]	; (8000694 <balance+0x184>)
 8000592:	68bb      	ldr	r3, [r7, #8]
 8000594:	6013      	str	r3, [r2, #0]
}
 8000596:	e075      	b.n	8000684 <balance+0x174>
	else if(GREEN > timeGreen)
 8000598:	4b3f      	ldr	r3, [pc, #252]	; (8000698 <balance+0x188>)
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	687a      	ldr	r2, [r7, #4]
 800059e:	429a      	cmp	r2, r3
 80005a0:	dd18      	ble.n	80005d4 <balance+0xc4>
		timeRed = timeRed * (GREEN / timeGreen);
 80005a2:	4b3d      	ldr	r3, [pc, #244]	; (8000698 <balance+0x188>)
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	687a      	ldr	r2, [r7, #4]
 80005a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80005ac:	4a38      	ldr	r2, [pc, #224]	; (8000690 <balance+0x180>)
 80005ae:	6812      	ldr	r2, [r2, #0]
 80005b0:	fb02 f303 	mul.w	r3, r2, r3
 80005b4:	4a36      	ldr	r2, [pc, #216]	; (8000690 <balance+0x180>)
 80005b6:	6013      	str	r3, [r2, #0]
		timeYellow = AMBER * (GREEN / timeGreen);
 80005b8:	4b37      	ldr	r3, [pc, #220]	; (8000698 <balance+0x188>)
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	687a      	ldr	r2, [r7, #4]
 80005be:	fb92 f3f3 	sdiv	r3, r2, r3
 80005c2:	68ba      	ldr	r2, [r7, #8]
 80005c4:	fb02 f303 	mul.w	r3, r2, r3
 80005c8:	4a32      	ldr	r2, [pc, #200]	; (8000694 <balance+0x184>)
 80005ca:	6013      	str	r3, [r2, #0]
		timeGreen = GREEN;
 80005cc:	4a32      	ldr	r2, [pc, #200]	; (8000698 <balance+0x188>)
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	6013      	str	r3, [r2, #0]
}
 80005d2:	e057      	b.n	8000684 <balance+0x174>
	else if(RED < timeRed)
 80005d4:	4b2e      	ldr	r3, [pc, #184]	; (8000690 <balance+0x180>)
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	68fa      	ldr	r2, [r7, #12]
 80005da:	429a      	cmp	r2, r3
 80005dc:	da19      	bge.n	8000612 <balance+0x102>
		timeYellow = (RED / 5) * 2;
 80005de:	68fb      	ldr	r3, [r7, #12]
 80005e0:	4a2e      	ldr	r2, [pc, #184]	; (800069c <balance+0x18c>)
 80005e2:	fb82 1203 	smull	r1, r2, r2, r3
 80005e6:	1052      	asrs	r2, r2, #1
 80005e8:	17db      	asrs	r3, r3, #31
 80005ea:	1ad3      	subs	r3, r2, r3
 80005ec:	005b      	lsls	r3, r3, #1
 80005ee:	4a29      	ldr	r2, [pc, #164]	; (8000694 <balance+0x184>)
 80005f0:	6013      	str	r3, [r2, #0]
		timeGreen = (RED / 5) * 3;
 80005f2:	68fb      	ldr	r3, [r7, #12]
 80005f4:	4a29      	ldr	r2, [pc, #164]	; (800069c <balance+0x18c>)
 80005f6:	fb82 1203 	smull	r1, r2, r2, r3
 80005fa:	1052      	asrs	r2, r2, #1
 80005fc:	17db      	asrs	r3, r3, #31
 80005fe:	1ad2      	subs	r2, r2, r3
 8000600:	4613      	mov	r3, r2
 8000602:	005b      	lsls	r3, r3, #1
 8000604:	4413      	add	r3, r2
 8000606:	4a24      	ldr	r2, [pc, #144]	; (8000698 <balance+0x188>)
 8000608:	6013      	str	r3, [r2, #0]
		timeRed = RED;
 800060a:	4a21      	ldr	r2, [pc, #132]	; (8000690 <balance+0x180>)
 800060c:	68fb      	ldr	r3, [r7, #12]
 800060e:	6013      	str	r3, [r2, #0]
}
 8000610:	e038      	b.n	8000684 <balance+0x174>
	else if(AMBER < timeYellow)
 8000612:	4b20      	ldr	r3, [pc, #128]	; (8000694 <balance+0x184>)
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	68ba      	ldr	r2, [r7, #8]
 8000618:	429a      	cmp	r2, r3
 800061a:	da17      	bge.n	800064c <balance+0x13c>
		timeRed = (AMBER / 2) * 5;
 800061c:	68bb      	ldr	r3, [r7, #8]
 800061e:	0fda      	lsrs	r2, r3, #31
 8000620:	4413      	add	r3, r2
 8000622:	105b      	asrs	r3, r3, #1
 8000624:	461a      	mov	r2, r3
 8000626:	4613      	mov	r3, r2
 8000628:	009b      	lsls	r3, r3, #2
 800062a:	4413      	add	r3, r2
 800062c:	4a18      	ldr	r2, [pc, #96]	; (8000690 <balance+0x180>)
 800062e:	6013      	str	r3, [r2, #0]
		timeGreen = (AMBER / 2) * 3;
 8000630:	68bb      	ldr	r3, [r7, #8]
 8000632:	0fda      	lsrs	r2, r3, #31
 8000634:	4413      	add	r3, r2
 8000636:	105b      	asrs	r3, r3, #1
 8000638:	461a      	mov	r2, r3
 800063a:	4613      	mov	r3, r2
 800063c:	005b      	lsls	r3, r3, #1
 800063e:	4413      	add	r3, r2
 8000640:	4a15      	ldr	r2, [pc, #84]	; (8000698 <balance+0x188>)
 8000642:	6013      	str	r3, [r2, #0]
		timeYellow = AMBER;
 8000644:	4a13      	ldr	r2, [pc, #76]	; (8000694 <balance+0x184>)
 8000646:	68bb      	ldr	r3, [r7, #8]
 8000648:	6013      	str	r3, [r2, #0]
}
 800064a:	e01b      	b.n	8000684 <balance+0x174>
	else if(GREEN < timeGreen)
 800064c:	4b12      	ldr	r3, [pc, #72]	; (8000698 <balance+0x188>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	687a      	ldr	r2, [r7, #4]
 8000652:	429a      	cmp	r2, r3
 8000654:	da16      	bge.n	8000684 <balance+0x174>
		timeRed = (GREEN / 3) * 5;
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	4a11      	ldr	r2, [pc, #68]	; (80006a0 <balance+0x190>)
 800065a:	fb82 1203 	smull	r1, r2, r2, r3
 800065e:	17db      	asrs	r3, r3, #31
 8000660:	1ad2      	subs	r2, r2, r3
 8000662:	4613      	mov	r3, r2
 8000664:	009b      	lsls	r3, r3, #2
 8000666:	4413      	add	r3, r2
 8000668:	4a09      	ldr	r2, [pc, #36]	; (8000690 <balance+0x180>)
 800066a:	6013      	str	r3, [r2, #0]
		timeYellow = (GREEN / 3) * 2;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	4a0c      	ldr	r2, [pc, #48]	; (80006a0 <balance+0x190>)
 8000670:	fb82 1203 	smull	r1, r2, r2, r3
 8000674:	17db      	asrs	r3, r3, #31
 8000676:	1ad3      	subs	r3, r2, r3
 8000678:	005b      	lsls	r3, r3, #1
 800067a:	4a06      	ldr	r2, [pc, #24]	; (8000694 <balance+0x184>)
 800067c:	6013      	str	r3, [r2, #0]
		timeGreen = GREEN;
 800067e:	4a06      	ldr	r2, [pc, #24]	; (8000698 <balance+0x188>)
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	6013      	str	r3, [r2, #0]
}
 8000684:	bf00      	nop
 8000686:	3714      	adds	r7, #20
 8000688:	46bd      	mov	sp, r7
 800068a:	bc80      	pop	{r7}
 800068c:	4770      	bx	lr
 800068e:	bf00      	nop
 8000690:	20000024 	.word	0x20000024
 8000694:	20000028 	.word	0x20000028
 8000698:	2000002c 	.word	0x2000002c
 800069c:	66666667 	.word	0x66666667
 80006a0:	55555556 	.word	0x55555556

080006a4 <normalState>:

void normalState(void)
{
 80006a4:	b580      	push	{r7, lr}
 80006a6:	b08e      	sub	sp, #56	; 0x38
 80006a8:	af00      	add	r7, sp, #0
	char str[50];
	switch(status)
 80006aa:	4baa      	ldr	r3, [pc, #680]	; (8000954 <normalState+0x2b0>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	2b0c      	cmp	r3, #12
 80006b0:	f200 8488 	bhi.w	8000fc4 <normalState+0x920>
 80006b4:	a201      	add	r2, pc, #4	; (adr r2, 80006bc <normalState+0x18>)
 80006b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006ba:	bf00      	nop
 80006bc:	080006f1 	.word	0x080006f1
 80006c0:	08000725 	.word	0x08000725
 80006c4:	08000835 	.word	0x08000835
 80006c8:	0800097d 	.word	0x0800097d
 80006cc:	08000ad9 	.word	0x08000ad9
 80006d0:	08000fc5 	.word	0x08000fc5
 80006d4:	08000fc5 	.word	0x08000fc5
 80006d8:	08000fc5 	.word	0x08000fc5
 80006dc:	08000fc5 	.word	0x08000fc5
 80006e0:	08000fc5 	.word	0x08000fc5
 80006e4:	08000c75 	.word	0x08000c75
 80006e8:	08000d83 	.word	0x08000d83
 80006ec:	08000eb5 	.word	0x08000eb5
	{
	case INIT:
		status = RedGreen;
 80006f0:	4b98      	ldr	r3, [pc, #608]	; (8000954 <normalState+0x2b0>)
 80006f2:	2201      	movs	r2, #1
 80006f4:	601a      	str	r2, [r3, #0]

		setTimer(0, timeGreen * 100);
 80006f6:	4b98      	ldr	r3, [pc, #608]	; (8000958 <normalState+0x2b4>)
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	2264      	movs	r2, #100	; 0x64
 80006fc:	fb02 f303 	mul.w	r3, r2, r3
 8000700:	4619      	mov	r1, r3
 8000702:	2000      	movs	r0, #0
 8000704:	f000 fffe 	bl	8001704 <setTimer>
		setTimer(1, 1);
 8000708:	2101      	movs	r1, #1
 800070a:	2001      	movs	r0, #1
 800070c:	f000 fffa 	bl	8001704 <setTimer>

		time1 = timeRed;
 8000710:	4b92      	ldr	r3, [pc, #584]	; (800095c <normalState+0x2b8>)
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	4a92      	ldr	r2, [pc, #584]	; (8000960 <normalState+0x2bc>)
 8000716:	6013      	str	r3, [r2, #0]
		time2 = timeGreen;
 8000718:	4b8f      	ldr	r3, [pc, #572]	; (8000958 <normalState+0x2b4>)
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	4a91      	ldr	r2, [pc, #580]	; (8000964 <normalState+0x2c0>)
 800071e:	6013      	str	r3, [r2, #0]
		break;
 8000720:	f000 bc59 	b.w	8000fd6 <normalState+0x932>

	case RedGreen:
		displayRed1();
 8000724:	f7ff fdfe 	bl	8000324 <displayRed1>
		displayGreen2();
 8000728:	f7ff fe58 	bl	80003dc <displayGreen2>

		if(isTimerUp(1) == 1)
 800072c:	2001      	movs	r0, #1
 800072e:	f000 ffd5 	bl	80016dc <isTimerUp>
 8000732:	4603      	mov	r3, r0
 8000734:	2b01      	cmp	r3, #1
 8000736:	d12b      	bne.n	8000790 <normalState+0xec>
		{	// Update Time
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",time1), 500);
 8000738:	4b89      	ldr	r3, [pc, #548]	; (8000960 <normalState+0x2bc>)
 800073a:	681a      	ldr	r2, [r3, #0]
 800073c:	1d3b      	adds	r3, r7, #4
 800073e:	498a      	ldr	r1, [pc, #552]	; (8000968 <normalState+0x2c4>)
 8000740:	4618      	mov	r0, r3
 8000742:	f004 f85f 	bl	8004804 <siprintf>
 8000746:	4603      	mov	r3, r0
 8000748:	b29a      	uxth	r2, r3
 800074a:	1d39      	adds	r1, r7, #4
 800074c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000750:	4886      	ldr	r0, [pc, #536]	; (800096c <normalState+0x2c8>)
 8000752:	f003 f98b 	bl	8003a6c <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",time2), 500);
 8000756:	4b83      	ldr	r3, [pc, #524]	; (8000964 <normalState+0x2c0>)
 8000758:	681a      	ldr	r2, [r3, #0]
 800075a:	1d3b      	adds	r3, r7, #4
 800075c:	4984      	ldr	r1, [pc, #528]	; (8000970 <normalState+0x2cc>)
 800075e:	4618      	mov	r0, r3
 8000760:	f004 f850 	bl	8004804 <siprintf>
 8000764:	4603      	mov	r3, r0
 8000766:	b29a      	uxth	r2, r3
 8000768:	1d39      	adds	r1, r7, #4
 800076a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800076e:	487f      	ldr	r0, [pc, #508]	; (800096c <normalState+0x2c8>)
 8000770:	f003 f97c 	bl	8003a6c <HAL_UART_Transmit>

			time1--;
 8000774:	4b7a      	ldr	r3, [pc, #488]	; (8000960 <normalState+0x2bc>)
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	3b01      	subs	r3, #1
 800077a:	4a79      	ldr	r2, [pc, #484]	; (8000960 <normalState+0x2bc>)
 800077c:	6013      	str	r3, [r2, #0]
			time2--;
 800077e:	4b79      	ldr	r3, [pc, #484]	; (8000964 <normalState+0x2c0>)
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	3b01      	subs	r3, #1
 8000784:	4a77      	ldr	r2, [pc, #476]	; (8000964 <normalState+0x2c0>)
 8000786:	6013      	str	r3, [r2, #0]

			setTimer(1, 100);
 8000788:	2164      	movs	r1, #100	; 0x64
 800078a:	2001      	movs	r0, #1
 800078c:	f000 ffba 	bl	8001704 <setTimer>
		}

		if(isTimerUp(0) == 1)
 8000790:	2000      	movs	r0, #0
 8000792:	f000 ffa3 	bl	80016dc <isTimerUp>
 8000796:	4603      	mov	r3, r0
 8000798:	2b01      	cmp	r3, #1
 800079a:	d117      	bne.n	80007cc <normalState+0x128>
		{	// Transit State
			status = RedAmber;
 800079c:	4b6d      	ldr	r3, [pc, #436]	; (8000954 <normalState+0x2b0>)
 800079e:	2202      	movs	r2, #2
 80007a0:	601a      	str	r2, [r3, #0]

			setTimer(0, timeYellow * 100);
 80007a2:	4b74      	ldr	r3, [pc, #464]	; (8000974 <normalState+0x2d0>)
 80007a4:	681b      	ldr	r3, [r3, #0]
 80007a6:	2264      	movs	r2, #100	; 0x64
 80007a8:	fb02 f303 	mul.w	r3, r2, r3
 80007ac:	4619      	mov	r1, r3
 80007ae:	2000      	movs	r0, #0
 80007b0:	f000 ffa8 	bl	8001704 <setTimer>
			setTimer(1, 1);
 80007b4:	2101      	movs	r1, #1
 80007b6:	2001      	movs	r0, #1
 80007b8:	f000 ffa4 	bl	8001704 <setTimer>

			time1 = timeYellow;
 80007bc:	4b6d      	ldr	r3, [pc, #436]	; (8000974 <normalState+0x2d0>)
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	4a67      	ldr	r2, [pc, #412]	; (8000960 <normalState+0x2bc>)
 80007c2:	6013      	str	r3, [r2, #0]
			time2 = timeYellow;
 80007c4:	4b6b      	ldr	r3, [pc, #428]	; (8000974 <normalState+0x2d0>)
 80007c6:	681b      	ldr	r3, [r3, #0]
 80007c8:	4a66      	ldr	r2, [pc, #408]	; (8000964 <normalState+0x2c0>)
 80007ca:	6013      	str	r3, [r2, #0]
		}


		if(Is_Button_Pressed(1))
 80007cc:	2001      	movs	r0, #1
 80007ce:	f7ff fd53 	bl	8000278 <Is_Button_Pressed>
 80007d2:	4603      	mov	r3, r0
 80007d4:	2b00      	cmp	r3, #0
 80007d6:	d016      	beq.n	8000806 <normalState+0x162>
		{
			status = ManRed;
 80007d8:	4b5e      	ldr	r3, [pc, #376]	; (8000954 <normalState+0x2b0>)
 80007da:	220a      	movs	r2, #10
 80007dc:	601a      	str	r2, [r3, #0]

			time1 = timeRed;
 80007de:	4b5f      	ldr	r3, [pc, #380]	; (800095c <normalState+0x2b8>)
 80007e0:	681b      	ldr	r3, [r3, #0]
 80007e2:	4a5f      	ldr	r2, [pc, #380]	; (8000960 <normalState+0x2bc>)
 80007e4:	6013      	str	r3, [r2, #0]
			time2 = 2;
 80007e6:	4b5f      	ldr	r3, [pc, #380]	; (8000964 <normalState+0x2c0>)
 80007e8:	2202      	movs	r2, #2
 80007ea:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 80007ec:	f7ff fd76 	bl	80002dc <clearAllLed1>
			clearAllLed2();
 80007f0:	f7ff fd88 	bl	8000304 <clearAllLed2>

			setTimer(2, 25);
 80007f4:	2119      	movs	r1, #25
 80007f6:	2002      	movs	r0, #2
 80007f8:	f000 ff84 	bl	8001704 <setTimer>
			setTimer(7,500);
 80007fc:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000800:	2007      	movs	r0, #7
 8000802:	f000 ff7f 	bl	8001704 <setTimer>
		}
		if(Is_Button_Pressed(0))
 8000806:	2000      	movs	r0, #0
 8000808:	f7ff fd36 	bl	8000278 <Is_Button_Pressed>
 800080c:	4603      	mov	r3, r0
 800080e:	2b00      	cmp	r3, #0
 8000810:	f000 83da 	beq.w	8000fc8 <normalState+0x924>
		{
			pedestrian_flag = Pedestrian_RED;
 8000814:	4b58      	ldr	r3, [pc, #352]	; (8000978 <normalState+0x2d4>)
 8000816:	220f      	movs	r2, #15
 8000818:	601a      	str	r2, [r3, #0]
			setTimer(3, (timeRed + timeGreen) * 100);
 800081a:	4b50      	ldr	r3, [pc, #320]	; (800095c <normalState+0x2b8>)
 800081c:	681a      	ldr	r2, [r3, #0]
 800081e:	4b4e      	ldr	r3, [pc, #312]	; (8000958 <normalState+0x2b4>)
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	4413      	add	r3, r2
 8000824:	2264      	movs	r2, #100	; 0x64
 8000826:	fb02 f303 	mul.w	r3, r2, r3
 800082a:	4619      	mov	r1, r3
 800082c:	2003      	movs	r0, #3
 800082e:	f000 ff69 	bl	8001704 <setTimer>
		}
		break;
 8000832:	e3c9      	b.n	8000fc8 <normalState+0x924>

	case RedAmber:
		displayRed1();
 8000834:	f7ff fd76 	bl	8000324 <displayRed1>
		displayYellow2();
 8000838:	f7ff fdc0 	bl	80003bc <displayYellow2>

		if(isTimerUp(1) == 1)
 800083c:	2001      	movs	r0, #1
 800083e:	f000 ff4d 	bl	80016dc <isTimerUp>
 8000842:	4603      	mov	r3, r0
 8000844:	2b01      	cmp	r3, #1
 8000846:	d12b      	bne.n	80008a0 <normalState+0x1fc>
		{	// Update Time
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",time1), 500);
 8000848:	4b45      	ldr	r3, [pc, #276]	; (8000960 <normalState+0x2bc>)
 800084a:	681a      	ldr	r2, [r3, #0]
 800084c:	1d3b      	adds	r3, r7, #4
 800084e:	4946      	ldr	r1, [pc, #280]	; (8000968 <normalState+0x2c4>)
 8000850:	4618      	mov	r0, r3
 8000852:	f003 ffd7 	bl	8004804 <siprintf>
 8000856:	4603      	mov	r3, r0
 8000858:	b29a      	uxth	r2, r3
 800085a:	1d39      	adds	r1, r7, #4
 800085c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000860:	4842      	ldr	r0, [pc, #264]	; (800096c <normalState+0x2c8>)
 8000862:	f003 f903 	bl	8003a6c <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",time2), 500);
 8000866:	4b3f      	ldr	r3, [pc, #252]	; (8000964 <normalState+0x2c0>)
 8000868:	681a      	ldr	r2, [r3, #0]
 800086a:	1d3b      	adds	r3, r7, #4
 800086c:	4940      	ldr	r1, [pc, #256]	; (8000970 <normalState+0x2cc>)
 800086e:	4618      	mov	r0, r3
 8000870:	f003 ffc8 	bl	8004804 <siprintf>
 8000874:	4603      	mov	r3, r0
 8000876:	b29a      	uxth	r2, r3
 8000878:	1d39      	adds	r1, r7, #4
 800087a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800087e:	483b      	ldr	r0, [pc, #236]	; (800096c <normalState+0x2c8>)
 8000880:	f003 f8f4 	bl	8003a6c <HAL_UART_Transmit>

			time1--;
 8000884:	4b36      	ldr	r3, [pc, #216]	; (8000960 <normalState+0x2bc>)
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	3b01      	subs	r3, #1
 800088a:	4a35      	ldr	r2, [pc, #212]	; (8000960 <normalState+0x2bc>)
 800088c:	6013      	str	r3, [r2, #0]
			time2--;
 800088e:	4b35      	ldr	r3, [pc, #212]	; (8000964 <normalState+0x2c0>)
 8000890:	681b      	ldr	r3, [r3, #0]
 8000892:	3b01      	subs	r3, #1
 8000894:	4a33      	ldr	r2, [pc, #204]	; (8000964 <normalState+0x2c0>)
 8000896:	6013      	str	r3, [r2, #0]

			setTimer(1, 100);
 8000898:	2164      	movs	r1, #100	; 0x64
 800089a:	2001      	movs	r0, #1
 800089c:	f000 ff32 	bl	8001704 <setTimer>
		}

		if(isTimerUp(0)==1)
 80008a0:	2000      	movs	r0, #0
 80008a2:	f000 ff1b 	bl	80016dc <isTimerUp>
 80008a6:	4603      	mov	r3, r0
 80008a8:	2b01      	cmp	r3, #1
 80008aa:	d11e      	bne.n	80008ea <normalState+0x246>
		{	// Transit State
			status = GreenRed;
 80008ac:	4b29      	ldr	r3, [pc, #164]	; (8000954 <normalState+0x2b0>)
 80008ae:	2203      	movs	r2, #3
 80008b0:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 80008b2:	4b29      	ldr	r3, [pc, #164]	; (8000958 <normalState+0x2b4>)
 80008b4:	681b      	ldr	r3, [r3, #0]
 80008b6:	2264      	movs	r2, #100	; 0x64
 80008b8:	fb02 f303 	mul.w	r3, r2, r3
 80008bc:	4619      	mov	r1, r3
 80008be:	2000      	movs	r0, #0
 80008c0:	f000 ff20 	bl	8001704 <setTimer>
			setTimer(1, 1);
 80008c4:	2101      	movs	r1, #1
 80008c6:	2001      	movs	r0, #1
 80008c8:	f000 ff1c 	bl	8001704 <setTimer>

			time1 = timeGreen;
 80008cc:	4b22      	ldr	r3, [pc, #136]	; (8000958 <normalState+0x2b4>)
 80008ce:	681b      	ldr	r3, [r3, #0]
 80008d0:	4a23      	ldr	r2, [pc, #140]	; (8000960 <normalState+0x2bc>)
 80008d2:	6013      	str	r3, [r2, #0]
			time2 = timeRed;
 80008d4:	4b21      	ldr	r3, [pc, #132]	; (800095c <normalState+0x2b8>)
 80008d6:	681b      	ldr	r3, [r3, #0]
 80008d8:	4a22      	ldr	r2, [pc, #136]	; (8000964 <normalState+0x2c0>)
 80008da:	6013      	str	r3, [r2, #0]

			if(pedestrian_flag == Pedestrian_RED)
 80008dc:	4b26      	ldr	r3, [pc, #152]	; (8000978 <normalState+0x2d4>)
 80008de:	681b      	ldr	r3, [r3, #0]
 80008e0:	2b0f      	cmp	r3, #15
 80008e2:	d102      	bne.n	80008ea <normalState+0x246>
				pedestrian_flag = Pedestrian_GREEN;
 80008e4:	4b24      	ldr	r3, [pc, #144]	; (8000978 <normalState+0x2d4>)
 80008e6:	2210      	movs	r2, #16
 80008e8:	601a      	str	r2, [r3, #0]
		}


		if(Is_Button_Pressed(1))
 80008ea:	2001      	movs	r0, #1
 80008ec:	f7ff fcc4 	bl	8000278 <Is_Button_Pressed>
 80008f0:	4603      	mov	r3, r0
 80008f2:	2b00      	cmp	r3, #0
 80008f4:	d016      	beq.n	8000924 <normalState+0x280>
		{
			status = ManRed;
 80008f6:	4b17      	ldr	r3, [pc, #92]	; (8000954 <normalState+0x2b0>)
 80008f8:	220a      	movs	r2, #10
 80008fa:	601a      	str	r2, [r3, #0]

			time1 = timeRed;
 80008fc:	4b17      	ldr	r3, [pc, #92]	; (800095c <normalState+0x2b8>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	4a17      	ldr	r2, [pc, #92]	; (8000960 <normalState+0x2bc>)
 8000902:	6013      	str	r3, [r2, #0]
			time2 = 2;
 8000904:	4b17      	ldr	r3, [pc, #92]	; (8000964 <normalState+0x2c0>)
 8000906:	2202      	movs	r2, #2
 8000908:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 800090a:	f7ff fce7 	bl	80002dc <clearAllLed1>
			clearAllLed2();
 800090e:	f7ff fcf9 	bl	8000304 <clearAllLed2>

			setTimer(2, 25);
 8000912:	2119      	movs	r1, #25
 8000914:	2002      	movs	r0, #2
 8000916:	f000 fef5 	bl	8001704 <setTimer>
			setTimer(7,500);
 800091a:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800091e:	2007      	movs	r0, #7
 8000920:	f000 fef0 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(0))
 8000924:	2000      	movs	r0, #0
 8000926:	f7ff fca7 	bl	8000278 <Is_Button_Pressed>
 800092a:	4603      	mov	r3, r0
 800092c:	2b00      	cmp	r3, #0
 800092e:	f000 834d 	beq.w	8000fcc <normalState+0x928>
		{
			pedestrian_flag = Pedestrian_RED;
 8000932:	4b11      	ldr	r3, [pc, #68]	; (8000978 <normalState+0x2d4>)
 8000934:	220f      	movs	r2, #15
 8000936:	601a      	str	r2, [r3, #0]
			setTimer(3, (timeRed + timeGreen) * 100);
 8000938:	4b08      	ldr	r3, [pc, #32]	; (800095c <normalState+0x2b8>)
 800093a:	681a      	ldr	r2, [r3, #0]
 800093c:	4b06      	ldr	r3, [pc, #24]	; (8000958 <normalState+0x2b4>)
 800093e:	681b      	ldr	r3, [r3, #0]
 8000940:	4413      	add	r3, r2
 8000942:	2264      	movs	r2, #100	; 0x64
 8000944:	fb02 f303 	mul.w	r3, r2, r3
 8000948:	4619      	mov	r1, r3
 800094a:	2003      	movs	r0, #3
 800094c:	f000 feda 	bl	8001704 <setTimer>
		}
		break;
 8000950:	e33c      	b.n	8000fcc <normalState+0x928>
 8000952:	bf00      	nop
 8000954:	20000118 	.word	0x20000118
 8000958:	2000002c 	.word	0x2000002c
 800095c:	20000024 	.word	0x20000024
 8000960:	20000138 	.word	0x20000138
 8000964:	2000011c 	.word	0x2000011c
 8000968:	08004f24 	.word	0x08004f24
 800096c:	200001cc 	.word	0x200001cc
 8000970:	08004f34 	.word	0x08004f34
 8000974:	20000028 	.word	0x20000028
 8000978:	20000030 	.word	0x20000030

	case GreenRed:
		displayGreen1();
 800097c:	f7ff fcfa 	bl	8000374 <displayGreen1>
		displayRed2();
 8000980:	f7ff fd0c 	bl	800039c <displayRed2>

		if(timeYellow < 5 && time1 == 5 - timeYellow)
 8000984:	4bb0      	ldr	r3, [pc, #704]	; (8000c48 <normalState+0x5a4>)
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	2b04      	cmp	r3, #4
 800098a:	dc0b      	bgt.n	80009a4 <normalState+0x300>
 800098c:	4bae      	ldr	r3, [pc, #696]	; (8000c48 <normalState+0x5a4>)
 800098e:	681b      	ldr	r3, [r3, #0]
 8000990:	f1c3 0205 	rsb	r2, r3, #5
 8000994:	4bad      	ldr	r3, [pc, #692]	; (8000c4c <normalState+0x5a8>)
 8000996:	681b      	ldr	r3, [r3, #0]
 8000998:	429a      	cmp	r2, r3
 800099a:	d103      	bne.n	80009a4 <normalState+0x300>
			setTimer(4, 1);
 800099c:	2101      	movs	r1, #1
 800099e:	2004      	movs	r0, #4
 80009a0:	f000 feb0 	bl	8001704 <setTimer>

		if(isTimerUp(1)==1)
 80009a4:	2001      	movs	r0, #1
 80009a6:	f000 fe99 	bl	80016dc <isTimerUp>
 80009aa:	4603      	mov	r3, r0
 80009ac:	2b01      	cmp	r3, #1
 80009ae:	d12b      	bne.n	8000a08 <normalState+0x364>
		{	// Update Time
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",time1), 500);
 80009b0:	4ba6      	ldr	r3, [pc, #664]	; (8000c4c <normalState+0x5a8>)
 80009b2:	681a      	ldr	r2, [r3, #0]
 80009b4:	1d3b      	adds	r3, r7, #4
 80009b6:	49a6      	ldr	r1, [pc, #664]	; (8000c50 <normalState+0x5ac>)
 80009b8:	4618      	mov	r0, r3
 80009ba:	f003 ff23 	bl	8004804 <siprintf>
 80009be:	4603      	mov	r3, r0
 80009c0:	b29a      	uxth	r2, r3
 80009c2:	1d39      	adds	r1, r7, #4
 80009c4:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80009c8:	48a2      	ldr	r0, [pc, #648]	; (8000c54 <normalState+0x5b0>)
 80009ca:	f003 f84f 	bl	8003a6c <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",time2), 500);
 80009ce:	4ba2      	ldr	r3, [pc, #648]	; (8000c58 <normalState+0x5b4>)
 80009d0:	681a      	ldr	r2, [r3, #0]
 80009d2:	1d3b      	adds	r3, r7, #4
 80009d4:	49a1      	ldr	r1, [pc, #644]	; (8000c5c <normalState+0x5b8>)
 80009d6:	4618      	mov	r0, r3
 80009d8:	f003 ff14 	bl	8004804 <siprintf>
 80009dc:	4603      	mov	r3, r0
 80009de:	b29a      	uxth	r2, r3
 80009e0:	1d39      	adds	r1, r7, #4
 80009e2:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80009e6:	489b      	ldr	r0, [pc, #620]	; (8000c54 <normalState+0x5b0>)
 80009e8:	f003 f840 	bl	8003a6c <HAL_UART_Transmit>

			time1--;
 80009ec:	4b97      	ldr	r3, [pc, #604]	; (8000c4c <normalState+0x5a8>)
 80009ee:	681b      	ldr	r3, [r3, #0]
 80009f0:	3b01      	subs	r3, #1
 80009f2:	4a96      	ldr	r2, [pc, #600]	; (8000c4c <normalState+0x5a8>)
 80009f4:	6013      	str	r3, [r2, #0]
			time2--;
 80009f6:	4b98      	ldr	r3, [pc, #608]	; (8000c58 <normalState+0x5b4>)
 80009f8:	681b      	ldr	r3, [r3, #0]
 80009fa:	3b01      	subs	r3, #1
 80009fc:	4a96      	ldr	r2, [pc, #600]	; (8000c58 <normalState+0x5b4>)
 80009fe:	6013      	str	r3, [r2, #0]

			setTimer(1, 100);
 8000a00:	2164      	movs	r1, #100	; 0x64
 8000a02:	2001      	movs	r0, #1
 8000a04:	f000 fe7e 	bl	8001704 <setTimer>
		}

		if(isTimerUp(0) == 1)
 8000a08:	2000      	movs	r0, #0
 8000a0a:	f000 fe67 	bl	80016dc <isTimerUp>
 8000a0e:	4603      	mov	r3, r0
 8000a10:	2b01      	cmp	r3, #1
 8000a12:	d117      	bne.n	8000a44 <normalState+0x3a0>
		{	// Transit State
			status = AmberRed;
 8000a14:	4b92      	ldr	r3, [pc, #584]	; (8000c60 <normalState+0x5bc>)
 8000a16:	2204      	movs	r2, #4
 8000a18:	601a      	str	r2, [r3, #0]

			setTimer(0, timeYellow * 100);
 8000a1a:	4b8b      	ldr	r3, [pc, #556]	; (8000c48 <normalState+0x5a4>)
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	2264      	movs	r2, #100	; 0x64
 8000a20:	fb02 f303 	mul.w	r3, r2, r3
 8000a24:	4619      	mov	r1, r3
 8000a26:	2000      	movs	r0, #0
 8000a28:	f000 fe6c 	bl	8001704 <setTimer>
			setTimer(1, 1);
 8000a2c:	2101      	movs	r1, #1
 8000a2e:	2001      	movs	r0, #1
 8000a30:	f000 fe68 	bl	8001704 <setTimer>

			time1 = timeYellow;
 8000a34:	4b84      	ldr	r3, [pc, #528]	; (8000c48 <normalState+0x5a4>)
 8000a36:	681b      	ldr	r3, [r3, #0]
 8000a38:	4a84      	ldr	r2, [pc, #528]	; (8000c4c <normalState+0x5a8>)
 8000a3a:	6013      	str	r3, [r2, #0]
			time2 = timeYellow;
 8000a3c:	4b82      	ldr	r3, [pc, #520]	; (8000c48 <normalState+0x5a4>)
 8000a3e:	681b      	ldr	r3, [r3, #0]
 8000a40:	4a85      	ldr	r2, [pc, #532]	; (8000c58 <normalState+0x5b4>)
 8000a42:	6013      	str	r3, [r2, #0]
		}

		if(timeYellow < 5 && time1 <= 5 - timeYellow)
 8000a44:	4b80      	ldr	r3, [pc, #512]	; (8000c48 <normalState+0x5a4>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	2b04      	cmp	r3, #4
 8000a4a:	dc11      	bgt.n	8000a70 <normalState+0x3cc>
 8000a4c:	4b7e      	ldr	r3, [pc, #504]	; (8000c48 <normalState+0x5a4>)
 8000a4e:	681b      	ldr	r3, [r3, #0]
 8000a50:	f1c3 0205 	rsb	r2, r3, #5
 8000a54:	4b7d      	ldr	r3, [pc, #500]	; (8000c4c <normalState+0x5a8>)
 8000a56:	681b      	ldr	r3, [r3, #0]
 8000a58:	429a      	cmp	r2, r3
 8000a5a:	db09      	blt.n	8000a70 <normalState+0x3cc>
				buzzerValue = 512 / 32 * (5- timeYellow - time1);
 8000a5c:	4b7a      	ldr	r3, [pc, #488]	; (8000c48 <normalState+0x5a4>)
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	f1c3 0205 	rsb	r2, r3, #5
 8000a64:	4b79      	ldr	r3, [pc, #484]	; (8000c4c <normalState+0x5a8>)
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	1ad3      	subs	r3, r2, r3
 8000a6a:	011b      	lsls	r3, r3, #4
 8000a6c:	4a7d      	ldr	r2, [pc, #500]	; (8000c64 <normalState+0x5c0>)
 8000a6e:	6013      	str	r3, [r2, #0]

		if(Is_Button_Pressed(1))
 8000a70:	2001      	movs	r0, #1
 8000a72:	f7ff fc01 	bl	8000278 <Is_Button_Pressed>
 8000a76:	4603      	mov	r3, r0
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	d016      	beq.n	8000aaa <normalState+0x406>
		{
			status = ManRed;
 8000a7c:	4b78      	ldr	r3, [pc, #480]	; (8000c60 <normalState+0x5bc>)
 8000a7e:	220a      	movs	r2, #10
 8000a80:	601a      	str	r2, [r3, #0]

			time1 = timeRed;
 8000a82:	4b79      	ldr	r3, [pc, #484]	; (8000c68 <normalState+0x5c4>)
 8000a84:	681b      	ldr	r3, [r3, #0]
 8000a86:	4a71      	ldr	r2, [pc, #452]	; (8000c4c <normalState+0x5a8>)
 8000a88:	6013      	str	r3, [r2, #0]
			time2 = 2;
 8000a8a:	4b73      	ldr	r3, [pc, #460]	; (8000c58 <normalState+0x5b4>)
 8000a8c:	2202      	movs	r2, #2
 8000a8e:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 8000a90:	f7ff fc24 	bl	80002dc <clearAllLed1>
			clearAllLed2();
 8000a94:	f7ff fc36 	bl	8000304 <clearAllLed2>

			setTimer(2, 25);
 8000a98:	2119      	movs	r1, #25
 8000a9a:	2002      	movs	r0, #2
 8000a9c:	f000 fe32 	bl	8001704 <setTimer>
			setTimer(7,500);
 8000aa0:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000aa4:	2007      	movs	r0, #7
 8000aa6:	f000 fe2d 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(0))
 8000aaa:	2000      	movs	r0, #0
 8000aac:	f7ff fbe4 	bl	8000278 <Is_Button_Pressed>
 8000ab0:	4603      	mov	r3, r0
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	f000 828c 	beq.w	8000fd0 <normalState+0x92c>
		{
			pedestrian_flag = Pedestrian_GREEN;
 8000ab8:	4b6c      	ldr	r3, [pc, #432]	; (8000c6c <normalState+0x5c8>)
 8000aba:	2210      	movs	r2, #16
 8000abc:	601a      	str	r2, [r3, #0]
			setTimer(3, (timeRed + timeGreen) * 100);
 8000abe:	4b6a      	ldr	r3, [pc, #424]	; (8000c68 <normalState+0x5c4>)
 8000ac0:	681a      	ldr	r2, [r3, #0]
 8000ac2:	4b6b      	ldr	r3, [pc, #428]	; (8000c70 <normalState+0x5cc>)
 8000ac4:	681b      	ldr	r3, [r3, #0]
 8000ac6:	4413      	add	r3, r2
 8000ac8:	2264      	movs	r2, #100	; 0x64
 8000aca:	fb02 f303 	mul.w	r3, r2, r3
 8000ace:	4619      	mov	r1, r3
 8000ad0:	2003      	movs	r0, #3
 8000ad2:	f000 fe17 	bl	8001704 <setTimer>
		}
		break;
 8000ad6:	e27b      	b.n	8000fd0 <normalState+0x92c>

	case AmberRed:
		displayYellow1();
 8000ad8:	f7ff fc38 	bl	800034c <displayYellow1>
		displayRed2();
 8000adc:	f7ff fc5e 	bl	800039c <displayRed2>

		if (timeYellow >= 5 && time1 == 5)
 8000ae0:	4b59      	ldr	r3, [pc, #356]	; (8000c48 <normalState+0x5a4>)
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	2b04      	cmp	r3, #4
 8000ae6:	dd07      	ble.n	8000af8 <normalState+0x454>
 8000ae8:	4b58      	ldr	r3, [pc, #352]	; (8000c4c <normalState+0x5a8>)
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	2b05      	cmp	r3, #5
 8000aee:	d103      	bne.n	8000af8 <normalState+0x454>
			setTimer(4, 1);
 8000af0:	2101      	movs	r1, #1
 8000af2:	2004      	movs	r0, #4
 8000af4:	f000 fe06 	bl	8001704 <setTimer>

		if(isTimerUp(1) == 1)
 8000af8:	2001      	movs	r0, #1
 8000afa:	f000 fdef 	bl	80016dc <isTimerUp>
 8000afe:	4603      	mov	r3, r0
 8000b00:	2b01      	cmp	r3, #1
 8000b02:	d12b      	bne.n	8000b5c <normalState+0x4b8>
		{	// Update Time
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",time1), 500);
 8000b04:	4b51      	ldr	r3, [pc, #324]	; (8000c4c <normalState+0x5a8>)
 8000b06:	681a      	ldr	r2, [r3, #0]
 8000b08:	1d3b      	adds	r3, r7, #4
 8000b0a:	4951      	ldr	r1, [pc, #324]	; (8000c50 <normalState+0x5ac>)
 8000b0c:	4618      	mov	r0, r3
 8000b0e:	f003 fe79 	bl	8004804 <siprintf>
 8000b12:	4603      	mov	r3, r0
 8000b14:	b29a      	uxth	r2, r3
 8000b16:	1d39      	adds	r1, r7, #4
 8000b18:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000b1c:	484d      	ldr	r0, [pc, #308]	; (8000c54 <normalState+0x5b0>)
 8000b1e:	f002 ffa5 	bl	8003a6c <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",time2), 500);
 8000b22:	4b4d      	ldr	r3, [pc, #308]	; (8000c58 <normalState+0x5b4>)
 8000b24:	681a      	ldr	r2, [r3, #0]
 8000b26:	1d3b      	adds	r3, r7, #4
 8000b28:	494c      	ldr	r1, [pc, #304]	; (8000c5c <normalState+0x5b8>)
 8000b2a:	4618      	mov	r0, r3
 8000b2c:	f003 fe6a 	bl	8004804 <siprintf>
 8000b30:	4603      	mov	r3, r0
 8000b32:	b29a      	uxth	r2, r3
 8000b34:	1d39      	adds	r1, r7, #4
 8000b36:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000b3a:	4846      	ldr	r0, [pc, #280]	; (8000c54 <normalState+0x5b0>)
 8000b3c:	f002 ff96 	bl	8003a6c <HAL_UART_Transmit>

			time1--;
 8000b40:	4b42      	ldr	r3, [pc, #264]	; (8000c4c <normalState+0x5a8>)
 8000b42:	681b      	ldr	r3, [r3, #0]
 8000b44:	3b01      	subs	r3, #1
 8000b46:	4a41      	ldr	r2, [pc, #260]	; (8000c4c <normalState+0x5a8>)
 8000b48:	6013      	str	r3, [r2, #0]
			time2--;
 8000b4a:	4b43      	ldr	r3, [pc, #268]	; (8000c58 <normalState+0x5b4>)
 8000b4c:	681b      	ldr	r3, [r3, #0]
 8000b4e:	3b01      	subs	r3, #1
 8000b50:	4a41      	ldr	r2, [pc, #260]	; (8000c58 <normalState+0x5b4>)
 8000b52:	6013      	str	r3, [r2, #0]

			setTimer(1, 100);
 8000b54:	2164      	movs	r1, #100	; 0x64
 8000b56:	2001      	movs	r0, #1
 8000b58:	f000 fdd4 	bl	8001704 <setTimer>
		}

		if(isTimerUp(0) == 1)
 8000b5c:	2000      	movs	r0, #0
 8000b5e:	f000 fdbd 	bl	80016dc <isTimerUp>
 8000b62:	4603      	mov	r3, r0
 8000b64:	2b01      	cmp	r3, #1
 8000b66:	d11e      	bne.n	8000ba6 <normalState+0x502>
		{	// Transit State
			status = RedGreen;
 8000b68:	4b3d      	ldr	r3, [pc, #244]	; (8000c60 <normalState+0x5bc>)
 8000b6a:	2201      	movs	r2, #1
 8000b6c:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8000b6e:	4b40      	ldr	r3, [pc, #256]	; (8000c70 <normalState+0x5cc>)
 8000b70:	681b      	ldr	r3, [r3, #0]
 8000b72:	2264      	movs	r2, #100	; 0x64
 8000b74:	fb02 f303 	mul.w	r3, r2, r3
 8000b78:	4619      	mov	r1, r3
 8000b7a:	2000      	movs	r0, #0
 8000b7c:	f000 fdc2 	bl	8001704 <setTimer>
			setTimer(1, 1);
 8000b80:	2101      	movs	r1, #1
 8000b82:	2001      	movs	r0, #1
 8000b84:	f000 fdbe 	bl	8001704 <setTimer>

			time1 = timeRed;
 8000b88:	4b37      	ldr	r3, [pc, #220]	; (8000c68 <normalState+0x5c4>)
 8000b8a:	681b      	ldr	r3, [r3, #0]
 8000b8c:	4a2f      	ldr	r2, [pc, #188]	; (8000c4c <normalState+0x5a8>)
 8000b8e:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8000b90:	4b37      	ldr	r3, [pc, #220]	; (8000c70 <normalState+0x5cc>)
 8000b92:	681b      	ldr	r3, [r3, #0]
 8000b94:	4a30      	ldr	r2, [pc, #192]	; (8000c58 <normalState+0x5b4>)
 8000b96:	6013      	str	r3, [r2, #0]

			if(pedestrian_flag == Pedestrian_GREEN)
 8000b98:	4b34      	ldr	r3, [pc, #208]	; (8000c6c <normalState+0x5c8>)
 8000b9a:	681b      	ldr	r3, [r3, #0]
 8000b9c:	2b10      	cmp	r3, #16
 8000b9e:	d102      	bne.n	8000ba6 <normalState+0x502>
				pedestrian_flag = Pedestrian_RED;
 8000ba0:	4b32      	ldr	r3, [pc, #200]	; (8000c6c <normalState+0x5c8>)
 8000ba2:	220f      	movs	r2, #15
 8000ba4:	601a      	str	r2, [r3, #0]
		}


		if (timeYellow >= 5 && time1 <= 5)
 8000ba6:	4b28      	ldr	r3, [pc, #160]	; (8000c48 <normalState+0x5a4>)
 8000ba8:	681b      	ldr	r3, [r3, #0]
 8000baa:	2b04      	cmp	r3, #4
 8000bac:	dd0a      	ble.n	8000bc4 <normalState+0x520>
 8000bae:	4b27      	ldr	r3, [pc, #156]	; (8000c4c <normalState+0x5a8>)
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	2b05      	cmp	r3, #5
 8000bb4:	dc06      	bgt.n	8000bc4 <normalState+0x520>
			buzzerValue = 512 / 32 * (5 - time1);
 8000bb6:	4b25      	ldr	r3, [pc, #148]	; (8000c4c <normalState+0x5a8>)
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	f1c3 0305 	rsb	r3, r3, #5
 8000bbe:	011b      	lsls	r3, r3, #4
 8000bc0:	4a28      	ldr	r2, [pc, #160]	; (8000c64 <normalState+0x5c0>)
 8000bc2:	6013      	str	r3, [r2, #0]

		if(timeYellow < 5)
 8000bc4:	4b20      	ldr	r3, [pc, #128]	; (8000c48 <normalState+0x5a4>)
 8000bc6:	681b      	ldr	r3, [r3, #0]
 8000bc8:	2b04      	cmp	r3, #4
 8000bca:	dc09      	bgt.n	8000be0 <normalState+0x53c>
			buzzerValue += 256 / 32 * (5 - time1);
 8000bcc:	4b1f      	ldr	r3, [pc, #124]	; (8000c4c <normalState+0x5a8>)
 8000bce:	681b      	ldr	r3, [r3, #0]
 8000bd0:	f1c3 0305 	rsb	r3, r3, #5
 8000bd4:	00da      	lsls	r2, r3, #3
 8000bd6:	4b23      	ldr	r3, [pc, #140]	; (8000c64 <normalState+0x5c0>)
 8000bd8:	681b      	ldr	r3, [r3, #0]
 8000bda:	4413      	add	r3, r2
 8000bdc:	4a21      	ldr	r2, [pc, #132]	; (8000c64 <normalState+0x5c0>)
 8000bde:	6013      	str	r3, [r2, #0]


		if(Is_Button_Pressed(1))
 8000be0:	2001      	movs	r0, #1
 8000be2:	f7ff fb49 	bl	8000278 <Is_Button_Pressed>
 8000be6:	4603      	mov	r3, r0
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d016      	beq.n	8000c1a <normalState+0x576>
		{
			status = ManRed;
 8000bec:	4b1c      	ldr	r3, [pc, #112]	; (8000c60 <normalState+0x5bc>)
 8000bee:	220a      	movs	r2, #10
 8000bf0:	601a      	str	r2, [r3, #0]

			time1 = timeRed;
 8000bf2:	4b1d      	ldr	r3, [pc, #116]	; (8000c68 <normalState+0x5c4>)
 8000bf4:	681b      	ldr	r3, [r3, #0]
 8000bf6:	4a15      	ldr	r2, [pc, #84]	; (8000c4c <normalState+0x5a8>)
 8000bf8:	6013      	str	r3, [r2, #0]
			time2 = 2;
 8000bfa:	4b17      	ldr	r3, [pc, #92]	; (8000c58 <normalState+0x5b4>)
 8000bfc:	2202      	movs	r2, #2
 8000bfe:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 8000c00:	f7ff fb6c 	bl	80002dc <clearAllLed1>
			clearAllLed2();
 8000c04:	f7ff fb7e 	bl	8000304 <clearAllLed2>

			setTimer(2, 25);
 8000c08:	2119      	movs	r1, #25
 8000c0a:	2002      	movs	r0, #2
 8000c0c:	f000 fd7a 	bl	8001704 <setTimer>
			setTimer(7,500);
 8000c10:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000c14:	2007      	movs	r0, #7
 8000c16:	f000 fd75 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(0))
 8000c1a:	2000      	movs	r0, #0
 8000c1c:	f7ff fb2c 	bl	8000278 <Is_Button_Pressed>
 8000c20:	4603      	mov	r3, r0
 8000c22:	2b00      	cmp	r3, #0
 8000c24:	f000 81d6 	beq.w	8000fd4 <normalState+0x930>
		{
			pedestrian_flag = Pedestrian_GREEN;
 8000c28:	4b10      	ldr	r3, [pc, #64]	; (8000c6c <normalState+0x5c8>)
 8000c2a:	2210      	movs	r2, #16
 8000c2c:	601a      	str	r2, [r3, #0]
			setTimer(3, (timeRed + timeGreen) * 100);
 8000c2e:	4b0e      	ldr	r3, [pc, #56]	; (8000c68 <normalState+0x5c4>)
 8000c30:	681a      	ldr	r2, [r3, #0]
 8000c32:	4b0f      	ldr	r3, [pc, #60]	; (8000c70 <normalState+0x5cc>)
 8000c34:	681b      	ldr	r3, [r3, #0]
 8000c36:	4413      	add	r3, r2
 8000c38:	2264      	movs	r2, #100	; 0x64
 8000c3a:	fb02 f303 	mul.w	r3, r2, r3
 8000c3e:	4619      	mov	r1, r3
 8000c40:	2003      	movs	r0, #3
 8000c42:	f000 fd5f 	bl	8001704 <setTimer>
		}
		break;
 8000c46:	e1c5      	b.n	8000fd4 <normalState+0x930>
 8000c48:	20000028 	.word	0x20000028
 8000c4c:	20000138 	.word	0x20000138
 8000c50:	08004f24 	.word	0x08004f24
 8000c54:	200001cc 	.word	0x200001cc
 8000c58:	2000011c 	.word	0x2000011c
 8000c5c:	08004f34 	.word	0x08004f34
 8000c60:	20000118 	.word	0x20000118
 8000c64:	20000120 	.word	0x20000120
 8000c68:	20000024 	.word	0x20000024
 8000c6c:	20000030 	.word	0x20000030
 8000c70:	2000002c 	.word	0x2000002c

	case ManRed:
		if(isTimerUp(7) == 1)
 8000c74:	2007      	movs	r0, #7
 8000c76:	f000 fd31 	bl	80016dc <isTimerUp>
 8000c7a:	4603      	mov	r3, r0
 8000c7c:	2b01      	cmp	r3, #1
 8000c7e:	d117      	bne.n	8000cb0 <normalState+0x60c>
		{
			status = RedGreen;
 8000c80:	4b83      	ldr	r3, [pc, #524]	; (8000e90 <normalState+0x7ec>)
 8000c82:	2201      	movs	r2, #1
 8000c84:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8000c86:	4b83      	ldr	r3, [pc, #524]	; (8000e94 <normalState+0x7f0>)
 8000c88:	681b      	ldr	r3, [r3, #0]
 8000c8a:	2264      	movs	r2, #100	; 0x64
 8000c8c:	fb02 f303 	mul.w	r3, r2, r3
 8000c90:	4619      	mov	r1, r3
 8000c92:	2000      	movs	r0, #0
 8000c94:	f000 fd36 	bl	8001704 <setTimer>
			setTimer(1, 1);
 8000c98:	2101      	movs	r1, #1
 8000c9a:	2001      	movs	r0, #1
 8000c9c:	f000 fd32 	bl	8001704 <setTimer>

			time1 = timeRed;
 8000ca0:	4b7d      	ldr	r3, [pc, #500]	; (8000e98 <normalState+0x7f4>)
 8000ca2:	681b      	ldr	r3, [r3, #0]
 8000ca4:	4a7d      	ldr	r2, [pc, #500]	; (8000e9c <normalState+0x7f8>)
 8000ca6:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8000ca8:	4b7a      	ldr	r3, [pc, #488]	; (8000e94 <normalState+0x7f0>)
 8000caa:	681b      	ldr	r3, [r3, #0]
 8000cac:	4a7c      	ldr	r2, [pc, #496]	; (8000ea0 <normalState+0x7fc>)
 8000cae:	6013      	str	r3, [r2, #0]
		}

		if(isTimerUp(2) == 1)
 8000cb0:	2002      	movs	r0, #2
 8000cb2:	f000 fd13 	bl	80016dc <isTimerUp>
 8000cb6:	4603      	mov	r3, r0
 8000cb8:	2b01      	cmp	r3, #1
 8000cba:	d105      	bne.n	8000cc8 <normalState+0x624>
		{
			setTimer(2, 25);
 8000cbc:	2119      	movs	r1, #25
 8000cbe:	2002      	movs	r0, #2
 8000cc0:	f000 fd20 	bl	8001704 <setTimer>
			toggleRed();
 8000cc4:	f7ff fb9a 	bl	80003fc <toggleRed>
		}
		if(Is_Button_Pressed(2))
 8000cc8:	2002      	movs	r0, #2
 8000cca:	f7ff fad5 	bl	8000278 <Is_Button_Pressed>
 8000cce:	4603      	mov	r3, r0
 8000cd0:	2b00      	cmp	r3, #0
 8000cd2:	d006      	beq.n	8000ce2 <normalState+0x63e>
		{
			increase();
 8000cd4:	f7ff fc08 	bl	80004e8 <increase>
			setTimer(7,500);
 8000cd8:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000cdc:	2007      	movs	r0, #7
 8000cde:	f000 fd11 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(3))
 8000ce2:	2003      	movs	r0, #3
 8000ce4:	f7ff fac8 	bl	8000278 <Is_Button_Pressed>
 8000ce8:	4603      	mov	r3, r0
 8000cea:	2b00      	cmp	r3, #0
 8000cec:	d00d      	beq.n	8000d0a <normalState+0x666>
		{
			balance(time1, timeYellow, timeGreen);
 8000cee:	4b6b      	ldr	r3, [pc, #428]	; (8000e9c <normalState+0x7f8>)
 8000cf0:	681b      	ldr	r3, [r3, #0]
 8000cf2:	4a6c      	ldr	r2, [pc, #432]	; (8000ea4 <normalState+0x800>)
 8000cf4:	6811      	ldr	r1, [r2, #0]
 8000cf6:	4a67      	ldr	r2, [pc, #412]	; (8000e94 <normalState+0x7f0>)
 8000cf8:	6812      	ldr	r2, [r2, #0]
 8000cfa:	4618      	mov	r0, r3
 8000cfc:	f7ff fc08 	bl	8000510 <balance>
			setTimer(7,500);
 8000d00:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000d04:	2007      	movs	r0, #7
 8000d06:	f000 fcfd 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(1))
 8000d0a:	2001      	movs	r0, #1
 8000d0c:	f7ff fab4 	bl	8000278 <Is_Button_Pressed>
 8000d10:	4603      	mov	r3, r0
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	d016      	beq.n	8000d44 <normalState+0x6a0>
		{
			status = ManAmber;
 8000d16:	4b5e      	ldr	r3, [pc, #376]	; (8000e90 <normalState+0x7ec>)
 8000d18:	220b      	movs	r2, #11
 8000d1a:	601a      	str	r2, [r3, #0]

			time1 = timeYellow;
 8000d1c:	4b61      	ldr	r3, [pc, #388]	; (8000ea4 <normalState+0x800>)
 8000d1e:	681b      	ldr	r3, [r3, #0]
 8000d20:	4a5e      	ldr	r2, [pc, #376]	; (8000e9c <normalState+0x7f8>)
 8000d22:	6013      	str	r3, [r2, #0]
			time2 = 3;
 8000d24:	4b5e      	ldr	r3, [pc, #376]	; (8000ea0 <normalState+0x7fc>)
 8000d26:	2203      	movs	r2, #3
 8000d28:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 8000d2a:	f7ff fad7 	bl	80002dc <clearAllLed1>
			clearAllLed2();
 8000d2e:	f7ff fae9 	bl	8000304 <clearAllLed2>

			setTimer(2, 25);
 8000d32:	2119      	movs	r1, #25
 8000d34:	2002      	movs	r0, #2
 8000d36:	f000 fce5 	bl	8001704 <setTimer>
			setTimer(7,500);
 8000d3a:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000d3e:	2007      	movs	r0, #7
 8000d40:	f000 fce0 	bl	8001704 <setTimer>
		}

		HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",time1), 500);
 8000d44:	4b55      	ldr	r3, [pc, #340]	; (8000e9c <normalState+0x7f8>)
 8000d46:	681a      	ldr	r2, [r3, #0]
 8000d48:	1d3b      	adds	r3, r7, #4
 8000d4a:	4957      	ldr	r1, [pc, #348]	; (8000ea8 <normalState+0x804>)
 8000d4c:	4618      	mov	r0, r3
 8000d4e:	f003 fd59 	bl	8004804 <siprintf>
 8000d52:	4603      	mov	r3, r0
 8000d54:	b29a      	uxth	r2, r3
 8000d56:	1d39      	adds	r1, r7, #4
 8000d58:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000d5c:	4853      	ldr	r0, [pc, #332]	; (8000eac <normalState+0x808>)
 8000d5e:	f002 fe85 	bl	8003a6c <HAL_UART_Transmit>
		HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",time2), 500);
 8000d62:	4b4f      	ldr	r3, [pc, #316]	; (8000ea0 <normalState+0x7fc>)
 8000d64:	681a      	ldr	r2, [r3, #0]
 8000d66:	1d3b      	adds	r3, r7, #4
 8000d68:	4951      	ldr	r1, [pc, #324]	; (8000eb0 <normalState+0x80c>)
 8000d6a:	4618      	mov	r0, r3
 8000d6c:	f003 fd4a 	bl	8004804 <siprintf>
 8000d70:	4603      	mov	r3, r0
 8000d72:	b29a      	uxth	r2, r3
 8000d74:	1d39      	adds	r1, r7, #4
 8000d76:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000d7a:	484c      	ldr	r0, [pc, #304]	; (8000eac <normalState+0x808>)
 8000d7c:	f002 fe76 	bl	8003a6c <HAL_UART_Transmit>
		break;
 8000d80:	e129      	b.n	8000fd6 <normalState+0x932>

	case ManAmber:
		if(isTimerUp(7) == 1)
 8000d82:	2007      	movs	r0, #7
 8000d84:	f000 fcaa 	bl	80016dc <isTimerUp>
 8000d88:	4603      	mov	r3, r0
 8000d8a:	2b01      	cmp	r3, #1
 8000d8c:	d117      	bne.n	8000dbe <normalState+0x71a>
		{
			status = RedGreen;
 8000d8e:	4b40      	ldr	r3, [pc, #256]	; (8000e90 <normalState+0x7ec>)
 8000d90:	2201      	movs	r2, #1
 8000d92:	601a      	str	r2, [r3, #0]
			setTimer(0, timeGreen * 100);
 8000d94:	4b3f      	ldr	r3, [pc, #252]	; (8000e94 <normalState+0x7f0>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	2264      	movs	r2, #100	; 0x64
 8000d9a:	fb02 f303 	mul.w	r3, r2, r3
 8000d9e:	4619      	mov	r1, r3
 8000da0:	2000      	movs	r0, #0
 8000da2:	f000 fcaf 	bl	8001704 <setTimer>
			setTimer(1, 1);
 8000da6:	2101      	movs	r1, #1
 8000da8:	2001      	movs	r0, #1
 8000daa:	f000 fcab 	bl	8001704 <setTimer>

			time1 = timeRed;
 8000dae:	4b3a      	ldr	r3, [pc, #232]	; (8000e98 <normalState+0x7f4>)
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	4a3a      	ldr	r2, [pc, #232]	; (8000e9c <normalState+0x7f8>)
 8000db4:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8000db6:	4b37      	ldr	r3, [pc, #220]	; (8000e94 <normalState+0x7f0>)
 8000db8:	681b      	ldr	r3, [r3, #0]
 8000dba:	4a39      	ldr	r2, [pc, #228]	; (8000ea0 <normalState+0x7fc>)
 8000dbc:	6013      	str	r3, [r2, #0]
		}

		if(isTimerUp(2) == 1)
 8000dbe:	2002      	movs	r0, #2
 8000dc0:	f000 fc8c 	bl	80016dc <isTimerUp>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	2b01      	cmp	r3, #1
 8000dc8:	d105      	bne.n	8000dd6 <normalState+0x732>
		{
			setTimer(2, 25);
 8000dca:	2119      	movs	r1, #25
 8000dcc:	2002      	movs	r0, #2
 8000dce:	f000 fc99 	bl	8001704 <setTimer>
			toggleYellow();
 8000dd2:	f7ff fb25 	bl	8000420 <toggleYellow>
		}

		if(Is_Button_Pressed(2))
 8000dd6:	2002      	movs	r0, #2
 8000dd8:	f7ff fa4e 	bl	8000278 <Is_Button_Pressed>
 8000ddc:	4603      	mov	r3, r0
 8000dde:	2b00      	cmp	r3, #0
 8000de0:	d006      	beq.n	8000df0 <normalState+0x74c>
		{
			increase();
 8000de2:	f7ff fb81 	bl	80004e8 <increase>
			setTimer(7,500);
 8000de6:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000dea:	2007      	movs	r0, #7
 8000dec:	f000 fc8a 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(3))
 8000df0:	2003      	movs	r0, #3
 8000df2:	f7ff fa41 	bl	8000278 <Is_Button_Pressed>
 8000df6:	4603      	mov	r3, r0
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	d00d      	beq.n	8000e18 <normalState+0x774>
		{
			balance(timeRed, time1, timeGreen);
 8000dfc:	4b26      	ldr	r3, [pc, #152]	; (8000e98 <normalState+0x7f4>)
 8000dfe:	681b      	ldr	r3, [r3, #0]
 8000e00:	4a26      	ldr	r2, [pc, #152]	; (8000e9c <normalState+0x7f8>)
 8000e02:	6811      	ldr	r1, [r2, #0]
 8000e04:	4a23      	ldr	r2, [pc, #140]	; (8000e94 <normalState+0x7f0>)
 8000e06:	6812      	ldr	r2, [r2, #0]
 8000e08:	4618      	mov	r0, r3
 8000e0a:	f7ff fb81 	bl	8000510 <balance>
			setTimer(7,500);
 8000e0e:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000e12:	2007      	movs	r0, #7
 8000e14:	f000 fc76 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(1))
 8000e18:	2001      	movs	r0, #1
 8000e1a:	f7ff fa2d 	bl	8000278 <Is_Button_Pressed>
 8000e1e:	4603      	mov	r3, r0
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	d016      	beq.n	8000e52 <normalState+0x7ae>
		{
			status = ManGreen;
 8000e24:	4b1a      	ldr	r3, [pc, #104]	; (8000e90 <normalState+0x7ec>)
 8000e26:	220c      	movs	r2, #12
 8000e28:	601a      	str	r2, [r3, #0]

			time1 = timeGreen;
 8000e2a:	4b1a      	ldr	r3, [pc, #104]	; (8000e94 <normalState+0x7f0>)
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	4a1b      	ldr	r2, [pc, #108]	; (8000e9c <normalState+0x7f8>)
 8000e30:	6013      	str	r3, [r2, #0]
			time2 = 4;
 8000e32:	4b1b      	ldr	r3, [pc, #108]	; (8000ea0 <normalState+0x7fc>)
 8000e34:	2204      	movs	r2, #4
 8000e36:	601a      	str	r2, [r3, #0]

			clearAllLed1();
 8000e38:	f7ff fa50 	bl	80002dc <clearAllLed1>
			clearAllLed2();
 8000e3c:	f7ff fa62 	bl	8000304 <clearAllLed2>

			setTimer(2, 25);
 8000e40:	2119      	movs	r1, #25
 8000e42:	2002      	movs	r0, #2
 8000e44:	f000 fc5e 	bl	8001704 <setTimer>
			setTimer(7,500);
 8000e48:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000e4c:	2007      	movs	r0, #7
 8000e4e:	f000 fc59 	bl	8001704 <setTimer>
		}

		HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",time1), 500);
 8000e52:	4b12      	ldr	r3, [pc, #72]	; (8000e9c <normalState+0x7f8>)
 8000e54:	681a      	ldr	r2, [r3, #0]
 8000e56:	1d3b      	adds	r3, r7, #4
 8000e58:	4913      	ldr	r1, [pc, #76]	; (8000ea8 <normalState+0x804>)
 8000e5a:	4618      	mov	r0, r3
 8000e5c:	f003 fcd2 	bl	8004804 <siprintf>
 8000e60:	4603      	mov	r3, r0
 8000e62:	b29a      	uxth	r2, r3
 8000e64:	1d39      	adds	r1, r7, #4
 8000e66:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000e6a:	4810      	ldr	r0, [pc, #64]	; (8000eac <normalState+0x808>)
 8000e6c:	f002 fdfe 	bl	8003a6c <HAL_UART_Transmit>
		HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",time2), 500);
 8000e70:	4b0b      	ldr	r3, [pc, #44]	; (8000ea0 <normalState+0x7fc>)
 8000e72:	681a      	ldr	r2, [r3, #0]
 8000e74:	1d3b      	adds	r3, r7, #4
 8000e76:	490e      	ldr	r1, [pc, #56]	; (8000eb0 <normalState+0x80c>)
 8000e78:	4618      	mov	r0, r3
 8000e7a:	f003 fcc3 	bl	8004804 <siprintf>
 8000e7e:	4603      	mov	r3, r0
 8000e80:	b29a      	uxth	r2, r3
 8000e82:	1d39      	adds	r1, r7, #4
 8000e84:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000e88:	4808      	ldr	r0, [pc, #32]	; (8000eac <normalState+0x808>)
 8000e8a:	f002 fdef 	bl	8003a6c <HAL_UART_Transmit>
		break;
 8000e8e:	e0a2      	b.n	8000fd6 <normalState+0x932>
 8000e90:	20000118 	.word	0x20000118
 8000e94:	2000002c 	.word	0x2000002c
 8000e98:	20000024 	.word	0x20000024
 8000e9c:	20000138 	.word	0x20000138
 8000ea0:	2000011c 	.word	0x2000011c
 8000ea4:	20000028 	.word	0x20000028
 8000ea8:	08004f24 	.word	0x08004f24
 8000eac:	200001cc 	.word	0x200001cc
 8000eb0:	08004f34 	.word	0x08004f34

	case ManGreen:
		if(isTimerUp(7) == 1)
 8000eb4:	2007      	movs	r0, #7
 8000eb6:	f000 fc11 	bl	80016dc <isTimerUp>
 8000eba:	4603      	mov	r3, r0
 8000ebc:	2b01      	cmp	r3, #1
 8000ebe:	d117      	bne.n	8000ef0 <normalState+0x84c>
		{
			status = RedGreen;
 8000ec0:	4b47      	ldr	r3, [pc, #284]	; (8000fe0 <normalState+0x93c>)
 8000ec2:	2201      	movs	r2, #1
 8000ec4:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8000ec6:	4b47      	ldr	r3, [pc, #284]	; (8000fe4 <normalState+0x940>)
 8000ec8:	681b      	ldr	r3, [r3, #0]
 8000eca:	2264      	movs	r2, #100	; 0x64
 8000ecc:	fb02 f303 	mul.w	r3, r2, r3
 8000ed0:	4619      	mov	r1, r3
 8000ed2:	2000      	movs	r0, #0
 8000ed4:	f000 fc16 	bl	8001704 <setTimer>
			setTimer(1, 1);
 8000ed8:	2101      	movs	r1, #1
 8000eda:	2001      	movs	r0, #1
 8000edc:	f000 fc12 	bl	8001704 <setTimer>

			time1 = timeRed;
 8000ee0:	4b41      	ldr	r3, [pc, #260]	; (8000fe8 <normalState+0x944>)
 8000ee2:	681b      	ldr	r3, [r3, #0]
 8000ee4:	4a41      	ldr	r2, [pc, #260]	; (8000fec <normalState+0x948>)
 8000ee6:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8000ee8:	4b3e      	ldr	r3, [pc, #248]	; (8000fe4 <normalState+0x940>)
 8000eea:	681b      	ldr	r3, [r3, #0]
 8000eec:	4a40      	ldr	r2, [pc, #256]	; (8000ff0 <normalState+0x94c>)
 8000eee:	6013      	str	r3, [r2, #0]
		}

		if(isTimerUp(2) == 1)
 8000ef0:	2002      	movs	r0, #2
 8000ef2:	f000 fbf3 	bl	80016dc <isTimerUp>
 8000ef6:	4603      	mov	r3, r0
 8000ef8:	2b01      	cmp	r3, #1
 8000efa:	d105      	bne.n	8000f08 <normalState+0x864>
		{
			setTimer(2, 25);
 8000efc:	2119      	movs	r1, #25
 8000efe:	2002      	movs	r0, #2
 8000f00:	f000 fc00 	bl	8001704 <setTimer>
			toggleGreen();
 8000f04:	f7ff faa6 	bl	8000454 <toggleGreen>
		}

		if(Is_Button_Pressed(2))
 8000f08:	2002      	movs	r0, #2
 8000f0a:	f7ff f9b5 	bl	8000278 <Is_Button_Pressed>
 8000f0e:	4603      	mov	r3, r0
 8000f10:	2b00      	cmp	r3, #0
 8000f12:	d006      	beq.n	8000f22 <normalState+0x87e>
		{
			increase();
 8000f14:	f7ff fae8 	bl	80004e8 <increase>
			setTimer(7,500);
 8000f18:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000f1c:	2007      	movs	r0, #7
 8000f1e:	f000 fbf1 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(3))
 8000f22:	2003      	movs	r0, #3
 8000f24:	f7ff f9a8 	bl	8000278 <Is_Button_Pressed>
 8000f28:	4603      	mov	r3, r0
 8000f2a:	2b00      	cmp	r3, #0
 8000f2c:	d00d      	beq.n	8000f4a <normalState+0x8a6>
		{
			balance(timeRed, timeYellow, time1);
 8000f2e:	4b2e      	ldr	r3, [pc, #184]	; (8000fe8 <normalState+0x944>)
 8000f30:	681b      	ldr	r3, [r3, #0]
 8000f32:	4a30      	ldr	r2, [pc, #192]	; (8000ff4 <normalState+0x950>)
 8000f34:	6811      	ldr	r1, [r2, #0]
 8000f36:	4a2d      	ldr	r2, [pc, #180]	; (8000fec <normalState+0x948>)
 8000f38:	6812      	ldr	r2, [r2, #0]
 8000f3a:	4618      	mov	r0, r3
 8000f3c:	f7ff fae8 	bl	8000510 <balance>
			setTimer(7,500);
 8000f40:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000f44:	2007      	movs	r0, #7
 8000f46:	f000 fbdd 	bl	8001704 <setTimer>
		}

		if(Is_Button_Pressed(1))
 8000f4a:	2001      	movs	r0, #1
 8000f4c:	f7ff f994 	bl	8000278 <Is_Button_Pressed>
 8000f50:	4603      	mov	r3, r0
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	d017      	beq.n	8000f86 <normalState+0x8e2>
		{
			status = RedGreen;
 8000f56:	4b22      	ldr	r3, [pc, #136]	; (8000fe0 <normalState+0x93c>)
 8000f58:	2201      	movs	r2, #1
 8000f5a:	601a      	str	r2, [r3, #0]

			setTimer(0, timeGreen * 100);
 8000f5c:	4b21      	ldr	r3, [pc, #132]	; (8000fe4 <normalState+0x940>)
 8000f5e:	681b      	ldr	r3, [r3, #0]
 8000f60:	2264      	movs	r2, #100	; 0x64
 8000f62:	fb02 f303 	mul.w	r3, r2, r3
 8000f66:	4619      	mov	r1, r3
 8000f68:	2000      	movs	r0, #0
 8000f6a:	f000 fbcb 	bl	8001704 <setTimer>
			setTimer(1, 1);
 8000f6e:	2101      	movs	r1, #1
 8000f70:	2001      	movs	r0, #1
 8000f72:	f000 fbc7 	bl	8001704 <setTimer>

			time1 = timeRed;
 8000f76:	4b1c      	ldr	r3, [pc, #112]	; (8000fe8 <normalState+0x944>)
 8000f78:	681b      	ldr	r3, [r3, #0]
 8000f7a:	4a1c      	ldr	r2, [pc, #112]	; (8000fec <normalState+0x948>)
 8000f7c:	6013      	str	r3, [r2, #0]
			time2 = timeGreen;
 8000f7e:	4b19      	ldr	r3, [pc, #100]	; (8000fe4 <normalState+0x940>)
 8000f80:	681b      	ldr	r3, [r3, #0]
 8000f82:	4a1b      	ldr	r2, [pc, #108]	; (8000ff0 <normalState+0x94c>)
 8000f84:	6013      	str	r3, [r2, #0]
		}

		HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",time1), 500);
 8000f86:	4b19      	ldr	r3, [pc, #100]	; (8000fec <normalState+0x948>)
 8000f88:	681a      	ldr	r2, [r3, #0]
 8000f8a:	1d3b      	adds	r3, r7, #4
 8000f8c:	491a      	ldr	r1, [pc, #104]	; (8000ff8 <normalState+0x954>)
 8000f8e:	4618      	mov	r0, r3
 8000f90:	f003 fc38 	bl	8004804 <siprintf>
 8000f94:	4603      	mov	r3, r0
 8000f96:	b29a      	uxth	r2, r3
 8000f98:	1d39      	adds	r1, r7, #4
 8000f9a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000f9e:	4817      	ldr	r0, [pc, #92]	; (8000ffc <normalState+0x958>)
 8000fa0:	f002 fd64 	bl	8003a6c <HAL_UART_Transmit>
		HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",time2), 500);
 8000fa4:	4b12      	ldr	r3, [pc, #72]	; (8000ff0 <normalState+0x94c>)
 8000fa6:	681a      	ldr	r2, [r3, #0]
 8000fa8:	1d3b      	adds	r3, r7, #4
 8000faa:	4915      	ldr	r1, [pc, #84]	; (8001000 <normalState+0x95c>)
 8000fac:	4618      	mov	r0, r3
 8000fae:	f003 fc29 	bl	8004804 <siprintf>
 8000fb2:	4603      	mov	r3, r0
 8000fb4:	b29a      	uxth	r2, r3
 8000fb6:	1d39      	adds	r1, r7, #4
 8000fb8:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000fbc:	480f      	ldr	r0, [pc, #60]	; (8000ffc <normalState+0x958>)
 8000fbe:	f002 fd55 	bl	8003a6c <HAL_UART_Transmit>
		break;
 8000fc2:	e008      	b.n	8000fd6 <normalState+0x932>

	default:
		break;
 8000fc4:	bf00      	nop
 8000fc6:	e006      	b.n	8000fd6 <normalState+0x932>
		break;
 8000fc8:	bf00      	nop
 8000fca:	e004      	b.n	8000fd6 <normalState+0x932>
		break;
 8000fcc:	bf00      	nop
 8000fce:	e002      	b.n	8000fd6 <normalState+0x932>
		break;
 8000fd0:	bf00      	nop
 8000fd2:	e000      	b.n	8000fd6 <normalState+0x932>
		break;
 8000fd4:	bf00      	nop
	}
}
 8000fd6:	bf00      	nop
 8000fd8:	3738      	adds	r7, #56	; 0x38
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	bd80      	pop	{r7, pc}
 8000fde:	bf00      	nop
 8000fe0:	20000118 	.word	0x20000118
 8000fe4:	2000002c 	.word	0x2000002c
 8000fe8:	20000024 	.word	0x20000024
 8000fec:	20000138 	.word	0x20000138
 8000ff0:	2000011c 	.word	0x2000011c
 8000ff4:	20000028 	.word	0x20000028
 8000ff8:	08004f24 	.word	0x08004f24
 8000ffc:	200001cc 	.word	0x200001cc
 8001000:	08004f34 	.word	0x08004f34

08001004 <fsm_pedestrian>:
 */

#include "global.h"

void fsm_pedestrian(void)
{
 8001004:	b580      	push	{r7, lr}
 8001006:	af00      	add	r7, sp, #0
	switch(pedestrian_flag)
 8001008:	4b49      	ldr	r3, [pc, #292]	; (8001130 <fsm_pedestrian+0x12c>)
 800100a:	681b      	ldr	r3, [r3, #0]
 800100c:	2b10      	cmp	r3, #16
 800100e:	d023      	beq.n	8001058 <fsm_pedestrian+0x54>
 8001010:	2b10      	cmp	r3, #16
 8001012:	f300 8088 	bgt.w	8001126 <fsm_pedestrian+0x122>
 8001016:	2b0e      	cmp	r3, #14
 8001018:	d002      	beq.n	8001020 <fsm_pedestrian+0x1c>
 800101a:	2b0f      	cmp	r3, #15
 800101c:	d006      	beq.n	800102c <fsm_pedestrian+0x28>
					buzzer(0);
			}
			break;

		default:
			break;
 800101e:	e082      	b.n	8001126 <fsm_pedestrian+0x122>
			buzzer(0);
 8001020:	2000      	movs	r0, #0
 8001022:	f7ff f94b 	bl	80002bc <buzzer>
			clearPedestrian();
 8001026:	f7ff fa23 	bl	8000470 <clearPedestrian>
			break;
 800102a:	e07f      	b.n	800112c <fsm_pedestrian+0x128>
			buzzer(0);
 800102c:	2000      	movs	r0, #0
 800102e:	f7ff f945 	bl	80002bc <buzzer>
			frequency = -1;
 8001032:	4b40      	ldr	r3, [pc, #256]	; (8001134 <fsm_pedestrian+0x130>)
 8001034:	f04f 32ff 	mov.w	r2, #4294967295
 8001038:	601a      	str	r2, [r3, #0]
			frequency1 = 0;
 800103a:	4b3f      	ldr	r3, [pc, #252]	; (8001138 <fsm_pedestrian+0x134>)
 800103c:	2200      	movs	r2, #0
 800103e:	601a      	str	r2, [r3, #0]
			if(isTimerUp(3) == 1)
 8001040:	2003      	movs	r0, #3
 8001042:	f000 fb4b 	bl	80016dc <isTimerUp>
 8001046:	4603      	mov	r3, r0
 8001048:	2b01      	cmp	r3, #1
 800104a:	d102      	bne.n	8001052 <fsm_pedestrian+0x4e>
				pedestrian_flag = Pedestrian_INIT;
 800104c:	4b38      	ldr	r3, [pc, #224]	; (8001130 <fsm_pedestrian+0x12c>)
 800104e:	220e      	movs	r2, #14
 8001050:	601a      	str	r2, [r3, #0]
			displayPedestrianRed();
 8001052:	f7ff fa21 	bl	8000498 <displayPedestrianRed>
			break;
 8001056:	e069      	b.n	800112c <fsm_pedestrian+0x128>
			if(isTimerUp(3) == 1)
 8001058:	2003      	movs	r0, #3
 800105a:	f000 fb3f 	bl	80016dc <isTimerUp>
 800105e:	4603      	mov	r3, r0
 8001060:	2b01      	cmp	r3, #1
 8001062:	d102      	bne.n	800106a <fsm_pedestrian+0x66>
				pedestrian_flag = Pedestrian_INIT;
 8001064:	4b32      	ldr	r3, [pc, #200]	; (8001130 <fsm_pedestrian+0x12c>)
 8001066:	220e      	movs	r2, #14
 8001068:	601a      	str	r2, [r3, #0]
			displayPedestrianGreen();
 800106a:	f7ff fa29 	bl	80004c0 <displayPedestrianGreen>
			if(isTimerUp(4) == 1)
 800106e:	2004      	movs	r0, #4
 8001070:	f000 fb34 	bl	80016dc <isTimerUp>
 8001074:	4603      	mov	r3, r0
 8001076:	2b01      	cmp	r3, #1
 8001078:	d118      	bne.n	80010ac <fsm_pedestrian+0xa8>
				frequency1 = 0;
 800107a:	4b2f      	ldr	r3, [pc, #188]	; (8001138 <fsm_pedestrian+0x134>)
 800107c:	2200      	movs	r2, #0
 800107e:	601a      	str	r2, [r3, #0]
				frequency += 1;
 8001080:	4b2c      	ldr	r3, [pc, #176]	; (8001134 <fsm_pedestrian+0x130>)
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	3301      	adds	r3, #1
 8001086:	4a2b      	ldr	r2, [pc, #172]	; (8001134 <fsm_pedestrian+0x130>)
 8001088:	6013      	str	r3, [r2, #0]
				setTimer(4, 50);
 800108a:	2132      	movs	r1, #50	; 0x32
 800108c:	2004      	movs	r0, #4
 800108e:	f000 fb39 	bl	8001704 <setTimer>
				setTimer(5, freq[frequency]);
 8001092:	4b28      	ldr	r3, [pc, #160]	; (8001134 <fsm_pedestrian+0x130>)
 8001094:	681b      	ldr	r3, [r3, #0]
 8001096:	4a29      	ldr	r2, [pc, #164]	; (800113c <fsm_pedestrian+0x138>)
 8001098:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800109c:	4619      	mov	r1, r3
 800109e:	2005      	movs	r0, #5
 80010a0:	f000 fb30 	bl	8001704 <setTimer>
				setTimer(6, 5);
 80010a4:	2105      	movs	r1, #5
 80010a6:	2006      	movs	r0, #6
 80010a8:	f000 fb2c 	bl	8001704 <setTimer>
			if(frequency1 == 0)
 80010ac:	4b22      	ldr	r3, [pc, #136]	; (8001138 <fsm_pedestrian+0x134>)
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d11d      	bne.n	80010f0 <fsm_pedestrian+0xec>
				if(isTimerUp(6) == 1)
 80010b4:	2006      	movs	r0, #6
 80010b6:	f000 fb11 	bl	80016dc <isTimerUp>
 80010ba:	4603      	mov	r3, r0
 80010bc:	2b01      	cmp	r3, #1
 80010be:	d111      	bne.n	80010e4 <fsm_pedestrian+0xe0>
					buzzer(0);
 80010c0:	2000      	movs	r0, #0
 80010c2:	f7ff f8fb 	bl	80002bc <buzzer>
					setTimer(5, freq[frequency]);
 80010c6:	4b1b      	ldr	r3, [pc, #108]	; (8001134 <fsm_pedestrian+0x130>)
 80010c8:	681b      	ldr	r3, [r3, #0]
 80010ca:	4a1c      	ldr	r2, [pc, #112]	; (800113c <fsm_pedestrian+0x138>)
 80010cc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80010d0:	4619      	mov	r1, r3
 80010d2:	2005      	movs	r0, #5
 80010d4:	f000 fb16 	bl	8001704 <setTimer>
					frequency1++;
 80010d8:	4b17      	ldr	r3, [pc, #92]	; (8001138 <fsm_pedestrian+0x134>)
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	3301      	adds	r3, #1
 80010de:	4a16      	ldr	r2, [pc, #88]	; (8001138 <fsm_pedestrian+0x134>)
 80010e0:	6013      	str	r3, [r2, #0]
			break;
 80010e2:	e022      	b.n	800112a <fsm_pedestrian+0x126>
					buzzer(buzzerValue);
 80010e4:	4b16      	ldr	r3, [pc, #88]	; (8001140 <fsm_pedestrian+0x13c>)
 80010e6:	681b      	ldr	r3, [r3, #0]
 80010e8:	4618      	mov	r0, r3
 80010ea:	f7ff f8e7 	bl	80002bc <buzzer>
			break;
 80010ee:	e01c      	b.n	800112a <fsm_pedestrian+0x126>
			else if(frequency1 == 1)
 80010f0:	4b11      	ldr	r3, [pc, #68]	; (8001138 <fsm_pedestrian+0x134>)
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	2b01      	cmp	r3, #1
 80010f6:	d118      	bne.n	800112a <fsm_pedestrian+0x126>
				if(isTimerUp(5) == 1)
 80010f8:	2005      	movs	r0, #5
 80010fa:	f000 faef 	bl	80016dc <isTimerUp>
 80010fe:	4603      	mov	r3, r0
 8001100:	2b01      	cmp	r3, #1
 8001102:	d10c      	bne.n	800111e <fsm_pedestrian+0x11a>
					buzzer(buzzerValue);
 8001104:	4b0e      	ldr	r3, [pc, #56]	; (8001140 <fsm_pedestrian+0x13c>)
 8001106:	681b      	ldr	r3, [r3, #0]
 8001108:	4618      	mov	r0, r3
 800110a:	f7ff f8d7 	bl	80002bc <buzzer>
					setTimer(6, 5);
 800110e:	2105      	movs	r1, #5
 8001110:	2006      	movs	r0, #6
 8001112:	f000 faf7 	bl	8001704 <setTimer>
					frequency1 = 0;
 8001116:	4b08      	ldr	r3, [pc, #32]	; (8001138 <fsm_pedestrian+0x134>)
 8001118:	2200      	movs	r2, #0
 800111a:	601a      	str	r2, [r3, #0]
			break;
 800111c:	e005      	b.n	800112a <fsm_pedestrian+0x126>
					buzzer(0);
 800111e:	2000      	movs	r0, #0
 8001120:	f7ff f8cc 	bl	80002bc <buzzer>
			break;
 8001124:	e001      	b.n	800112a <fsm_pedestrian+0x126>
			break;
 8001126:	bf00      	nop
 8001128:	e000      	b.n	800112c <fsm_pedestrian+0x128>
			break;
 800112a:	bf00      	nop
	}
}
 800112c:	bf00      	nop
 800112e:	bd80      	pop	{r7, pc}
 8001130:	20000030 	.word	0x20000030
 8001134:	20000034 	.word	0x20000034
 8001138:	20000124 	.word	0x20000124
 800113c:	20000038 	.word	0x20000038
 8001140:	20000120 	.word	0x20000120

08001144 <HAL_TIM_PeriodElapsedCallback>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b082      	sub	sp, #8
 8001148:	af00      	add	r7, sp, #0
 800114a:	6078      	str	r0, [r7, #4]
	timerRun();
 800114c:	f000 faf2 	bl	8001734 <timerRun>
	SCH_Update();
 8001150:	f000 fa7c 	bl	800164c <SCH_Update>
	Button_Reading();
 8001154:	f7fe fffa 	bl	800014c <Button_Reading>
}
 8001158:	bf00      	nop
 800115a:	3708      	adds	r7, #8
 800115c:	46bd      	mov	sp, r7
 800115e:	bd80      	pop	{r7, pc}

08001160 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001160:	b580      	push	{r7, lr}
 8001162:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001164:	f000 fcb4 	bl	8001ad0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001168:	f000 f824 	bl	80011b4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800116c:	f000 f950 	bl	8001410 <MX_GPIO_Init>
  MX_TIM3_Init();
 8001170:	f000 f8ae 	bl	80012d0 <MX_TIM3_Init>
  MX_TIM2_Init();
 8001174:	f000 f860 	bl	8001238 <MX_TIM2_Init>
  MX_USART2_UART_Init();
 8001178:	f000 f920 	bl	80013bc <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */

 HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 800117c:	2100      	movs	r1, #0
 800117e:	4809      	ldr	r0, [pc, #36]	; (80011a4 <main+0x44>)
 8001180:	f001 fdb8 	bl	8002cf4 <HAL_TIM_PWM_Start>
 HAL_TIM_Base_Start_IT(&htim2);
 8001184:	4808      	ldr	r0, [pc, #32]	; (80011a8 <main+0x48>)
 8001186:	f001 fd0b 	bl	8002ba0 <HAL_TIM_Base_Start_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

// SCH_Add_Task(timerRun, 0, 1);
 SCH_Add_Task(normalState, 1, 1);
 800118a:	2201      	movs	r2, #1
 800118c:	2101      	movs	r1, #1
 800118e:	4807      	ldr	r0, [pc, #28]	; (80011ac <main+0x4c>)
 8001190:	f000 fa3e 	bl	8001610 <SCH_Add_Task>
 SCH_Add_Task(fsm_pedestrian, 1, 1);
 8001194:	2201      	movs	r2, #1
 8001196:	2101      	movs	r1, #1
 8001198:	4805      	ldr	r0, [pc, #20]	; (80011b0 <main+0x50>)
 800119a:	f000 fa39 	bl	8001610 <SCH_Add_Task>

  while (1)
  {
    /* USER CODE END WHILE */
	  SCH_Dispatch_Tasks();
 800119e:	f000 fa71 	bl	8001684 <SCH_Dispatch_Tasks>
 80011a2:	e7fc      	b.n	800119e <main+0x3e>
 80011a4:	2000013c 	.word	0x2000013c
 80011a8:	20000184 	.word	0x20000184
 80011ac:	080006a5 	.word	0x080006a5
 80011b0:	08001005 	.word	0x08001005

080011b4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80011b4:	b580      	push	{r7, lr}
 80011b6:	b090      	sub	sp, #64	; 0x40
 80011b8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011ba:	f107 0318 	add.w	r3, r7, #24
 80011be:	2228      	movs	r2, #40	; 0x28
 80011c0:	2100      	movs	r1, #0
 80011c2:	4618      	mov	r0, r3
 80011c4:	f003 fa60 	bl	8004688 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011c8:	1d3b      	adds	r3, r7, #4
 80011ca:	2200      	movs	r2, #0
 80011cc:	601a      	str	r2, [r3, #0]
 80011ce:	605a      	str	r2, [r3, #4]
 80011d0:	609a      	str	r2, [r3, #8]
 80011d2:	60da      	str	r2, [r3, #12]
 80011d4:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011d6:	2302      	movs	r3, #2
 80011d8:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011da:	2301      	movs	r3, #1
 80011dc:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011de:	2310      	movs	r3, #16
 80011e0:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80011e2:	2302      	movs	r3, #2
 80011e4:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 80011e6:	2300      	movs	r3, #0
 80011e8:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 80011ea:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 80011ee:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011f0:	f107 0318 	add.w	r3, r7, #24
 80011f4:	4618      	mov	r0, r3
 80011f6:	f001 f875 	bl	80022e4 <HAL_RCC_OscConfig>
 80011fa:	4603      	mov	r3, r0
 80011fc:	2b00      	cmp	r3, #0
 80011fe:	d001      	beq.n	8001204 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8001200:	f000 f974 	bl	80014ec <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001204:	230f      	movs	r3, #15
 8001206:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001208:	2302      	movs	r3, #2
 800120a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800120c:	2300      	movs	r3, #0
 800120e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001210:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001214:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001216:	2300      	movs	r3, #0
 8001218:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800121a:	1d3b      	adds	r3, r7, #4
 800121c:	2102      	movs	r1, #2
 800121e:	4618      	mov	r0, r3
 8001220:	f001 fae0 	bl	80027e4 <HAL_RCC_ClockConfig>
 8001224:	4603      	mov	r3, r0
 8001226:	2b00      	cmp	r3, #0
 8001228:	d001      	beq.n	800122e <SystemClock_Config+0x7a>
  {
    Error_Handler();
 800122a:	f000 f95f 	bl	80014ec <Error_Handler>
  }
}
 800122e:	bf00      	nop
 8001230:	3740      	adds	r7, #64	; 0x40
 8001232:	46bd      	mov	sp, r7
 8001234:	bd80      	pop	{r7, pc}
	...

08001238 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001238:	b580      	push	{r7, lr}
 800123a:	b086      	sub	sp, #24
 800123c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800123e:	f107 0308 	add.w	r3, r7, #8
 8001242:	2200      	movs	r2, #0
 8001244:	601a      	str	r2, [r3, #0]
 8001246:	605a      	str	r2, [r3, #4]
 8001248:	609a      	str	r2, [r3, #8]
 800124a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800124c:	463b      	mov	r3, r7
 800124e:	2200      	movs	r2, #0
 8001250:	601a      	str	r2, [r3, #0]
 8001252:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001254:	4b1d      	ldr	r3, [pc, #116]	; (80012cc <MX_TIM2_Init+0x94>)
 8001256:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800125a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 6399;
 800125c:	4b1b      	ldr	r3, [pc, #108]	; (80012cc <MX_TIM2_Init+0x94>)
 800125e:	f641 02ff 	movw	r2, #6399	; 0x18ff
 8001262:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001264:	4b19      	ldr	r3, [pc, #100]	; (80012cc <MX_TIM2_Init+0x94>)
 8001266:	2200      	movs	r2, #0
 8001268:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 99;
 800126a:	4b18      	ldr	r3, [pc, #96]	; (80012cc <MX_TIM2_Init+0x94>)
 800126c:	2263      	movs	r2, #99	; 0x63
 800126e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001270:	4b16      	ldr	r3, [pc, #88]	; (80012cc <MX_TIM2_Init+0x94>)
 8001272:	2200      	movs	r2, #0
 8001274:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001276:	4b15      	ldr	r3, [pc, #84]	; (80012cc <MX_TIM2_Init+0x94>)
 8001278:	2200      	movs	r2, #0
 800127a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800127c:	4813      	ldr	r0, [pc, #76]	; (80012cc <MX_TIM2_Init+0x94>)
 800127e:	f001 fc3f 	bl	8002b00 <HAL_TIM_Base_Init>
 8001282:	4603      	mov	r3, r0
 8001284:	2b00      	cmp	r3, #0
 8001286:	d001      	beq.n	800128c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001288:	f000 f930 	bl	80014ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800128c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001290:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001292:	f107 0308 	add.w	r3, r7, #8
 8001296:	4619      	mov	r1, r3
 8001298:	480c      	ldr	r0, [pc, #48]	; (80012cc <MX_TIM2_Init+0x94>)
 800129a:	f001 ff97 	bl	80031cc <HAL_TIM_ConfigClockSource>
 800129e:	4603      	mov	r3, r0
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	d001      	beq.n	80012a8 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80012a4:	f000 f922 	bl	80014ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80012a8:	2300      	movs	r3, #0
 80012aa:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80012ac:	2300      	movs	r3, #0
 80012ae:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80012b0:	463b      	mov	r3, r7
 80012b2:	4619      	mov	r1, r3
 80012b4:	4805      	ldr	r0, [pc, #20]	; (80012cc <MX_TIM2_Init+0x94>)
 80012b6:	f002 fb19 	bl	80038ec <HAL_TIMEx_MasterConfigSynchronization>
 80012ba:	4603      	mov	r3, r0
 80012bc:	2b00      	cmp	r3, #0
 80012be:	d001      	beq.n	80012c4 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80012c0:	f000 f914 	bl	80014ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80012c4:	bf00      	nop
 80012c6:	3718      	adds	r7, #24
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bd80      	pop	{r7, pc}
 80012cc:	20000184 	.word	0x20000184

080012d0 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80012d0:	b580      	push	{r7, lr}
 80012d2:	b08e      	sub	sp, #56	; 0x38
 80012d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80012d6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80012da:	2200      	movs	r2, #0
 80012dc:	601a      	str	r2, [r3, #0]
 80012de:	605a      	str	r2, [r3, #4]
 80012e0:	609a      	str	r2, [r3, #8]
 80012e2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80012e4:	f107 0320 	add.w	r3, r7, #32
 80012e8:	2200      	movs	r2, #0
 80012ea:	601a      	str	r2, [r3, #0]
 80012ec:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80012ee:	1d3b      	adds	r3, r7, #4
 80012f0:	2200      	movs	r2, #0
 80012f2:	601a      	str	r2, [r3, #0]
 80012f4:	605a      	str	r2, [r3, #4]
 80012f6:	609a      	str	r2, [r3, #8]
 80012f8:	60da      	str	r2, [r3, #12]
 80012fa:	611a      	str	r2, [r3, #16]
 80012fc:	615a      	str	r2, [r3, #20]
 80012fe:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001300:	4b2c      	ldr	r3, [pc, #176]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001302:	4a2d      	ldr	r2, [pc, #180]	; (80013b8 <MX_TIM3_Init+0xe8>)
 8001304:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 8001306:	4b2b      	ldr	r3, [pc, #172]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001308:	223f      	movs	r2, #63	; 0x3f
 800130a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800130c:	4b29      	ldr	r3, [pc, #164]	; (80013b4 <MX_TIM3_Init+0xe4>)
 800130e:	2200      	movs	r2, #0
 8001310:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8001312:	4b28      	ldr	r3, [pc, #160]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001314:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001318:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800131a:	4b26      	ldr	r3, [pc, #152]	; (80013b4 <MX_TIM3_Init+0xe4>)
 800131c:	2200      	movs	r2, #0
 800131e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001320:	4b24      	ldr	r3, [pc, #144]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001322:	2200      	movs	r2, #0
 8001324:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001326:	4823      	ldr	r0, [pc, #140]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001328:	f001 fbea 	bl	8002b00 <HAL_TIM_Base_Init>
 800132c:	4603      	mov	r3, r0
 800132e:	2b00      	cmp	r3, #0
 8001330:	d001      	beq.n	8001336 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8001332:	f000 f8db 	bl	80014ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001336:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800133a:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800133c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001340:	4619      	mov	r1, r3
 8001342:	481c      	ldr	r0, [pc, #112]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001344:	f001 ff42 	bl	80031cc <HAL_TIM_ConfigClockSource>
 8001348:	4603      	mov	r3, r0
 800134a:	2b00      	cmp	r3, #0
 800134c:	d001      	beq.n	8001352 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 800134e:	f000 f8cd 	bl	80014ec <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001352:	4818      	ldr	r0, [pc, #96]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001354:	f001 fc76 	bl	8002c44 <HAL_TIM_PWM_Init>
 8001358:	4603      	mov	r3, r0
 800135a:	2b00      	cmp	r3, #0
 800135c:	d001      	beq.n	8001362 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 800135e:	f000 f8c5 	bl	80014ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001362:	2300      	movs	r3, #0
 8001364:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001366:	2300      	movs	r3, #0
 8001368:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800136a:	f107 0320 	add.w	r3, r7, #32
 800136e:	4619      	mov	r1, r3
 8001370:	4810      	ldr	r0, [pc, #64]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001372:	f002 fabb 	bl	80038ec <HAL_TIMEx_MasterConfigSynchronization>
 8001376:	4603      	mov	r3, r0
 8001378:	2b00      	cmp	r3, #0
 800137a:	d001      	beq.n	8001380 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 800137c:	f000 f8b6 	bl	80014ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001380:	2360      	movs	r3, #96	; 0x60
 8001382:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001384:	2300      	movs	r3, #0
 8001386:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001388:	2300      	movs	r3, #0
 800138a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800138c:	2300      	movs	r3, #0
 800138e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001390:	1d3b      	adds	r3, r7, #4
 8001392:	2200      	movs	r2, #0
 8001394:	4619      	mov	r1, r3
 8001396:	4807      	ldr	r0, [pc, #28]	; (80013b4 <MX_TIM3_Init+0xe4>)
 8001398:	f001 fe56 	bl	8003048 <HAL_TIM_PWM_ConfigChannel>
 800139c:	4603      	mov	r3, r0
 800139e:	2b00      	cmp	r3, #0
 80013a0:	d001      	beq.n	80013a6 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 80013a2:	f000 f8a3 	bl	80014ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80013a6:	4803      	ldr	r0, [pc, #12]	; (80013b4 <MX_TIM3_Init+0xe4>)
 80013a8:	f000 fa66 	bl	8001878 <HAL_TIM_MspPostInit>

}
 80013ac:	bf00      	nop
 80013ae:	3738      	adds	r7, #56	; 0x38
 80013b0:	46bd      	mov	sp, r7
 80013b2:	bd80      	pop	{r7, pc}
 80013b4:	2000013c 	.word	0x2000013c
 80013b8:	40000400 	.word	0x40000400

080013bc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80013bc:	b580      	push	{r7, lr}
 80013be:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80013c0:	4b11      	ldr	r3, [pc, #68]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013c2:	4a12      	ldr	r2, [pc, #72]	; (800140c <MX_USART2_UART_Init+0x50>)
 80013c4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 80013c6:	4b10      	ldr	r3, [pc, #64]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013c8:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80013cc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80013ce:	4b0e      	ldr	r3, [pc, #56]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013d0:	2200      	movs	r2, #0
 80013d2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80013d4:	4b0c      	ldr	r3, [pc, #48]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013d6:	2200      	movs	r2, #0
 80013d8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80013da:	4b0b      	ldr	r3, [pc, #44]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013dc:	2200      	movs	r2, #0
 80013de:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80013e0:	4b09      	ldr	r3, [pc, #36]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013e2:	220c      	movs	r2, #12
 80013e4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80013e6:	4b08      	ldr	r3, [pc, #32]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013e8:	2200      	movs	r2, #0
 80013ea:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80013ec:	4b06      	ldr	r3, [pc, #24]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013ee:	2200      	movs	r2, #0
 80013f0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80013f2:	4805      	ldr	r0, [pc, #20]	; (8001408 <MX_USART2_UART_Init+0x4c>)
 80013f4:	f002 faea 	bl	80039cc <HAL_UART_Init>
 80013f8:	4603      	mov	r3, r0
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d001      	beq.n	8001402 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80013fe:	f000 f875 	bl	80014ec <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001402:	bf00      	nop
 8001404:	bd80      	pop	{r7, pc}
 8001406:	bf00      	nop
 8001408:	200001cc 	.word	0x200001cc
 800140c:	40004400 	.word	0x40004400

08001410 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001410:	b580      	push	{r7, lr}
 8001412:	b086      	sub	sp, #24
 8001414:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001416:	f107 0308 	add.w	r3, r7, #8
 800141a:	2200      	movs	r2, #0
 800141c:	601a      	str	r2, [r3, #0]
 800141e:	605a      	str	r2, [r3, #4]
 8001420:	609a      	str	r2, [r3, #8]
 8001422:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001424:	4b2e      	ldr	r3, [pc, #184]	; (80014e0 <MX_GPIO_Init+0xd0>)
 8001426:	699b      	ldr	r3, [r3, #24]
 8001428:	4a2d      	ldr	r2, [pc, #180]	; (80014e0 <MX_GPIO_Init+0xd0>)
 800142a:	f043 0304 	orr.w	r3, r3, #4
 800142e:	6193      	str	r3, [r2, #24]
 8001430:	4b2b      	ldr	r3, [pc, #172]	; (80014e0 <MX_GPIO_Init+0xd0>)
 8001432:	699b      	ldr	r3, [r3, #24]
 8001434:	f003 0304 	and.w	r3, r3, #4
 8001438:	607b      	str	r3, [r7, #4]
 800143a:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800143c:	4b28      	ldr	r3, [pc, #160]	; (80014e0 <MX_GPIO_Init+0xd0>)
 800143e:	699b      	ldr	r3, [r3, #24]
 8001440:	4a27      	ldr	r2, [pc, #156]	; (80014e0 <MX_GPIO_Init+0xd0>)
 8001442:	f043 0308 	orr.w	r3, r3, #8
 8001446:	6193      	str	r3, [r2, #24]
 8001448:	4b25      	ldr	r3, [pc, #148]	; (80014e0 <MX_GPIO_Init+0xd0>)
 800144a:	699b      	ldr	r3, [r3, #24]
 800144c:	f003 0308 	and.w	r3, r3, #8
 8001450:	603b      	str	r3, [r7, #0]
 8001452:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D6_Pin|D3_Pin|D5_Pin|D4_Pin, GPIO_PIN_RESET);
 8001454:	2200      	movs	r2, #0
 8001456:	f44f 6187 	mov.w	r1, #1080	; 0x438
 800145a:	4822      	ldr	r0, [pc, #136]	; (80014e4 <MX_GPIO_Init+0xd4>)
 800145c:	f000 fef5 	bl	800224a <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, D7_Pin|D2_Pin, GPIO_PIN_RESET);
 8001460:	2200      	movs	r2, #0
 8001462:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8001466:	4820      	ldr	r0, [pc, #128]	; (80014e8 <MX_GPIO_Init+0xd8>)
 8001468:	f000 feef 	bl	800224a <HAL_GPIO_WritePin>

  /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin */
  GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin;
 800146c:	2313      	movs	r3, #19
 800146e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001470:	2300      	movs	r3, #0
 8001472:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001474:	2300      	movs	r3, #0
 8001476:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001478:	f107 0308 	add.w	r3, r7, #8
 800147c:	4619      	mov	r1, r3
 800147e:	481a      	ldr	r0, [pc, #104]	; (80014e8 <MX_GPIO_Init+0xd8>)
 8001480:	f000 fd48 	bl	8001f14 <HAL_GPIO_Init>

  /*Configure GPIO pin : A3_Pin */
  GPIO_InitStruct.Pin = A3_Pin;
 8001484:	2301      	movs	r3, #1
 8001486:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001488:	2300      	movs	r3, #0
 800148a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800148c:	2300      	movs	r3, #0
 800148e:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 8001490:	f107 0308 	add.w	r3, r7, #8
 8001494:	4619      	mov	r1, r3
 8001496:	4813      	ldr	r0, [pc, #76]	; (80014e4 <MX_GPIO_Init+0xd4>)
 8001498:	f000 fd3c 	bl	8001f14 <HAL_GPIO_Init>

  /*Configure GPIO pins : D6_Pin D3_Pin D5_Pin D4_Pin */
  GPIO_InitStruct.Pin = D6_Pin|D3_Pin|D5_Pin|D4_Pin;
 800149c:	f44f 6387 	mov.w	r3, #1080	; 0x438
 80014a0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a2:	2301      	movs	r3, #1
 80014a4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014a6:	2300      	movs	r3, #0
 80014a8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014aa:	2302      	movs	r3, #2
 80014ac:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014ae:	f107 0308 	add.w	r3, r7, #8
 80014b2:	4619      	mov	r1, r3
 80014b4:	480b      	ldr	r0, [pc, #44]	; (80014e4 <MX_GPIO_Init+0xd4>)
 80014b6:	f000 fd2d 	bl	8001f14 <HAL_GPIO_Init>

  /*Configure GPIO pins : D7_Pin D2_Pin */
  GPIO_InitStruct.Pin = D7_Pin|D2_Pin;
 80014ba:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 80014be:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014c0:	2301      	movs	r3, #1
 80014c2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014c4:	2300      	movs	r3, #0
 80014c6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014c8:	2302      	movs	r3, #2
 80014ca:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014cc:	f107 0308 	add.w	r3, r7, #8
 80014d0:	4619      	mov	r1, r3
 80014d2:	4805      	ldr	r0, [pc, #20]	; (80014e8 <MX_GPIO_Init+0xd8>)
 80014d4:	f000 fd1e 	bl	8001f14 <HAL_GPIO_Init>

}
 80014d8:	bf00      	nop
 80014da:	3718      	adds	r7, #24
 80014dc:	46bd      	mov	sp, r7
 80014de:	bd80      	pop	{r7, pc}
 80014e0:	40021000 	.word	0x40021000
 80014e4:	40010c00 	.word	0x40010c00
 80014e8:	40010800 	.word	0x40010800

080014ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80014ec:	b480      	push	{r7}
 80014ee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80014f0:	b672      	cpsid	i
}
 80014f2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80014f4:	e7fe      	b.n	80014f4 <Error_Handler+0x8>
	...

080014f8 <AddNode>:
{
	head = NULL;
}

void AddNode(sTask NewTask)
{
 80014f8:	b590      	push	{r4, r7, lr}
 80014fa:	b087      	sub	sp, #28
 80014fc:	af00      	add	r7, sp, #0
 80014fe:	463c      	mov	r4, r7
 8001500:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	struct Node* NewNode = (struct Node*)malloc(sizeof(struct Node));
 8001504:	2014      	movs	r0, #20
 8001506:	f003 f8af 	bl	8004668 <malloc>
 800150a:	4603      	mov	r3, r0
 800150c:	613b      	str	r3, [r7, #16]
	NewNode -> data.pTask = NewTask.pTask;
 800150e:	683a      	ldr	r2, [r7, #0]
 8001510:	693b      	ldr	r3, [r7, #16]
 8001512:	601a      	str	r2, [r3, #0]
	NewNode -> data.Delay = NewTask.Delay;
 8001514:	687a      	ldr	r2, [r7, #4]
 8001516:	693b      	ldr	r3, [r7, #16]
 8001518:	605a      	str	r2, [r3, #4]
	NewNode -> data.Period = NewTask.Period;
 800151a:	68ba      	ldr	r2, [r7, #8]
 800151c:	693b      	ldr	r3, [r7, #16]
 800151e:	609a      	str	r2, [r3, #8]
	NewNode -> data.RunMe = NewTask.RunMe;
 8001520:	7b3a      	ldrb	r2, [r7, #12]
 8001522:	693b      	ldr	r3, [r7, #16]
 8001524:	731a      	strb	r2, [r3, #12]
	NewNode -> next = NULL;
 8001526:	693b      	ldr	r3, [r7, #16]
 8001528:	2200      	movs	r2, #0
 800152a:	611a      	str	r2, [r3, #16]

	// List is empty, just addNode
	if(head == NULL)
 800152c:	4b2b      	ldr	r3, [pc, #172]	; (80015dc <AddNode+0xe4>)
 800152e:	681b      	ldr	r3, [r3, #0]
 8001530:	2b00      	cmp	r3, #0
 8001532:	d103      	bne.n	800153c <AddNode+0x44>
	{
		head = NewNode;
 8001534:	4a29      	ldr	r2, [pc, #164]	; (80015dc <AddNode+0xe4>)
 8001536:	693b      	ldr	r3, [r7, #16]
 8001538:	6013      	str	r3, [r2, #0]
		return;
 800153a:	e04c      	b.n	80015d6 <AddNode+0xde>
	}
	struct Node* temp = head;
 800153c:	4b27      	ldr	r3, [pc, #156]	; (80015dc <AddNode+0xe4>)
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	617b      	str	r3, [r7, #20]

	// If the list has A5 B3 C2 Adding D3  ->  D3 A2 B3 C2
	if(NewNode -> data.Delay < temp -> data.Delay )
 8001542:	693b      	ldr	r3, [r7, #16]
 8001544:	685a      	ldr	r2, [r3, #4]
 8001546:	697b      	ldr	r3, [r7, #20]
 8001548:	685b      	ldr	r3, [r3, #4]
 800154a:	429a      	cmp	r2, r3
 800154c:	d21e      	bcs.n	800158c <AddNode+0x94>
	{
		temp -> data.Delay -= NewNode -> data.Delay;
 800154e:	697b      	ldr	r3, [r7, #20]
 8001550:	685a      	ldr	r2, [r3, #4]
 8001552:	693b      	ldr	r3, [r7, #16]
 8001554:	685b      	ldr	r3, [r3, #4]
 8001556:	1ad2      	subs	r2, r2, r3
 8001558:	697b      	ldr	r3, [r7, #20]
 800155a:	605a      	str	r2, [r3, #4]
		NewNode -> next = temp;
 800155c:	693b      	ldr	r3, [r7, #16]
 800155e:	697a      	ldr	r2, [r7, #20]
 8001560:	611a      	str	r2, [r3, #16]
		head = NewNode;
 8001562:	4a1e      	ldr	r2, [pc, #120]	; (80015dc <AddNode+0xe4>)
 8001564:	693b      	ldr	r3, [r7, #16]
 8001566:	6013      	str	r3, [r2, #0]
		return;
 8001568:	e035      	b.n	80015d6 <AddNode+0xde>
	}

	// If the list has A5 B3 C2 Adding D9  ->  A5 B3 D1 C1
	while(temp -> next != NULL)
	{
		NewNode -> data.Delay -= temp -> data.Delay;
 800156a:	693b      	ldr	r3, [r7, #16]
 800156c:	685a      	ldr	r2, [r3, #4]
 800156e:	697b      	ldr	r3, [r7, #20]
 8001570:	685b      	ldr	r3, [r3, #4]
 8001572:	1ad2      	subs	r2, r2, r3
 8001574:	693b      	ldr	r3, [r7, #16]
 8001576:	605a      	str	r2, [r3, #4]
		if(NewNode -> data.Delay <= temp -> next -> data.Delay)
 8001578:	693b      	ldr	r3, [r7, #16]
 800157a:	685a      	ldr	r2, [r3, #4]
 800157c:	697b      	ldr	r3, [r7, #20]
 800157e:	691b      	ldr	r3, [r3, #16]
 8001580:	685b      	ldr	r3, [r3, #4]
 8001582:	429a      	cmp	r2, r3
 8001584:	d907      	bls.n	8001596 <AddNode+0x9e>
			break;

		temp = temp -> next;
 8001586:	697b      	ldr	r3, [r7, #20]
 8001588:	691b      	ldr	r3, [r3, #16]
 800158a:	617b      	str	r3, [r7, #20]
	while(temp -> next != NULL)
 800158c:	697b      	ldr	r3, [r7, #20]
 800158e:	691b      	ldr	r3, [r3, #16]
 8001590:	2b00      	cmp	r3, #0
 8001592:	d1ea      	bne.n	800156a <AddNode+0x72>
 8001594:	e000      	b.n	8001598 <AddNode+0xa0>
			break;
 8001596:	bf00      	nop
	}

	// temp current in B3 and D become D1
	if(temp -> next == NULL)
 8001598:	697b      	ldr	r3, [r7, #20]
 800159a:	691b      	ldr	r3, [r3, #16]
 800159c:	2b00      	cmp	r3, #0
 800159e:	d10a      	bne.n	80015b6 <AddNode+0xbe>
	{
		NewNode -> data.Delay -= temp -> data.Delay;
 80015a0:	693b      	ldr	r3, [r7, #16]
 80015a2:	685a      	ldr	r2, [r3, #4]
 80015a4:	697b      	ldr	r3, [r7, #20]
 80015a6:	685b      	ldr	r3, [r3, #4]
 80015a8:	1ad2      	subs	r2, r2, r3
 80015aa:	693b      	ldr	r3, [r7, #16]
 80015ac:	605a      	str	r2, [r3, #4]
		temp -> next = NewNode;
 80015ae:	697b      	ldr	r3, [r7, #20]
 80015b0:	693a      	ldr	r2, [r7, #16]
 80015b2:	611a      	str	r2, [r3, #16]
 80015b4:	e00f      	b.n	80015d6 <AddNode+0xde>
	}
	else
	{
		temp -> next -> data.Delay -= NewNode -> data.Delay; // convert C2 to C1
 80015b6:	697b      	ldr	r3, [r7, #20]
 80015b8:	691b      	ldr	r3, [r3, #16]
 80015ba:	6859      	ldr	r1, [r3, #4]
 80015bc:	693b      	ldr	r3, [r7, #16]
 80015be:	685a      	ldr	r2, [r3, #4]
 80015c0:	697b      	ldr	r3, [r7, #20]
 80015c2:	691b      	ldr	r3, [r3, #16]
 80015c4:	1a8a      	subs	r2, r1, r2
 80015c6:	605a      	str	r2, [r3, #4]
		NewNode -> next = temp -> next;
 80015c8:	697b      	ldr	r3, [r7, #20]
 80015ca:	691a      	ldr	r2, [r3, #16]
 80015cc:	693b      	ldr	r3, [r7, #16]
 80015ce:	611a      	str	r2, [r3, #16]
		temp -> next = NewNode;
 80015d0:	697b      	ldr	r3, [r7, #20]
 80015d2:	693a      	ldr	r2, [r7, #16]
 80015d4:	611a      	str	r2, [r3, #16]
	}
}
 80015d6:	371c      	adds	r7, #28
 80015d8:	46bd      	mov	sp, r7
 80015da:	bd90      	pop	{r4, r7, pc}
 80015dc:	20000128 	.word	0x20000128

080015e0 <DeleteBegin>:

void DeleteBegin()
{
 80015e0:	b580      	push	{r7, lr}
 80015e2:	b082      	sub	sp, #8
 80015e4:	af00      	add	r7, sp, #0
	struct Node* temp = head;
 80015e6:	4b09      	ldr	r3, [pc, #36]	; (800160c <DeleteBegin+0x2c>)
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	607b      	str	r3, [r7, #4]
	if(temp == NULL) return;
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d008      	beq.n	8001604 <DeleteBegin+0x24>
	head = head -> next;
 80015f2:	4b06      	ldr	r3, [pc, #24]	; (800160c <DeleteBegin+0x2c>)
 80015f4:	681b      	ldr	r3, [r3, #0]
 80015f6:	691b      	ldr	r3, [r3, #16]
 80015f8:	4a04      	ldr	r2, [pc, #16]	; (800160c <DeleteBegin+0x2c>)
 80015fa:	6013      	str	r3, [r2, #0]
	free(temp);
 80015fc:	6878      	ldr	r0, [r7, #4]
 80015fe:	f003 f83b 	bl	8004678 <free>
 8001602:	e000      	b.n	8001606 <DeleteBegin+0x26>
	if(temp == NULL) return;
 8001604:	bf00      	nop
}
 8001606:	3708      	adds	r7, #8
 8001608:	46bd      	mov	sp, r7
 800160a:	bd80      	pop	{r7, pc}
 800160c:	20000128 	.word	0x20000128

08001610 <SCH_Add_Task>:

void SCH_Add_Task(void (*p_function)(), uint32_t DELAY, uint32_t PERIOD)
{
 8001610:	b580      	push	{r7, lr}
 8001612:	b088      	sub	sp, #32
 8001614:	af00      	add	r7, sp, #0
 8001616:	60f8      	str	r0, [r7, #12]
 8001618:	60b9      	str	r1, [r7, #8]
 800161a:	607a      	str	r2, [r7, #4]
	sTask NewTask;
	NewTask.pTask = p_function;
 800161c:	68fb      	ldr	r3, [r7, #12]
 800161e:	613b      	str	r3, [r7, #16]
	NewTask.Delay = DELAY;
 8001620:	68bb      	ldr	r3, [r7, #8]
 8001622:	617b      	str	r3, [r7, #20]
	NewTask.Period = PERIOD;
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	61bb      	str	r3, [r7, #24]

	if(NewTask.Delay == 0)
 8001628:	697b      	ldr	r3, [r7, #20]
 800162a:	2b00      	cmp	r3, #0
 800162c:	d102      	bne.n	8001634 <SCH_Add_Task+0x24>
		NewTask.RunMe = 1;
 800162e:	2301      	movs	r3, #1
 8001630:	773b      	strb	r3, [r7, #28]
 8001632:	e001      	b.n	8001638 <SCH_Add_Task+0x28>
	else
		NewTask.RunMe = 0;
 8001634:	2300      	movs	r3, #0
 8001636:	773b      	strb	r3, [r7, #28]

	AddNode(NewTask);
 8001638:	f107 0310 	add.w	r3, r7, #16
 800163c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800163e:	f7ff ff5b 	bl	80014f8 <AddNode>
}
 8001642:	bf00      	nop
 8001644:	3720      	adds	r7, #32
 8001646:	46bd      	mov	sp, r7
 8001648:	bd80      	pop	{r7, pc}
	...

0800164c <SCH_Update>:

void SCH_Update(void)
{
 800164c:	b480      	push	{r7}
 800164e:	af00      	add	r7, sp, #0
	if(head == NULL) return;
 8001650:	4b0b      	ldr	r3, [pc, #44]	; (8001680 <SCH_Update+0x34>)
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	2b00      	cmp	r3, #0
 8001656:	d00f      	beq.n	8001678 <SCH_Update+0x2c>

	if(head -> data.Delay <= 0)
 8001658:	4b09      	ldr	r3, [pc, #36]	; (8001680 <SCH_Update+0x34>)
 800165a:	681b      	ldr	r3, [r3, #0]
 800165c:	685b      	ldr	r3, [r3, #4]
 800165e:	2b00      	cmp	r3, #0
 8001660:	d104      	bne.n	800166c <SCH_Update+0x20>
		head -> data.RunMe = 1;
 8001662:	4b07      	ldr	r3, [pc, #28]	; (8001680 <SCH_Update+0x34>)
 8001664:	681b      	ldr	r3, [r3, #0]
 8001666:	2201      	movs	r2, #1
 8001668:	731a      	strb	r2, [r3, #12]
 800166a:	e006      	b.n	800167a <SCH_Update+0x2e>
	else
		head -> data.Delay--;
 800166c:	4b04      	ldr	r3, [pc, #16]	; (8001680 <SCH_Update+0x34>)
 800166e:	681b      	ldr	r3, [r3, #0]
 8001670:	685a      	ldr	r2, [r3, #4]
 8001672:	3a01      	subs	r2, #1
 8001674:	605a      	str	r2, [r3, #4]
 8001676:	e000      	b.n	800167a <SCH_Update+0x2e>
	if(head == NULL) return;
 8001678:	bf00      	nop
}
 800167a:	46bd      	mov	sp, r7
 800167c:	bc80      	pop	{r7}
 800167e:	4770      	bx	lr
 8001680:	20000128 	.word	0x20000128

08001684 <SCH_Dispatch_Tasks>:

void SCH_Dispatch_Tasks(void)
{
 8001684:	b590      	push	{r4, r7, lr}
 8001686:	b085      	sub	sp, #20
 8001688:	af00      	add	r7, sp, #0
	if(head == NULL) return;
 800168a:	4b13      	ldr	r3, [pc, #76]	; (80016d8 <SCH_Dispatch_Tasks+0x54>)
 800168c:	681b      	ldr	r3, [r3, #0]
 800168e:	2b00      	cmp	r3, #0
 8001690:	d01e      	beq.n	80016d0 <SCH_Dispatch_Tasks+0x4c>

	if(head -> data.RunMe > 0)
 8001692:	4b11      	ldr	r3, [pc, #68]	; (80016d8 <SCH_Dispatch_Tasks+0x54>)
 8001694:	681b      	ldr	r3, [r3, #0]
 8001696:	7b1b      	ldrb	r3, [r3, #12]
 8001698:	2b00      	cmp	r3, #0
 800169a:	d014      	beq.n	80016c6 <SCH_Dispatch_Tasks+0x42>
	{
		(*head -> data.pTask)();
 800169c:	4b0e      	ldr	r3, [pc, #56]	; (80016d8 <SCH_Dispatch_Tasks+0x54>)
 800169e:	681b      	ldr	r3, [r3, #0]
 80016a0:	681b      	ldr	r3, [r3, #0]
 80016a2:	4798      	blx	r3
		sTask NewTask = head -> data;
 80016a4:	4b0c      	ldr	r3, [pc, #48]	; (80016d8 <SCH_Dispatch_Tasks+0x54>)
 80016a6:	681b      	ldr	r3, [r3, #0]
 80016a8:	463c      	mov	r4, r7
 80016aa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80016ac:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		DeleteBegin();
 80016b0:	f7ff ff96 	bl	80015e0 <DeleteBegin>

		if(NewTask.Period != 0)
 80016b4:	68bb      	ldr	r3, [r7, #8]
 80016b6:	2b00      	cmp	r3, #0
 80016b8:	d005      	beq.n	80016c6 <SCH_Dispatch_Tasks+0x42>
			SCH_Add_Task(NewTask.pTask, NewTask.Period, NewTask.Period);
 80016ba:	683b      	ldr	r3, [r7, #0]
 80016bc:	68b9      	ldr	r1, [r7, #8]
 80016be:	68ba      	ldr	r2, [r7, #8]
 80016c0:	4618      	mov	r0, r3
 80016c2:	f7ff ffa5 	bl	8001610 <SCH_Add_Task>
	}

	// Enter low-power mode (Sleep mode). The MCU will wake up on the next interrupt
	HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLEEPENTRY_WFI);
 80016c6:	2101      	movs	r1, #1
 80016c8:	2000      	movs	r0, #0
 80016ca:	f000 fdef 	bl	80022ac <HAL_PWR_EnterSLEEPMode>
 80016ce:	e000      	b.n	80016d2 <SCH_Dispatch_Tasks+0x4e>
	if(head == NULL) return;
 80016d0:	bf00      	nop
}
 80016d2:	3714      	adds	r7, #20
 80016d4:	46bd      	mov	sp, r7
 80016d6:	bd90      	pop	{r4, r7, pc}
 80016d8:	20000128 	.word	0x20000128

080016dc <isTimerUp>:

int timer_counter[TIMER];
int timer_flag[TIMER];

int isTimerUp(int timer)
{
 80016dc:	b480      	push	{r7}
 80016de:	b083      	sub	sp, #12
 80016e0:	af00      	add	r7, sp, #0
 80016e2:	6078      	str	r0, [r7, #4]
	return (timer_flag[timer] == 1);
 80016e4:	4a06      	ldr	r2, [pc, #24]	; (8001700 <isTimerUp+0x24>)
 80016e6:	687b      	ldr	r3, [r7, #4]
 80016e8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80016ec:	2b01      	cmp	r3, #1
 80016ee:	bf0c      	ite	eq
 80016f0:	2301      	moveq	r3, #1
 80016f2:	2300      	movne	r3, #0
 80016f4:	b2db      	uxtb	r3, r3
}
 80016f6:	4618      	mov	r0, r3
 80016f8:	370c      	adds	r7, #12
 80016fa:	46bd      	mov	sp, r7
 80016fc:	bc80      	pop	{r7}
 80016fe:	4770      	bx	lr
 8001700:	20000234 	.word	0x20000234

08001704 <setTimer>:

void setTimer(int timer, int duration)
{
 8001704:	b480      	push	{r7}
 8001706:	b083      	sub	sp, #12
 8001708:	af00      	add	r7, sp, #0
 800170a:	6078      	str	r0, [r7, #4]
 800170c:	6039      	str	r1, [r7, #0]
	timer_counter[timer] = duration;
 800170e:	4907      	ldr	r1, [pc, #28]	; (800172c <setTimer+0x28>)
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	683a      	ldr	r2, [r7, #0]
 8001714:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	timer_flag[timer] = 0;
 8001718:	4a05      	ldr	r2, [pc, #20]	; (8001730 <setTimer+0x2c>)
 800171a:	687b      	ldr	r3, [r7, #4]
 800171c:	2100      	movs	r1, #0
 800171e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8001722:	bf00      	nop
 8001724:	370c      	adds	r7, #12
 8001726:	46bd      	mov	sp, r7
 8001728:	bc80      	pop	{r7}
 800172a:	4770      	bx	lr
 800172c:	20000214 	.word	0x20000214
 8001730:	20000234 	.word	0x20000234

08001734 <timerRun>:

void timerRun(void)
{
 8001734:	b480      	push	{r7}
 8001736:	b083      	sub	sp, #12
 8001738:	af00      	add	r7, sp, #0
	for (int timer = 0; timer < TIMER; timer++)
 800173a:	2300      	movs	r3, #0
 800173c:	607b      	str	r3, [r7, #4]
 800173e:	e01c      	b.n	800177a <timerRun+0x46>
	{
		if(timer_counter[timer] > 0)
 8001740:	4a12      	ldr	r2, [pc, #72]	; (800178c <timerRun+0x58>)
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001748:	2b00      	cmp	r3, #0
 800174a:	dd13      	ble.n	8001774 <timerRun+0x40>
		{
			timer_counter[timer]--;
 800174c:	4a0f      	ldr	r2, [pc, #60]	; (800178c <timerRun+0x58>)
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001754:	1e5a      	subs	r2, r3, #1
 8001756:	490d      	ldr	r1, [pc, #52]	; (800178c <timerRun+0x58>)
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if(timer_counter[timer] == 0)
 800175e:	4a0b      	ldr	r2, [pc, #44]	; (800178c <timerRun+0x58>)
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001766:	2b00      	cmp	r3, #0
 8001768:	d104      	bne.n	8001774 <timerRun+0x40>
				timer_flag[timer] = 1;
 800176a:	4a09      	ldr	r2, [pc, #36]	; (8001790 <timerRun+0x5c>)
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	2101      	movs	r1, #1
 8001770:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for (int timer = 0; timer < TIMER; timer++)
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	3301      	adds	r3, #1
 8001778:	607b      	str	r3, [r7, #4]
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	2b07      	cmp	r3, #7
 800177e:	dddf      	ble.n	8001740 <timerRun+0xc>
		}
	}
}
 8001780:	bf00      	nop
 8001782:	bf00      	nop
 8001784:	370c      	adds	r7, #12
 8001786:	46bd      	mov	sp, r7
 8001788:	bc80      	pop	{r7}
 800178a:	4770      	bx	lr
 800178c:	20000214 	.word	0x20000214
 8001790:	20000234 	.word	0x20000234

08001794 <HAL_MspInit>:
 8001794:	b480      	push	{r7}
 8001796:	b085      	sub	sp, #20
 8001798:	af00      	add	r7, sp, #0
 800179a:	4b15      	ldr	r3, [pc, #84]	; (80017f0 <HAL_MspInit+0x5c>)
 800179c:	699b      	ldr	r3, [r3, #24]
 800179e:	4a14      	ldr	r2, [pc, #80]	; (80017f0 <HAL_MspInit+0x5c>)
 80017a0:	f043 0301 	orr.w	r3, r3, #1
 80017a4:	6193      	str	r3, [r2, #24]
 80017a6:	4b12      	ldr	r3, [pc, #72]	; (80017f0 <HAL_MspInit+0x5c>)
 80017a8:	699b      	ldr	r3, [r3, #24]
 80017aa:	f003 0301 	and.w	r3, r3, #1
 80017ae:	60bb      	str	r3, [r7, #8]
 80017b0:	68bb      	ldr	r3, [r7, #8]
 80017b2:	4b0f      	ldr	r3, [pc, #60]	; (80017f0 <HAL_MspInit+0x5c>)
 80017b4:	69db      	ldr	r3, [r3, #28]
 80017b6:	4a0e      	ldr	r2, [pc, #56]	; (80017f0 <HAL_MspInit+0x5c>)
 80017b8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80017bc:	61d3      	str	r3, [r2, #28]
 80017be:	4b0c      	ldr	r3, [pc, #48]	; (80017f0 <HAL_MspInit+0x5c>)
 80017c0:	69db      	ldr	r3, [r3, #28]
 80017c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80017c6:	607b      	str	r3, [r7, #4]
 80017c8:	687b      	ldr	r3, [r7, #4]
 80017ca:	4b0a      	ldr	r3, [pc, #40]	; (80017f4 <HAL_MspInit+0x60>)
 80017cc:	685b      	ldr	r3, [r3, #4]
 80017ce:	60fb      	str	r3, [r7, #12]
 80017d0:	68fb      	ldr	r3, [r7, #12]
 80017d2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80017d6:	60fb      	str	r3, [r7, #12]
 80017d8:	68fb      	ldr	r3, [r7, #12]
 80017da:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80017de:	60fb      	str	r3, [r7, #12]
 80017e0:	4a04      	ldr	r2, [pc, #16]	; (80017f4 <HAL_MspInit+0x60>)
 80017e2:	68fb      	ldr	r3, [r7, #12]
 80017e4:	6053      	str	r3, [r2, #4]
 80017e6:	bf00      	nop
 80017e8:	3714      	adds	r7, #20
 80017ea:	46bd      	mov	sp, r7
 80017ec:	bc80      	pop	{r7}
 80017ee:	4770      	bx	lr
 80017f0:	40021000 	.word	0x40021000
 80017f4:	40010000 	.word	0x40010000

080017f8 <HAL_TIM_Base_MspInit>:
 80017f8:	b580      	push	{r7, lr}
 80017fa:	b084      	sub	sp, #16
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	6078      	str	r0, [r7, #4]
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001808:	d114      	bne.n	8001834 <HAL_TIM_Base_MspInit+0x3c>
 800180a:	4b19      	ldr	r3, [pc, #100]	; (8001870 <HAL_TIM_Base_MspInit+0x78>)
 800180c:	69db      	ldr	r3, [r3, #28]
 800180e:	4a18      	ldr	r2, [pc, #96]	; (8001870 <HAL_TIM_Base_MspInit+0x78>)
 8001810:	f043 0301 	orr.w	r3, r3, #1
 8001814:	61d3      	str	r3, [r2, #28]
 8001816:	4b16      	ldr	r3, [pc, #88]	; (8001870 <HAL_TIM_Base_MspInit+0x78>)
 8001818:	69db      	ldr	r3, [r3, #28]
 800181a:	f003 0301 	and.w	r3, r3, #1
 800181e:	60fb      	str	r3, [r7, #12]
 8001820:	68fb      	ldr	r3, [r7, #12]
 8001822:	2200      	movs	r2, #0
 8001824:	2100      	movs	r1, #0
 8001826:	201c      	movs	r0, #28
 8001828:	f000 fa8b 	bl	8001d42 <HAL_NVIC_SetPriority>
 800182c:	201c      	movs	r0, #28
 800182e:	f000 faa4 	bl	8001d7a <HAL_NVIC_EnableIRQ>
 8001832:	e018      	b.n	8001866 <HAL_TIM_Base_MspInit+0x6e>
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	4a0e      	ldr	r2, [pc, #56]	; (8001874 <HAL_TIM_Base_MspInit+0x7c>)
 800183a:	4293      	cmp	r3, r2
 800183c:	d113      	bne.n	8001866 <HAL_TIM_Base_MspInit+0x6e>
 800183e:	4b0c      	ldr	r3, [pc, #48]	; (8001870 <HAL_TIM_Base_MspInit+0x78>)
 8001840:	69db      	ldr	r3, [r3, #28]
 8001842:	4a0b      	ldr	r2, [pc, #44]	; (8001870 <HAL_TIM_Base_MspInit+0x78>)
 8001844:	f043 0302 	orr.w	r3, r3, #2
 8001848:	61d3      	str	r3, [r2, #28]
 800184a:	4b09      	ldr	r3, [pc, #36]	; (8001870 <HAL_TIM_Base_MspInit+0x78>)
 800184c:	69db      	ldr	r3, [r3, #28]
 800184e:	f003 0302 	and.w	r3, r3, #2
 8001852:	60bb      	str	r3, [r7, #8]
 8001854:	68bb      	ldr	r3, [r7, #8]
 8001856:	2200      	movs	r2, #0
 8001858:	2100      	movs	r1, #0
 800185a:	201d      	movs	r0, #29
 800185c:	f000 fa71 	bl	8001d42 <HAL_NVIC_SetPriority>
 8001860:	201d      	movs	r0, #29
 8001862:	f000 fa8a 	bl	8001d7a <HAL_NVIC_EnableIRQ>
 8001866:	bf00      	nop
 8001868:	3710      	adds	r7, #16
 800186a:	46bd      	mov	sp, r7
 800186c:	bd80      	pop	{r7, pc}
 800186e:	bf00      	nop
 8001870:	40021000 	.word	0x40021000
 8001874:	40000400 	.word	0x40000400

08001878 <HAL_TIM_MspPostInit>:
 8001878:	b580      	push	{r7, lr}
 800187a:	b088      	sub	sp, #32
 800187c:	af00      	add	r7, sp, #0
 800187e:	6078      	str	r0, [r7, #4]
 8001880:	f107 0310 	add.w	r3, r7, #16
 8001884:	2200      	movs	r2, #0
 8001886:	601a      	str	r2, [r3, #0]
 8001888:	605a      	str	r2, [r3, #4]
 800188a:	609a      	str	r2, [r3, #8]
 800188c:	60da      	str	r2, [r3, #12]
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	4a0f      	ldr	r2, [pc, #60]	; (80018d0 <HAL_TIM_MspPostInit+0x58>)
 8001894:	4293      	cmp	r3, r2
 8001896:	d117      	bne.n	80018c8 <HAL_TIM_MspPostInit+0x50>
 8001898:	4b0e      	ldr	r3, [pc, #56]	; (80018d4 <HAL_TIM_MspPostInit+0x5c>)
 800189a:	699b      	ldr	r3, [r3, #24]
 800189c:	4a0d      	ldr	r2, [pc, #52]	; (80018d4 <HAL_TIM_MspPostInit+0x5c>)
 800189e:	f043 0304 	orr.w	r3, r3, #4
 80018a2:	6193      	str	r3, [r2, #24]
 80018a4:	4b0b      	ldr	r3, [pc, #44]	; (80018d4 <HAL_TIM_MspPostInit+0x5c>)
 80018a6:	699b      	ldr	r3, [r3, #24]
 80018a8:	f003 0304 	and.w	r3, r3, #4
 80018ac:	60fb      	str	r3, [r7, #12]
 80018ae:	68fb      	ldr	r3, [r7, #12]
 80018b0:	2340      	movs	r3, #64	; 0x40
 80018b2:	613b      	str	r3, [r7, #16]
 80018b4:	2302      	movs	r3, #2
 80018b6:	617b      	str	r3, [r7, #20]
 80018b8:	2302      	movs	r3, #2
 80018ba:	61fb      	str	r3, [r7, #28]
 80018bc:	f107 0310 	add.w	r3, r7, #16
 80018c0:	4619      	mov	r1, r3
 80018c2:	4805      	ldr	r0, [pc, #20]	; (80018d8 <HAL_TIM_MspPostInit+0x60>)
 80018c4:	f000 fb26 	bl	8001f14 <HAL_GPIO_Init>
 80018c8:	bf00      	nop
 80018ca:	3720      	adds	r7, #32
 80018cc:	46bd      	mov	sp, r7
 80018ce:	bd80      	pop	{r7, pc}
 80018d0:	40000400 	.word	0x40000400
 80018d4:	40021000 	.word	0x40021000
 80018d8:	40010800 	.word	0x40010800

080018dc <HAL_UART_MspInit>:
 80018dc:	b580      	push	{r7, lr}
 80018de:	b088      	sub	sp, #32
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	6078      	str	r0, [r7, #4]
 80018e4:	f107 0310 	add.w	r3, r7, #16
 80018e8:	2200      	movs	r2, #0
 80018ea:	601a      	str	r2, [r3, #0]
 80018ec:	605a      	str	r2, [r3, #4]
 80018ee:	609a      	str	r2, [r3, #8]
 80018f0:	60da      	str	r2, [r3, #12]
 80018f2:	687b      	ldr	r3, [r7, #4]
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	4a1f      	ldr	r2, [pc, #124]	; (8001974 <HAL_UART_MspInit+0x98>)
 80018f8:	4293      	cmp	r3, r2
 80018fa:	d137      	bne.n	800196c <HAL_UART_MspInit+0x90>
 80018fc:	4b1e      	ldr	r3, [pc, #120]	; (8001978 <HAL_UART_MspInit+0x9c>)
 80018fe:	69db      	ldr	r3, [r3, #28]
 8001900:	4a1d      	ldr	r2, [pc, #116]	; (8001978 <HAL_UART_MspInit+0x9c>)
 8001902:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001906:	61d3      	str	r3, [r2, #28]
 8001908:	4b1b      	ldr	r3, [pc, #108]	; (8001978 <HAL_UART_MspInit+0x9c>)
 800190a:	69db      	ldr	r3, [r3, #28]
 800190c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001910:	60fb      	str	r3, [r7, #12]
 8001912:	68fb      	ldr	r3, [r7, #12]
 8001914:	4b18      	ldr	r3, [pc, #96]	; (8001978 <HAL_UART_MspInit+0x9c>)
 8001916:	699b      	ldr	r3, [r3, #24]
 8001918:	4a17      	ldr	r2, [pc, #92]	; (8001978 <HAL_UART_MspInit+0x9c>)
 800191a:	f043 0304 	orr.w	r3, r3, #4
 800191e:	6193      	str	r3, [r2, #24]
 8001920:	4b15      	ldr	r3, [pc, #84]	; (8001978 <HAL_UART_MspInit+0x9c>)
 8001922:	699b      	ldr	r3, [r3, #24]
 8001924:	f003 0304 	and.w	r3, r3, #4
 8001928:	60bb      	str	r3, [r7, #8]
 800192a:	68bb      	ldr	r3, [r7, #8]
 800192c:	2304      	movs	r3, #4
 800192e:	613b      	str	r3, [r7, #16]
 8001930:	2302      	movs	r3, #2
 8001932:	617b      	str	r3, [r7, #20]
 8001934:	2303      	movs	r3, #3
 8001936:	61fb      	str	r3, [r7, #28]
 8001938:	f107 0310 	add.w	r3, r7, #16
 800193c:	4619      	mov	r1, r3
 800193e:	480f      	ldr	r0, [pc, #60]	; (800197c <HAL_UART_MspInit+0xa0>)
 8001940:	f000 fae8 	bl	8001f14 <HAL_GPIO_Init>
 8001944:	2308      	movs	r3, #8
 8001946:	613b      	str	r3, [r7, #16]
 8001948:	2300      	movs	r3, #0
 800194a:	617b      	str	r3, [r7, #20]
 800194c:	2300      	movs	r3, #0
 800194e:	61bb      	str	r3, [r7, #24]
 8001950:	f107 0310 	add.w	r3, r7, #16
 8001954:	4619      	mov	r1, r3
 8001956:	4809      	ldr	r0, [pc, #36]	; (800197c <HAL_UART_MspInit+0xa0>)
 8001958:	f000 fadc 	bl	8001f14 <HAL_GPIO_Init>
 800195c:	2200      	movs	r2, #0
 800195e:	2100      	movs	r1, #0
 8001960:	2026      	movs	r0, #38	; 0x26
 8001962:	f000 f9ee 	bl	8001d42 <HAL_NVIC_SetPriority>
 8001966:	2026      	movs	r0, #38	; 0x26
 8001968:	f000 fa07 	bl	8001d7a <HAL_NVIC_EnableIRQ>
 800196c:	bf00      	nop
 800196e:	3720      	adds	r7, #32
 8001970:	46bd      	mov	sp, r7
 8001972:	bd80      	pop	{r7, pc}
 8001974:	40004400 	.word	0x40004400
 8001978:	40021000 	.word	0x40021000
 800197c:	40010800 	.word	0x40010800

08001980 <NMI_Handler>:
 8001980:	b480      	push	{r7}
 8001982:	af00      	add	r7, sp, #0
 8001984:	e7fe      	b.n	8001984 <NMI_Handler+0x4>

08001986 <HardFault_Handler>:
 8001986:	b480      	push	{r7}
 8001988:	af00      	add	r7, sp, #0
 800198a:	e7fe      	b.n	800198a <HardFault_Handler+0x4>

0800198c <MemManage_Handler>:
 800198c:	b480      	push	{r7}
 800198e:	af00      	add	r7, sp, #0
 8001990:	e7fe      	b.n	8001990 <MemManage_Handler+0x4>

08001992 <BusFault_Handler>:
 8001992:	b480      	push	{r7}
 8001994:	af00      	add	r7, sp, #0
 8001996:	e7fe      	b.n	8001996 <BusFault_Handler+0x4>

08001998 <UsageFault_Handler>:
 8001998:	b480      	push	{r7}
 800199a:	af00      	add	r7, sp, #0
 800199c:	e7fe      	b.n	800199c <UsageFault_Handler+0x4>

0800199e <SVC_Handler>:
 800199e:	b480      	push	{r7}
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	bf00      	nop
 80019a4:	46bd      	mov	sp, r7
 80019a6:	bc80      	pop	{r7}
 80019a8:	4770      	bx	lr

080019aa <DebugMon_Handler>:
 80019aa:	b480      	push	{r7}
 80019ac:	af00      	add	r7, sp, #0
 80019ae:	bf00      	nop
 80019b0:	46bd      	mov	sp, r7
 80019b2:	bc80      	pop	{r7}
 80019b4:	4770      	bx	lr

080019b6 <PendSV_Handler>:
 80019b6:	b480      	push	{r7}
 80019b8:	af00      	add	r7, sp, #0
 80019ba:	bf00      	nop
 80019bc:	46bd      	mov	sp, r7
 80019be:	bc80      	pop	{r7}
 80019c0:	4770      	bx	lr

080019c2 <SysTick_Handler>:
 80019c2:	b580      	push	{r7, lr}
 80019c4:	af00      	add	r7, sp, #0
 80019c6:	f000 f8c9 	bl	8001b5c <HAL_IncTick>
 80019ca:	bf00      	nop
 80019cc:	bd80      	pop	{r7, pc}
	...

080019d0 <TIM2_IRQHandler>:
 80019d0:	b580      	push	{r7, lr}
 80019d2:	af00      	add	r7, sp, #0
 80019d4:	4802      	ldr	r0, [pc, #8]	; (80019e0 <TIM2_IRQHandler+0x10>)
 80019d6:	f001 fa2f 	bl	8002e38 <HAL_TIM_IRQHandler>
 80019da:	bf00      	nop
 80019dc:	bd80      	pop	{r7, pc}
 80019de:	bf00      	nop
 80019e0:	20000184 	.word	0x20000184

080019e4 <TIM3_IRQHandler>:
 80019e4:	b580      	push	{r7, lr}
 80019e6:	af00      	add	r7, sp, #0
 80019e8:	4802      	ldr	r0, [pc, #8]	; (80019f4 <TIM3_IRQHandler+0x10>)
 80019ea:	f001 fa25 	bl	8002e38 <HAL_TIM_IRQHandler>
 80019ee:	bf00      	nop
 80019f0:	bd80      	pop	{r7, pc}
 80019f2:	bf00      	nop
 80019f4:	2000013c 	.word	0x2000013c

080019f8 <USART2_IRQHandler>:
 80019f8:	b580      	push	{r7, lr}
 80019fa:	af00      	add	r7, sp, #0
 80019fc:	4802      	ldr	r0, [pc, #8]	; (8001a08 <USART2_IRQHandler+0x10>)
 80019fe:	f002 f8b9 	bl	8003b74 <HAL_UART_IRQHandler>
 8001a02:	bf00      	nop
 8001a04:	bd80      	pop	{r7, pc}
 8001a06:	bf00      	nop
 8001a08:	200001cc 	.word	0x200001cc

08001a0c <_sbrk>:
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	b086      	sub	sp, #24
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
 8001a14:	4a14      	ldr	r2, [pc, #80]	; (8001a68 <_sbrk+0x5c>)
 8001a16:	4b15      	ldr	r3, [pc, #84]	; (8001a6c <_sbrk+0x60>)
 8001a18:	1ad3      	subs	r3, r2, r3
 8001a1a:	617b      	str	r3, [r7, #20]
 8001a1c:	697b      	ldr	r3, [r7, #20]
 8001a1e:	613b      	str	r3, [r7, #16]
 8001a20:	4b13      	ldr	r3, [pc, #76]	; (8001a70 <_sbrk+0x64>)
 8001a22:	681b      	ldr	r3, [r3, #0]
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d102      	bne.n	8001a2e <_sbrk+0x22>
 8001a28:	4b11      	ldr	r3, [pc, #68]	; (8001a70 <_sbrk+0x64>)
 8001a2a:	4a12      	ldr	r2, [pc, #72]	; (8001a74 <_sbrk+0x68>)
 8001a2c:	601a      	str	r2, [r3, #0]
 8001a2e:	4b10      	ldr	r3, [pc, #64]	; (8001a70 <_sbrk+0x64>)
 8001a30:	681a      	ldr	r2, [r3, #0]
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	4413      	add	r3, r2
 8001a36:	693a      	ldr	r2, [r7, #16]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d207      	bcs.n	8001a4c <_sbrk+0x40>
 8001a3c:	f002 fdea 	bl	8004614 <__errno>
 8001a40:	4603      	mov	r3, r0
 8001a42:	220c      	movs	r2, #12
 8001a44:	601a      	str	r2, [r3, #0]
 8001a46:	f04f 33ff 	mov.w	r3, #4294967295
 8001a4a:	e009      	b.n	8001a60 <_sbrk+0x54>
 8001a4c:	4b08      	ldr	r3, [pc, #32]	; (8001a70 <_sbrk+0x64>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	60fb      	str	r3, [r7, #12]
 8001a52:	4b07      	ldr	r3, [pc, #28]	; (8001a70 <_sbrk+0x64>)
 8001a54:	681a      	ldr	r2, [r3, #0]
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	4413      	add	r3, r2
 8001a5a:	4a05      	ldr	r2, [pc, #20]	; (8001a70 <_sbrk+0x64>)
 8001a5c:	6013      	str	r3, [r2, #0]
 8001a5e:	68fb      	ldr	r3, [r7, #12]
 8001a60:	4618      	mov	r0, r3
 8001a62:	3718      	adds	r7, #24
 8001a64:	46bd      	mov	sp, r7
 8001a66:	bd80      	pop	{r7, pc}
 8001a68:	20005000 	.word	0x20005000
 8001a6c:	00000400 	.word	0x00000400
 8001a70:	2000012c 	.word	0x2000012c
 8001a74:	20000268 	.word	0x20000268

08001a78 <SystemInit>:
 8001a78:	b480      	push	{r7}
 8001a7a:	af00      	add	r7, sp, #0
 8001a7c:	bf00      	nop
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	bc80      	pop	{r7}
 8001a82:	4770      	bx	lr

08001a84 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8001a84:	f7ff fff8 	bl	8001a78 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001a88:	480b      	ldr	r0, [pc, #44]	; (8001ab8 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8001a8a:	490c      	ldr	r1, [pc, #48]	; (8001abc <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8001a8c:	4a0c      	ldr	r2, [pc, #48]	; (8001ac0 <LoopFillZerobss+0x16>)
  movs r3, #0
 8001a8e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001a90:	e002      	b.n	8001a98 <LoopCopyDataInit>

08001a92 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001a92:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001a94:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001a96:	3304      	adds	r3, #4

08001a98 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001a98:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001a9a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001a9c:	d3f9      	bcc.n	8001a92 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001a9e:	4a09      	ldr	r2, [pc, #36]	; (8001ac4 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8001aa0:	4c09      	ldr	r4, [pc, #36]	; (8001ac8 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8001aa2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001aa4:	e001      	b.n	8001aaa <LoopFillZerobss>

08001aa6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001aa6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001aa8:	3204      	adds	r2, #4

08001aaa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001aaa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001aac:	d3fb      	bcc.n	8001aa6 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001aae:	f002 fdb7 	bl	8004620 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001ab2:	f7ff fb55 	bl	8001160 <main>
  bx lr
 8001ab6:	4770      	bx	lr
  ldr r0, =_sdata
 8001ab8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001abc:	200000d0 	.word	0x200000d0
  ldr r2, =_sidata
 8001ac0:	08004fb0 	.word	0x08004fb0
  ldr r2, =_sbss
 8001ac4:	200000d0 	.word	0x200000d0
  ldr r4, =_ebss
 8001ac8:	20000268 	.word	0x20000268

08001acc <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001acc:	e7fe      	b.n	8001acc <ADC1_2_IRQHandler>
	...

08001ad0 <HAL_Init>:
 8001ad0:	b580      	push	{r7, lr}
 8001ad2:	af00      	add	r7, sp, #0
 8001ad4:	4b08      	ldr	r3, [pc, #32]	; (8001af8 <HAL_Init+0x28>)
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	4a07      	ldr	r2, [pc, #28]	; (8001af8 <HAL_Init+0x28>)
 8001ada:	f043 0310 	orr.w	r3, r3, #16
 8001ade:	6013      	str	r3, [r2, #0]
 8001ae0:	2003      	movs	r0, #3
 8001ae2:	f000 f923 	bl	8001d2c <HAL_NVIC_SetPriorityGrouping>
 8001ae6:	200f      	movs	r0, #15
 8001ae8:	f000 f808 	bl	8001afc <HAL_InitTick>
 8001aec:	f7ff fe52 	bl	8001794 <HAL_MspInit>
 8001af0:	2300      	movs	r3, #0
 8001af2:	4618      	mov	r0, r3
 8001af4:	bd80      	pop	{r7, pc}
 8001af6:	bf00      	nop
 8001af8:	40022000 	.word	0x40022000

08001afc <HAL_InitTick>:
 8001afc:	b580      	push	{r7, lr}
 8001afe:	b082      	sub	sp, #8
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	6078      	str	r0, [r7, #4]
 8001b04:	4b12      	ldr	r3, [pc, #72]	; (8001b50 <HAL_InitTick+0x54>)
 8001b06:	681a      	ldr	r2, [r3, #0]
 8001b08:	4b12      	ldr	r3, [pc, #72]	; (8001b54 <HAL_InitTick+0x58>)
 8001b0a:	781b      	ldrb	r3, [r3, #0]
 8001b0c:	4619      	mov	r1, r3
 8001b0e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001b12:	fbb3 f3f1 	udiv	r3, r3, r1
 8001b16:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b1a:	4618      	mov	r0, r3
 8001b1c:	f000 f93b 	bl	8001d96 <HAL_SYSTICK_Config>
 8001b20:	4603      	mov	r3, r0
 8001b22:	2b00      	cmp	r3, #0
 8001b24:	d001      	beq.n	8001b2a <HAL_InitTick+0x2e>
 8001b26:	2301      	movs	r3, #1
 8001b28:	e00e      	b.n	8001b48 <HAL_InitTick+0x4c>
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	2b0f      	cmp	r3, #15
 8001b2e:	d80a      	bhi.n	8001b46 <HAL_InitTick+0x4a>
 8001b30:	2200      	movs	r2, #0
 8001b32:	6879      	ldr	r1, [r7, #4]
 8001b34:	f04f 30ff 	mov.w	r0, #4294967295
 8001b38:	f000 f903 	bl	8001d42 <HAL_NVIC_SetPriority>
 8001b3c:	4a06      	ldr	r2, [pc, #24]	; (8001b58 <HAL_InitTick+0x5c>)
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	6013      	str	r3, [r2, #0]
 8001b42:	2300      	movs	r3, #0
 8001b44:	e000      	b.n	8001b48 <HAL_InitTick+0x4c>
 8001b46:	2301      	movs	r3, #1
 8001b48:	4618      	mov	r0, r3
 8001b4a:	3708      	adds	r7, #8
 8001b4c:	46bd      	mov	sp, r7
 8001b4e:	bd80      	pop	{r7, pc}
 8001b50:	20000060 	.word	0x20000060
 8001b54:	20000068 	.word	0x20000068
 8001b58:	20000064 	.word	0x20000064

08001b5c <HAL_IncTick>:
 8001b5c:	b480      	push	{r7}
 8001b5e:	af00      	add	r7, sp, #0
 8001b60:	4b05      	ldr	r3, [pc, #20]	; (8001b78 <HAL_IncTick+0x1c>)
 8001b62:	781b      	ldrb	r3, [r3, #0]
 8001b64:	461a      	mov	r2, r3
 8001b66:	4b05      	ldr	r3, [pc, #20]	; (8001b7c <HAL_IncTick+0x20>)
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	4413      	add	r3, r2
 8001b6c:	4a03      	ldr	r2, [pc, #12]	; (8001b7c <HAL_IncTick+0x20>)
 8001b6e:	6013      	str	r3, [r2, #0]
 8001b70:	bf00      	nop
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bc80      	pop	{r7}
 8001b76:	4770      	bx	lr
 8001b78:	20000068 	.word	0x20000068
 8001b7c:	20000254 	.word	0x20000254

08001b80 <HAL_GetTick>:
 8001b80:	b480      	push	{r7}
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	4b02      	ldr	r3, [pc, #8]	; (8001b90 <HAL_GetTick+0x10>)
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	4618      	mov	r0, r3
 8001b8a:	46bd      	mov	sp, r7
 8001b8c:	bc80      	pop	{r7}
 8001b8e:	4770      	bx	lr
 8001b90:	20000254 	.word	0x20000254

08001b94 <__NVIC_SetPriorityGrouping>:
 8001b94:	b480      	push	{r7}
 8001b96:	b085      	sub	sp, #20
 8001b98:	af00      	add	r7, sp, #0
 8001b9a:	6078      	str	r0, [r7, #4]
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	f003 0307 	and.w	r3, r3, #7
 8001ba2:	60fb      	str	r3, [r7, #12]
 8001ba4:	4b0c      	ldr	r3, [pc, #48]	; (8001bd8 <__NVIC_SetPriorityGrouping+0x44>)
 8001ba6:	68db      	ldr	r3, [r3, #12]
 8001ba8:	60bb      	str	r3, [r7, #8]
 8001baa:	68ba      	ldr	r2, [r7, #8]
 8001bac:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001bb0:	4013      	ands	r3, r2
 8001bb2:	60bb      	str	r3, [r7, #8]
 8001bb4:	68fb      	ldr	r3, [r7, #12]
 8001bb6:	021a      	lsls	r2, r3, #8
 8001bb8:	68bb      	ldr	r3, [r7, #8]
 8001bba:	4313      	orrs	r3, r2
 8001bbc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001bc0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001bc4:	60bb      	str	r3, [r7, #8]
 8001bc6:	4a04      	ldr	r2, [pc, #16]	; (8001bd8 <__NVIC_SetPriorityGrouping+0x44>)
 8001bc8:	68bb      	ldr	r3, [r7, #8]
 8001bca:	60d3      	str	r3, [r2, #12]
 8001bcc:	bf00      	nop
 8001bce:	3714      	adds	r7, #20
 8001bd0:	46bd      	mov	sp, r7
 8001bd2:	bc80      	pop	{r7}
 8001bd4:	4770      	bx	lr
 8001bd6:	bf00      	nop
 8001bd8:	e000ed00 	.word	0xe000ed00

08001bdc <__NVIC_GetPriorityGrouping>:
 8001bdc:	b480      	push	{r7}
 8001bde:	af00      	add	r7, sp, #0
 8001be0:	4b04      	ldr	r3, [pc, #16]	; (8001bf4 <__NVIC_GetPriorityGrouping+0x18>)
 8001be2:	68db      	ldr	r3, [r3, #12]
 8001be4:	0a1b      	lsrs	r3, r3, #8
 8001be6:	f003 0307 	and.w	r3, r3, #7
 8001bea:	4618      	mov	r0, r3
 8001bec:	46bd      	mov	sp, r7
 8001bee:	bc80      	pop	{r7}
 8001bf0:	4770      	bx	lr
 8001bf2:	bf00      	nop
 8001bf4:	e000ed00 	.word	0xe000ed00

08001bf8 <__NVIC_EnableIRQ>:
 8001bf8:	b480      	push	{r7}
 8001bfa:	b083      	sub	sp, #12
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	4603      	mov	r3, r0
 8001c00:	71fb      	strb	r3, [r7, #7]
 8001c02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c06:	2b00      	cmp	r3, #0
 8001c08:	db0b      	blt.n	8001c22 <__NVIC_EnableIRQ+0x2a>
 8001c0a:	79fb      	ldrb	r3, [r7, #7]
 8001c0c:	f003 021f 	and.w	r2, r3, #31
 8001c10:	4906      	ldr	r1, [pc, #24]	; (8001c2c <__NVIC_EnableIRQ+0x34>)
 8001c12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c16:	095b      	lsrs	r3, r3, #5
 8001c18:	2001      	movs	r0, #1
 8001c1a:	fa00 f202 	lsl.w	r2, r0, r2
 8001c1e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001c22:	bf00      	nop
 8001c24:	370c      	adds	r7, #12
 8001c26:	46bd      	mov	sp, r7
 8001c28:	bc80      	pop	{r7}
 8001c2a:	4770      	bx	lr
 8001c2c:	e000e100 	.word	0xe000e100

08001c30 <__NVIC_SetPriority>:
 8001c30:	b480      	push	{r7}
 8001c32:	b083      	sub	sp, #12
 8001c34:	af00      	add	r7, sp, #0
 8001c36:	4603      	mov	r3, r0
 8001c38:	6039      	str	r1, [r7, #0]
 8001c3a:	71fb      	strb	r3, [r7, #7]
 8001c3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c40:	2b00      	cmp	r3, #0
 8001c42:	db0a      	blt.n	8001c5a <__NVIC_SetPriority+0x2a>
 8001c44:	683b      	ldr	r3, [r7, #0]
 8001c46:	b2da      	uxtb	r2, r3
 8001c48:	490c      	ldr	r1, [pc, #48]	; (8001c7c <__NVIC_SetPriority+0x4c>)
 8001c4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c4e:	0112      	lsls	r2, r2, #4
 8001c50:	b2d2      	uxtb	r2, r2
 8001c52:	440b      	add	r3, r1
 8001c54:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001c58:	e00a      	b.n	8001c70 <__NVIC_SetPriority+0x40>
 8001c5a:	683b      	ldr	r3, [r7, #0]
 8001c5c:	b2da      	uxtb	r2, r3
 8001c5e:	4908      	ldr	r1, [pc, #32]	; (8001c80 <__NVIC_SetPriority+0x50>)
 8001c60:	79fb      	ldrb	r3, [r7, #7]
 8001c62:	f003 030f 	and.w	r3, r3, #15
 8001c66:	3b04      	subs	r3, #4
 8001c68:	0112      	lsls	r2, r2, #4
 8001c6a:	b2d2      	uxtb	r2, r2
 8001c6c:	440b      	add	r3, r1
 8001c6e:	761a      	strb	r2, [r3, #24]
 8001c70:	bf00      	nop
 8001c72:	370c      	adds	r7, #12
 8001c74:	46bd      	mov	sp, r7
 8001c76:	bc80      	pop	{r7}
 8001c78:	4770      	bx	lr
 8001c7a:	bf00      	nop
 8001c7c:	e000e100 	.word	0xe000e100
 8001c80:	e000ed00 	.word	0xe000ed00

08001c84 <NVIC_EncodePriority>:
 8001c84:	b480      	push	{r7}
 8001c86:	b089      	sub	sp, #36	; 0x24
 8001c88:	af00      	add	r7, sp, #0
 8001c8a:	60f8      	str	r0, [r7, #12]
 8001c8c:	60b9      	str	r1, [r7, #8]
 8001c8e:	607a      	str	r2, [r7, #4]
 8001c90:	68fb      	ldr	r3, [r7, #12]
 8001c92:	f003 0307 	and.w	r3, r3, #7
 8001c96:	61fb      	str	r3, [r7, #28]
 8001c98:	69fb      	ldr	r3, [r7, #28]
 8001c9a:	f1c3 0307 	rsb	r3, r3, #7
 8001c9e:	2b04      	cmp	r3, #4
 8001ca0:	bf28      	it	cs
 8001ca2:	2304      	movcs	r3, #4
 8001ca4:	61bb      	str	r3, [r7, #24]
 8001ca6:	69fb      	ldr	r3, [r7, #28]
 8001ca8:	3304      	adds	r3, #4
 8001caa:	2b06      	cmp	r3, #6
 8001cac:	d902      	bls.n	8001cb4 <NVIC_EncodePriority+0x30>
 8001cae:	69fb      	ldr	r3, [r7, #28]
 8001cb0:	3b03      	subs	r3, #3
 8001cb2:	e000      	b.n	8001cb6 <NVIC_EncodePriority+0x32>
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	617b      	str	r3, [r7, #20]
 8001cb8:	f04f 32ff 	mov.w	r2, #4294967295
 8001cbc:	69bb      	ldr	r3, [r7, #24]
 8001cbe:	fa02 f303 	lsl.w	r3, r2, r3
 8001cc2:	43da      	mvns	r2, r3
 8001cc4:	68bb      	ldr	r3, [r7, #8]
 8001cc6:	401a      	ands	r2, r3
 8001cc8:	697b      	ldr	r3, [r7, #20]
 8001cca:	409a      	lsls	r2, r3
 8001ccc:	f04f 31ff 	mov.w	r1, #4294967295
 8001cd0:	697b      	ldr	r3, [r7, #20]
 8001cd2:	fa01 f303 	lsl.w	r3, r1, r3
 8001cd6:	43d9      	mvns	r1, r3
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	400b      	ands	r3, r1
 8001cdc:	4313      	orrs	r3, r2
 8001cde:	4618      	mov	r0, r3
 8001ce0:	3724      	adds	r7, #36	; 0x24
 8001ce2:	46bd      	mov	sp, r7
 8001ce4:	bc80      	pop	{r7}
 8001ce6:	4770      	bx	lr

08001ce8 <SysTick_Config>:
 8001ce8:	b580      	push	{r7, lr}
 8001cea:	b082      	sub	sp, #8
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	6078      	str	r0, [r7, #4]
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	3b01      	subs	r3, #1
 8001cf4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001cf8:	d301      	bcc.n	8001cfe <SysTick_Config+0x16>
 8001cfa:	2301      	movs	r3, #1
 8001cfc:	e00f      	b.n	8001d1e <SysTick_Config+0x36>
 8001cfe:	4a0a      	ldr	r2, [pc, #40]	; (8001d28 <SysTick_Config+0x40>)
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	3b01      	subs	r3, #1
 8001d04:	6053      	str	r3, [r2, #4]
 8001d06:	210f      	movs	r1, #15
 8001d08:	f04f 30ff 	mov.w	r0, #4294967295
 8001d0c:	f7ff ff90 	bl	8001c30 <__NVIC_SetPriority>
 8001d10:	4b05      	ldr	r3, [pc, #20]	; (8001d28 <SysTick_Config+0x40>)
 8001d12:	2200      	movs	r2, #0
 8001d14:	609a      	str	r2, [r3, #8]
 8001d16:	4b04      	ldr	r3, [pc, #16]	; (8001d28 <SysTick_Config+0x40>)
 8001d18:	2207      	movs	r2, #7
 8001d1a:	601a      	str	r2, [r3, #0]
 8001d1c:	2300      	movs	r3, #0
 8001d1e:	4618      	mov	r0, r3
 8001d20:	3708      	adds	r7, #8
 8001d22:	46bd      	mov	sp, r7
 8001d24:	bd80      	pop	{r7, pc}
 8001d26:	bf00      	nop
 8001d28:	e000e010 	.word	0xe000e010

08001d2c <HAL_NVIC_SetPriorityGrouping>:
 8001d2c:	b580      	push	{r7, lr}
 8001d2e:	b082      	sub	sp, #8
 8001d30:	af00      	add	r7, sp, #0
 8001d32:	6078      	str	r0, [r7, #4]
 8001d34:	6878      	ldr	r0, [r7, #4]
 8001d36:	f7ff ff2d 	bl	8001b94 <__NVIC_SetPriorityGrouping>
 8001d3a:	bf00      	nop
 8001d3c:	3708      	adds	r7, #8
 8001d3e:	46bd      	mov	sp, r7
 8001d40:	bd80      	pop	{r7, pc}

08001d42 <HAL_NVIC_SetPriority>:
 8001d42:	b580      	push	{r7, lr}
 8001d44:	b086      	sub	sp, #24
 8001d46:	af00      	add	r7, sp, #0
 8001d48:	4603      	mov	r3, r0
 8001d4a:	60b9      	str	r1, [r7, #8]
 8001d4c:	607a      	str	r2, [r7, #4]
 8001d4e:	73fb      	strb	r3, [r7, #15]
 8001d50:	2300      	movs	r3, #0
 8001d52:	617b      	str	r3, [r7, #20]
 8001d54:	f7ff ff42 	bl	8001bdc <__NVIC_GetPriorityGrouping>
 8001d58:	6178      	str	r0, [r7, #20]
 8001d5a:	687a      	ldr	r2, [r7, #4]
 8001d5c:	68b9      	ldr	r1, [r7, #8]
 8001d5e:	6978      	ldr	r0, [r7, #20]
 8001d60:	f7ff ff90 	bl	8001c84 <NVIC_EncodePriority>
 8001d64:	4602      	mov	r2, r0
 8001d66:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001d6a:	4611      	mov	r1, r2
 8001d6c:	4618      	mov	r0, r3
 8001d6e:	f7ff ff5f 	bl	8001c30 <__NVIC_SetPriority>
 8001d72:	bf00      	nop
 8001d74:	3718      	adds	r7, #24
 8001d76:	46bd      	mov	sp, r7
 8001d78:	bd80      	pop	{r7, pc}

08001d7a <HAL_NVIC_EnableIRQ>:
 8001d7a:	b580      	push	{r7, lr}
 8001d7c:	b082      	sub	sp, #8
 8001d7e:	af00      	add	r7, sp, #0
 8001d80:	4603      	mov	r3, r0
 8001d82:	71fb      	strb	r3, [r7, #7]
 8001d84:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d88:	4618      	mov	r0, r3
 8001d8a:	f7ff ff35 	bl	8001bf8 <__NVIC_EnableIRQ>
 8001d8e:	bf00      	nop
 8001d90:	3708      	adds	r7, #8
 8001d92:	46bd      	mov	sp, r7
 8001d94:	bd80      	pop	{r7, pc}

08001d96 <HAL_SYSTICK_Config>:
 8001d96:	b580      	push	{r7, lr}
 8001d98:	b082      	sub	sp, #8
 8001d9a:	af00      	add	r7, sp, #0
 8001d9c:	6078      	str	r0, [r7, #4]
 8001d9e:	6878      	ldr	r0, [r7, #4]
 8001da0:	f7ff ffa2 	bl	8001ce8 <SysTick_Config>
 8001da4:	4603      	mov	r3, r0
 8001da6:	4618      	mov	r0, r3
 8001da8:	3708      	adds	r7, #8
 8001daa:	46bd      	mov	sp, r7
 8001dac:	bd80      	pop	{r7, pc}

08001dae <HAL_DMA_Abort>:
 8001dae:	b480      	push	{r7}
 8001db0:	b085      	sub	sp, #20
 8001db2:	af00      	add	r7, sp, #0
 8001db4:	6078      	str	r0, [r7, #4]
 8001db6:	2300      	movs	r3, #0
 8001db8:	73fb      	strb	r3, [r7, #15]
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001dc0:	b2db      	uxtb	r3, r3
 8001dc2:	2b02      	cmp	r3, #2
 8001dc4:	d008      	beq.n	8001dd8 <HAL_DMA_Abort+0x2a>
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	2204      	movs	r2, #4
 8001dca:	639a      	str	r2, [r3, #56]	; 0x38
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	2200      	movs	r2, #0
 8001dd0:	f883 2020 	strb.w	r2, [r3, #32]
 8001dd4:	2301      	movs	r3, #1
 8001dd6:	e020      	b.n	8001e1a <HAL_DMA_Abort+0x6c>
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	681a      	ldr	r2, [r3, #0]
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	f022 020e 	bic.w	r2, r2, #14
 8001de6:	601a      	str	r2, [r3, #0]
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	681a      	ldr	r2, [r3, #0]
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	681b      	ldr	r3, [r3, #0]
 8001df2:	f022 0201 	bic.w	r2, r2, #1
 8001df6:	601a      	str	r2, [r3, #0]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001e00:	2101      	movs	r1, #1
 8001e02:	fa01 f202 	lsl.w	r2, r1, r2
 8001e06:	605a      	str	r2, [r3, #4]
 8001e08:	687b      	ldr	r3, [r7, #4]
 8001e0a:	2201      	movs	r2, #1
 8001e0c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	2200      	movs	r2, #0
 8001e14:	f883 2020 	strb.w	r2, [r3, #32]
 8001e18:	7bfb      	ldrb	r3, [r7, #15]
 8001e1a:	4618      	mov	r0, r3
 8001e1c:	3714      	adds	r7, #20
 8001e1e:	46bd      	mov	sp, r7
 8001e20:	bc80      	pop	{r7}
 8001e22:	4770      	bx	lr

08001e24 <HAL_DMA_Abort_IT>:
 8001e24:	b580      	push	{r7, lr}
 8001e26:	b084      	sub	sp, #16
 8001e28:	af00      	add	r7, sp, #0
 8001e2a:	6078      	str	r0, [r7, #4]
 8001e2c:	2300      	movs	r3, #0
 8001e2e:	73fb      	strb	r3, [r7, #15]
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001e36:	b2db      	uxtb	r3, r3
 8001e38:	2b02      	cmp	r3, #2
 8001e3a:	d005      	beq.n	8001e48 <HAL_DMA_Abort_IT+0x24>
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	2204      	movs	r2, #4
 8001e40:	639a      	str	r2, [r3, #56]	; 0x38
 8001e42:	2301      	movs	r3, #1
 8001e44:	73fb      	strb	r3, [r7, #15]
 8001e46:	e051      	b.n	8001eec <HAL_DMA_Abort_IT+0xc8>
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	681a      	ldr	r2, [r3, #0]
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	f022 020e 	bic.w	r2, r2, #14
 8001e56:	601a      	str	r2, [r3, #0]
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	681a      	ldr	r2, [r3, #0]
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	681b      	ldr	r3, [r3, #0]
 8001e62:	f022 0201 	bic.w	r2, r2, #1
 8001e66:	601a      	str	r2, [r3, #0]
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	681b      	ldr	r3, [r3, #0]
 8001e6c:	4a22      	ldr	r2, [pc, #136]	; (8001ef8 <HAL_DMA_Abort_IT+0xd4>)
 8001e6e:	4293      	cmp	r3, r2
 8001e70:	d029      	beq.n	8001ec6 <HAL_DMA_Abort_IT+0xa2>
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	681b      	ldr	r3, [r3, #0]
 8001e76:	4a21      	ldr	r2, [pc, #132]	; (8001efc <HAL_DMA_Abort_IT+0xd8>)
 8001e78:	4293      	cmp	r3, r2
 8001e7a:	d022      	beq.n	8001ec2 <HAL_DMA_Abort_IT+0x9e>
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	4a1f      	ldr	r2, [pc, #124]	; (8001f00 <HAL_DMA_Abort_IT+0xdc>)
 8001e82:	4293      	cmp	r3, r2
 8001e84:	d01a      	beq.n	8001ebc <HAL_DMA_Abort_IT+0x98>
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	4a1e      	ldr	r2, [pc, #120]	; (8001f04 <HAL_DMA_Abort_IT+0xe0>)
 8001e8c:	4293      	cmp	r3, r2
 8001e8e:	d012      	beq.n	8001eb6 <HAL_DMA_Abort_IT+0x92>
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	4a1c      	ldr	r2, [pc, #112]	; (8001f08 <HAL_DMA_Abort_IT+0xe4>)
 8001e96:	4293      	cmp	r3, r2
 8001e98:	d00a      	beq.n	8001eb0 <HAL_DMA_Abort_IT+0x8c>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	4a1b      	ldr	r2, [pc, #108]	; (8001f0c <HAL_DMA_Abort_IT+0xe8>)
 8001ea0:	4293      	cmp	r3, r2
 8001ea2:	d102      	bne.n	8001eaa <HAL_DMA_Abort_IT+0x86>
 8001ea4:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001ea8:	e00e      	b.n	8001ec8 <HAL_DMA_Abort_IT+0xa4>
 8001eaa:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001eae:	e00b      	b.n	8001ec8 <HAL_DMA_Abort_IT+0xa4>
 8001eb0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001eb4:	e008      	b.n	8001ec8 <HAL_DMA_Abort_IT+0xa4>
 8001eb6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001eba:	e005      	b.n	8001ec8 <HAL_DMA_Abort_IT+0xa4>
 8001ebc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001ec0:	e002      	b.n	8001ec8 <HAL_DMA_Abort_IT+0xa4>
 8001ec2:	2310      	movs	r3, #16
 8001ec4:	e000      	b.n	8001ec8 <HAL_DMA_Abort_IT+0xa4>
 8001ec6:	2301      	movs	r3, #1
 8001ec8:	4a11      	ldr	r2, [pc, #68]	; (8001f10 <HAL_DMA_Abort_IT+0xec>)
 8001eca:	6053      	str	r3, [r2, #4]
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	2201      	movs	r2, #1
 8001ed0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	2200      	movs	r2, #0
 8001ed8:	f883 2020 	strb.w	r2, [r3, #32]
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	d003      	beq.n	8001eec <HAL_DMA_Abort_IT+0xc8>
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001ee8:	6878      	ldr	r0, [r7, #4]
 8001eea:	4798      	blx	r3
 8001eec:	7bfb      	ldrb	r3, [r7, #15]
 8001eee:	4618      	mov	r0, r3
 8001ef0:	3710      	adds	r7, #16
 8001ef2:	46bd      	mov	sp, r7
 8001ef4:	bd80      	pop	{r7, pc}
 8001ef6:	bf00      	nop
 8001ef8:	40020008 	.word	0x40020008
 8001efc:	4002001c 	.word	0x4002001c
 8001f00:	40020030 	.word	0x40020030
 8001f04:	40020044 	.word	0x40020044
 8001f08:	40020058 	.word	0x40020058
 8001f0c:	4002006c 	.word	0x4002006c
 8001f10:	40020000 	.word	0x40020000

08001f14 <HAL_GPIO_Init>:
 8001f14:	b480      	push	{r7}
 8001f16:	b08b      	sub	sp, #44	; 0x2c
 8001f18:	af00      	add	r7, sp, #0
 8001f1a:	6078      	str	r0, [r7, #4]
 8001f1c:	6039      	str	r1, [r7, #0]
 8001f1e:	2300      	movs	r3, #0
 8001f20:	627b      	str	r3, [r7, #36]	; 0x24
 8001f22:	2300      	movs	r3, #0
 8001f24:	623b      	str	r3, [r7, #32]
 8001f26:	e169      	b.n	80021fc <HAL_GPIO_Init+0x2e8>
 8001f28:	2201      	movs	r2, #1
 8001f2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f2c:	fa02 f303 	lsl.w	r3, r2, r3
 8001f30:	61fb      	str	r3, [r7, #28]
 8001f32:	683b      	ldr	r3, [r7, #0]
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	69fa      	ldr	r2, [r7, #28]
 8001f38:	4013      	ands	r3, r2
 8001f3a:	61bb      	str	r3, [r7, #24]
 8001f3c:	69ba      	ldr	r2, [r7, #24]
 8001f3e:	69fb      	ldr	r3, [r7, #28]
 8001f40:	429a      	cmp	r2, r3
 8001f42:	f040 8158 	bne.w	80021f6 <HAL_GPIO_Init+0x2e2>
 8001f46:	683b      	ldr	r3, [r7, #0]
 8001f48:	685b      	ldr	r3, [r3, #4]
 8001f4a:	4a9a      	ldr	r2, [pc, #616]	; (80021b4 <HAL_GPIO_Init+0x2a0>)
 8001f4c:	4293      	cmp	r3, r2
 8001f4e:	d05e      	beq.n	800200e <HAL_GPIO_Init+0xfa>
 8001f50:	4a98      	ldr	r2, [pc, #608]	; (80021b4 <HAL_GPIO_Init+0x2a0>)
 8001f52:	4293      	cmp	r3, r2
 8001f54:	d875      	bhi.n	8002042 <HAL_GPIO_Init+0x12e>
 8001f56:	4a98      	ldr	r2, [pc, #608]	; (80021b8 <HAL_GPIO_Init+0x2a4>)
 8001f58:	4293      	cmp	r3, r2
 8001f5a:	d058      	beq.n	800200e <HAL_GPIO_Init+0xfa>
 8001f5c:	4a96      	ldr	r2, [pc, #600]	; (80021b8 <HAL_GPIO_Init+0x2a4>)
 8001f5e:	4293      	cmp	r3, r2
 8001f60:	d86f      	bhi.n	8002042 <HAL_GPIO_Init+0x12e>
 8001f62:	4a96      	ldr	r2, [pc, #600]	; (80021bc <HAL_GPIO_Init+0x2a8>)
 8001f64:	4293      	cmp	r3, r2
 8001f66:	d052      	beq.n	800200e <HAL_GPIO_Init+0xfa>
 8001f68:	4a94      	ldr	r2, [pc, #592]	; (80021bc <HAL_GPIO_Init+0x2a8>)
 8001f6a:	4293      	cmp	r3, r2
 8001f6c:	d869      	bhi.n	8002042 <HAL_GPIO_Init+0x12e>
 8001f6e:	4a94      	ldr	r2, [pc, #592]	; (80021c0 <HAL_GPIO_Init+0x2ac>)
 8001f70:	4293      	cmp	r3, r2
 8001f72:	d04c      	beq.n	800200e <HAL_GPIO_Init+0xfa>
 8001f74:	4a92      	ldr	r2, [pc, #584]	; (80021c0 <HAL_GPIO_Init+0x2ac>)
 8001f76:	4293      	cmp	r3, r2
 8001f78:	d863      	bhi.n	8002042 <HAL_GPIO_Init+0x12e>
 8001f7a:	4a92      	ldr	r2, [pc, #584]	; (80021c4 <HAL_GPIO_Init+0x2b0>)
 8001f7c:	4293      	cmp	r3, r2
 8001f7e:	d046      	beq.n	800200e <HAL_GPIO_Init+0xfa>
 8001f80:	4a90      	ldr	r2, [pc, #576]	; (80021c4 <HAL_GPIO_Init+0x2b0>)
 8001f82:	4293      	cmp	r3, r2
 8001f84:	d85d      	bhi.n	8002042 <HAL_GPIO_Init+0x12e>
 8001f86:	2b12      	cmp	r3, #18
 8001f88:	d82a      	bhi.n	8001fe0 <HAL_GPIO_Init+0xcc>
 8001f8a:	2b12      	cmp	r3, #18
 8001f8c:	d859      	bhi.n	8002042 <HAL_GPIO_Init+0x12e>
 8001f8e:	a201      	add	r2, pc, #4	; (adr r2, 8001f94 <HAL_GPIO_Init+0x80>)
 8001f90:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f94:	0800200f 	.word	0x0800200f
 8001f98:	08001fe9 	.word	0x08001fe9
 8001f9c:	08001ffb 	.word	0x08001ffb
 8001fa0:	0800203d 	.word	0x0800203d
 8001fa4:	08002043 	.word	0x08002043
 8001fa8:	08002043 	.word	0x08002043
 8001fac:	08002043 	.word	0x08002043
 8001fb0:	08002043 	.word	0x08002043
 8001fb4:	08002043 	.word	0x08002043
 8001fb8:	08002043 	.word	0x08002043
 8001fbc:	08002043 	.word	0x08002043
 8001fc0:	08002043 	.word	0x08002043
 8001fc4:	08002043 	.word	0x08002043
 8001fc8:	08002043 	.word	0x08002043
 8001fcc:	08002043 	.word	0x08002043
 8001fd0:	08002043 	.word	0x08002043
 8001fd4:	08002043 	.word	0x08002043
 8001fd8:	08001ff1 	.word	0x08001ff1
 8001fdc:	08002005 	.word	0x08002005
 8001fe0:	4a79      	ldr	r2, [pc, #484]	; (80021c8 <HAL_GPIO_Init+0x2b4>)
 8001fe2:	4293      	cmp	r3, r2
 8001fe4:	d013      	beq.n	800200e <HAL_GPIO_Init+0xfa>
 8001fe6:	e02c      	b.n	8002042 <HAL_GPIO_Init+0x12e>
 8001fe8:	683b      	ldr	r3, [r7, #0]
 8001fea:	68db      	ldr	r3, [r3, #12]
 8001fec:	623b      	str	r3, [r7, #32]
 8001fee:	e029      	b.n	8002044 <HAL_GPIO_Init+0x130>
 8001ff0:	683b      	ldr	r3, [r7, #0]
 8001ff2:	68db      	ldr	r3, [r3, #12]
 8001ff4:	3304      	adds	r3, #4
 8001ff6:	623b      	str	r3, [r7, #32]
 8001ff8:	e024      	b.n	8002044 <HAL_GPIO_Init+0x130>
 8001ffa:	683b      	ldr	r3, [r7, #0]
 8001ffc:	68db      	ldr	r3, [r3, #12]
 8001ffe:	3308      	adds	r3, #8
 8002000:	623b      	str	r3, [r7, #32]
 8002002:	e01f      	b.n	8002044 <HAL_GPIO_Init+0x130>
 8002004:	683b      	ldr	r3, [r7, #0]
 8002006:	68db      	ldr	r3, [r3, #12]
 8002008:	330c      	adds	r3, #12
 800200a:	623b      	str	r3, [r7, #32]
 800200c:	e01a      	b.n	8002044 <HAL_GPIO_Init+0x130>
 800200e:	683b      	ldr	r3, [r7, #0]
 8002010:	689b      	ldr	r3, [r3, #8]
 8002012:	2b00      	cmp	r3, #0
 8002014:	d102      	bne.n	800201c <HAL_GPIO_Init+0x108>
 8002016:	2304      	movs	r3, #4
 8002018:	623b      	str	r3, [r7, #32]
 800201a:	e013      	b.n	8002044 <HAL_GPIO_Init+0x130>
 800201c:	683b      	ldr	r3, [r7, #0]
 800201e:	689b      	ldr	r3, [r3, #8]
 8002020:	2b01      	cmp	r3, #1
 8002022:	d105      	bne.n	8002030 <HAL_GPIO_Init+0x11c>
 8002024:	2308      	movs	r3, #8
 8002026:	623b      	str	r3, [r7, #32]
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	69fa      	ldr	r2, [r7, #28]
 800202c:	611a      	str	r2, [r3, #16]
 800202e:	e009      	b.n	8002044 <HAL_GPIO_Init+0x130>
 8002030:	2308      	movs	r3, #8
 8002032:	623b      	str	r3, [r7, #32]
 8002034:	687b      	ldr	r3, [r7, #4]
 8002036:	69fa      	ldr	r2, [r7, #28]
 8002038:	615a      	str	r2, [r3, #20]
 800203a:	e003      	b.n	8002044 <HAL_GPIO_Init+0x130>
 800203c:	2300      	movs	r3, #0
 800203e:	623b      	str	r3, [r7, #32]
 8002040:	e000      	b.n	8002044 <HAL_GPIO_Init+0x130>
 8002042:	bf00      	nop
 8002044:	69bb      	ldr	r3, [r7, #24]
 8002046:	2bff      	cmp	r3, #255	; 0xff
 8002048:	d801      	bhi.n	800204e <HAL_GPIO_Init+0x13a>
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	e001      	b.n	8002052 <HAL_GPIO_Init+0x13e>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	3304      	adds	r3, #4
 8002052:	617b      	str	r3, [r7, #20]
 8002054:	69bb      	ldr	r3, [r7, #24]
 8002056:	2bff      	cmp	r3, #255	; 0xff
 8002058:	d802      	bhi.n	8002060 <HAL_GPIO_Init+0x14c>
 800205a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800205c:	009b      	lsls	r3, r3, #2
 800205e:	e002      	b.n	8002066 <HAL_GPIO_Init+0x152>
 8002060:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002062:	3b08      	subs	r3, #8
 8002064:	009b      	lsls	r3, r3, #2
 8002066:	613b      	str	r3, [r7, #16]
 8002068:	697b      	ldr	r3, [r7, #20]
 800206a:	681a      	ldr	r2, [r3, #0]
 800206c:	210f      	movs	r1, #15
 800206e:	693b      	ldr	r3, [r7, #16]
 8002070:	fa01 f303 	lsl.w	r3, r1, r3
 8002074:	43db      	mvns	r3, r3
 8002076:	401a      	ands	r2, r3
 8002078:	6a39      	ldr	r1, [r7, #32]
 800207a:	693b      	ldr	r3, [r7, #16]
 800207c:	fa01 f303 	lsl.w	r3, r1, r3
 8002080:	431a      	orrs	r2, r3
 8002082:	697b      	ldr	r3, [r7, #20]
 8002084:	601a      	str	r2, [r3, #0]
 8002086:	683b      	ldr	r3, [r7, #0]
 8002088:	685b      	ldr	r3, [r3, #4]
 800208a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800208e:	2b00      	cmp	r3, #0
 8002090:	f000 80b1 	beq.w	80021f6 <HAL_GPIO_Init+0x2e2>
 8002094:	4b4d      	ldr	r3, [pc, #308]	; (80021cc <HAL_GPIO_Init+0x2b8>)
 8002096:	699b      	ldr	r3, [r3, #24]
 8002098:	4a4c      	ldr	r2, [pc, #304]	; (80021cc <HAL_GPIO_Init+0x2b8>)
 800209a:	f043 0301 	orr.w	r3, r3, #1
 800209e:	6193      	str	r3, [r2, #24]
 80020a0:	4b4a      	ldr	r3, [pc, #296]	; (80021cc <HAL_GPIO_Init+0x2b8>)
 80020a2:	699b      	ldr	r3, [r3, #24]
 80020a4:	f003 0301 	and.w	r3, r3, #1
 80020a8:	60bb      	str	r3, [r7, #8]
 80020aa:	68bb      	ldr	r3, [r7, #8]
 80020ac:	4a48      	ldr	r2, [pc, #288]	; (80021d0 <HAL_GPIO_Init+0x2bc>)
 80020ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80020b0:	089b      	lsrs	r3, r3, #2
 80020b2:	3302      	adds	r3, #2
 80020b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80020b8:	60fb      	str	r3, [r7, #12]
 80020ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80020bc:	f003 0303 	and.w	r3, r3, #3
 80020c0:	009b      	lsls	r3, r3, #2
 80020c2:	220f      	movs	r2, #15
 80020c4:	fa02 f303 	lsl.w	r3, r2, r3
 80020c8:	43db      	mvns	r3, r3
 80020ca:	68fa      	ldr	r2, [r7, #12]
 80020cc:	4013      	ands	r3, r2
 80020ce:	60fb      	str	r3, [r7, #12]
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	4a40      	ldr	r2, [pc, #256]	; (80021d4 <HAL_GPIO_Init+0x2c0>)
 80020d4:	4293      	cmp	r3, r2
 80020d6:	d013      	beq.n	8002100 <HAL_GPIO_Init+0x1ec>
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	4a3f      	ldr	r2, [pc, #252]	; (80021d8 <HAL_GPIO_Init+0x2c4>)
 80020dc:	4293      	cmp	r3, r2
 80020de:	d00d      	beq.n	80020fc <HAL_GPIO_Init+0x1e8>
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	4a3e      	ldr	r2, [pc, #248]	; (80021dc <HAL_GPIO_Init+0x2c8>)
 80020e4:	4293      	cmp	r3, r2
 80020e6:	d007      	beq.n	80020f8 <HAL_GPIO_Init+0x1e4>
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	4a3d      	ldr	r2, [pc, #244]	; (80021e0 <HAL_GPIO_Init+0x2cc>)
 80020ec:	4293      	cmp	r3, r2
 80020ee:	d101      	bne.n	80020f4 <HAL_GPIO_Init+0x1e0>
 80020f0:	2303      	movs	r3, #3
 80020f2:	e006      	b.n	8002102 <HAL_GPIO_Init+0x1ee>
 80020f4:	2304      	movs	r3, #4
 80020f6:	e004      	b.n	8002102 <HAL_GPIO_Init+0x1ee>
 80020f8:	2302      	movs	r3, #2
 80020fa:	e002      	b.n	8002102 <HAL_GPIO_Init+0x1ee>
 80020fc:	2301      	movs	r3, #1
 80020fe:	e000      	b.n	8002102 <HAL_GPIO_Init+0x1ee>
 8002100:	2300      	movs	r3, #0
 8002102:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002104:	f002 0203 	and.w	r2, r2, #3
 8002108:	0092      	lsls	r2, r2, #2
 800210a:	4093      	lsls	r3, r2
 800210c:	68fa      	ldr	r2, [r7, #12]
 800210e:	4313      	orrs	r3, r2
 8002110:	60fb      	str	r3, [r7, #12]
 8002112:	492f      	ldr	r1, [pc, #188]	; (80021d0 <HAL_GPIO_Init+0x2bc>)
 8002114:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002116:	089b      	lsrs	r3, r3, #2
 8002118:	3302      	adds	r3, #2
 800211a:	68fa      	ldr	r2, [r7, #12]
 800211c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002120:	683b      	ldr	r3, [r7, #0]
 8002122:	685b      	ldr	r3, [r3, #4]
 8002124:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002128:	2b00      	cmp	r3, #0
 800212a:	d006      	beq.n	800213a <HAL_GPIO_Init+0x226>
 800212c:	4b2d      	ldr	r3, [pc, #180]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 800212e:	689a      	ldr	r2, [r3, #8]
 8002130:	492c      	ldr	r1, [pc, #176]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 8002132:	69bb      	ldr	r3, [r7, #24]
 8002134:	4313      	orrs	r3, r2
 8002136:	608b      	str	r3, [r1, #8]
 8002138:	e006      	b.n	8002148 <HAL_GPIO_Init+0x234>
 800213a:	4b2a      	ldr	r3, [pc, #168]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 800213c:	689a      	ldr	r2, [r3, #8]
 800213e:	69bb      	ldr	r3, [r7, #24]
 8002140:	43db      	mvns	r3, r3
 8002142:	4928      	ldr	r1, [pc, #160]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 8002144:	4013      	ands	r3, r2
 8002146:	608b      	str	r3, [r1, #8]
 8002148:	683b      	ldr	r3, [r7, #0]
 800214a:	685b      	ldr	r3, [r3, #4]
 800214c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002150:	2b00      	cmp	r3, #0
 8002152:	d006      	beq.n	8002162 <HAL_GPIO_Init+0x24e>
 8002154:	4b23      	ldr	r3, [pc, #140]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 8002156:	68da      	ldr	r2, [r3, #12]
 8002158:	4922      	ldr	r1, [pc, #136]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 800215a:	69bb      	ldr	r3, [r7, #24]
 800215c:	4313      	orrs	r3, r2
 800215e:	60cb      	str	r3, [r1, #12]
 8002160:	e006      	b.n	8002170 <HAL_GPIO_Init+0x25c>
 8002162:	4b20      	ldr	r3, [pc, #128]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 8002164:	68da      	ldr	r2, [r3, #12]
 8002166:	69bb      	ldr	r3, [r7, #24]
 8002168:	43db      	mvns	r3, r3
 800216a:	491e      	ldr	r1, [pc, #120]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 800216c:	4013      	ands	r3, r2
 800216e:	60cb      	str	r3, [r1, #12]
 8002170:	683b      	ldr	r3, [r7, #0]
 8002172:	685b      	ldr	r3, [r3, #4]
 8002174:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002178:	2b00      	cmp	r3, #0
 800217a:	d006      	beq.n	800218a <HAL_GPIO_Init+0x276>
 800217c:	4b19      	ldr	r3, [pc, #100]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 800217e:	685a      	ldr	r2, [r3, #4]
 8002180:	4918      	ldr	r1, [pc, #96]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 8002182:	69bb      	ldr	r3, [r7, #24]
 8002184:	4313      	orrs	r3, r2
 8002186:	604b      	str	r3, [r1, #4]
 8002188:	e006      	b.n	8002198 <HAL_GPIO_Init+0x284>
 800218a:	4b16      	ldr	r3, [pc, #88]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 800218c:	685a      	ldr	r2, [r3, #4]
 800218e:	69bb      	ldr	r3, [r7, #24]
 8002190:	43db      	mvns	r3, r3
 8002192:	4914      	ldr	r1, [pc, #80]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 8002194:	4013      	ands	r3, r2
 8002196:	604b      	str	r3, [r1, #4]
 8002198:	683b      	ldr	r3, [r7, #0]
 800219a:	685b      	ldr	r3, [r3, #4]
 800219c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d021      	beq.n	80021e8 <HAL_GPIO_Init+0x2d4>
 80021a4:	4b0f      	ldr	r3, [pc, #60]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 80021a6:	681a      	ldr	r2, [r3, #0]
 80021a8:	490e      	ldr	r1, [pc, #56]	; (80021e4 <HAL_GPIO_Init+0x2d0>)
 80021aa:	69bb      	ldr	r3, [r7, #24]
 80021ac:	4313      	orrs	r3, r2
 80021ae:	600b      	str	r3, [r1, #0]
 80021b0:	e021      	b.n	80021f6 <HAL_GPIO_Init+0x2e2>
 80021b2:	bf00      	nop
 80021b4:	10320000 	.word	0x10320000
 80021b8:	10310000 	.word	0x10310000
 80021bc:	10220000 	.word	0x10220000
 80021c0:	10210000 	.word	0x10210000
 80021c4:	10120000 	.word	0x10120000
 80021c8:	10110000 	.word	0x10110000
 80021cc:	40021000 	.word	0x40021000
 80021d0:	40010000 	.word	0x40010000
 80021d4:	40010800 	.word	0x40010800
 80021d8:	40010c00 	.word	0x40010c00
 80021dc:	40011000 	.word	0x40011000
 80021e0:	40011400 	.word	0x40011400
 80021e4:	40010400 	.word	0x40010400
 80021e8:	4b0b      	ldr	r3, [pc, #44]	; (8002218 <HAL_GPIO_Init+0x304>)
 80021ea:	681a      	ldr	r2, [r3, #0]
 80021ec:	69bb      	ldr	r3, [r7, #24]
 80021ee:	43db      	mvns	r3, r3
 80021f0:	4909      	ldr	r1, [pc, #36]	; (8002218 <HAL_GPIO_Init+0x304>)
 80021f2:	4013      	ands	r3, r2
 80021f4:	600b      	str	r3, [r1, #0]
 80021f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021f8:	3301      	adds	r3, #1
 80021fa:	627b      	str	r3, [r7, #36]	; 0x24
 80021fc:	683b      	ldr	r3, [r7, #0]
 80021fe:	681a      	ldr	r2, [r3, #0]
 8002200:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002202:	fa22 f303 	lsr.w	r3, r2, r3
 8002206:	2b00      	cmp	r3, #0
 8002208:	f47f ae8e 	bne.w	8001f28 <HAL_GPIO_Init+0x14>
 800220c:	bf00      	nop
 800220e:	bf00      	nop
 8002210:	372c      	adds	r7, #44	; 0x2c
 8002212:	46bd      	mov	sp, r7
 8002214:	bc80      	pop	{r7}
 8002216:	4770      	bx	lr
 8002218:	40010400 	.word	0x40010400

0800221c <HAL_GPIO_ReadPin>:
 800221c:	b480      	push	{r7}
 800221e:	b085      	sub	sp, #20
 8002220:	af00      	add	r7, sp, #0
 8002222:	6078      	str	r0, [r7, #4]
 8002224:	460b      	mov	r3, r1
 8002226:	807b      	strh	r3, [r7, #2]
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	689a      	ldr	r2, [r3, #8]
 800222c:	887b      	ldrh	r3, [r7, #2]
 800222e:	4013      	ands	r3, r2
 8002230:	2b00      	cmp	r3, #0
 8002232:	d002      	beq.n	800223a <HAL_GPIO_ReadPin+0x1e>
 8002234:	2301      	movs	r3, #1
 8002236:	73fb      	strb	r3, [r7, #15]
 8002238:	e001      	b.n	800223e <HAL_GPIO_ReadPin+0x22>
 800223a:	2300      	movs	r3, #0
 800223c:	73fb      	strb	r3, [r7, #15]
 800223e:	7bfb      	ldrb	r3, [r7, #15]
 8002240:	4618      	mov	r0, r3
 8002242:	3714      	adds	r7, #20
 8002244:	46bd      	mov	sp, r7
 8002246:	bc80      	pop	{r7}
 8002248:	4770      	bx	lr

0800224a <HAL_GPIO_WritePin>:
 800224a:	b480      	push	{r7}
 800224c:	b083      	sub	sp, #12
 800224e:	af00      	add	r7, sp, #0
 8002250:	6078      	str	r0, [r7, #4]
 8002252:	460b      	mov	r3, r1
 8002254:	807b      	strh	r3, [r7, #2]
 8002256:	4613      	mov	r3, r2
 8002258:	707b      	strb	r3, [r7, #1]
 800225a:	787b      	ldrb	r3, [r7, #1]
 800225c:	2b00      	cmp	r3, #0
 800225e:	d003      	beq.n	8002268 <HAL_GPIO_WritePin+0x1e>
 8002260:	887a      	ldrh	r2, [r7, #2]
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	611a      	str	r2, [r3, #16]
 8002266:	e003      	b.n	8002270 <HAL_GPIO_WritePin+0x26>
 8002268:	887b      	ldrh	r3, [r7, #2]
 800226a:	041a      	lsls	r2, r3, #16
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	611a      	str	r2, [r3, #16]
 8002270:	bf00      	nop
 8002272:	370c      	adds	r7, #12
 8002274:	46bd      	mov	sp, r7
 8002276:	bc80      	pop	{r7}
 8002278:	4770      	bx	lr

0800227a <HAL_GPIO_TogglePin>:
 800227a:	b480      	push	{r7}
 800227c:	b085      	sub	sp, #20
 800227e:	af00      	add	r7, sp, #0
 8002280:	6078      	str	r0, [r7, #4]
 8002282:	460b      	mov	r3, r1
 8002284:	807b      	strh	r3, [r7, #2]
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	68db      	ldr	r3, [r3, #12]
 800228a:	60fb      	str	r3, [r7, #12]
 800228c:	887a      	ldrh	r2, [r7, #2]
 800228e:	68fb      	ldr	r3, [r7, #12]
 8002290:	4013      	ands	r3, r2
 8002292:	041a      	lsls	r2, r3, #16
 8002294:	68fb      	ldr	r3, [r7, #12]
 8002296:	43d9      	mvns	r1, r3
 8002298:	887b      	ldrh	r3, [r7, #2]
 800229a:	400b      	ands	r3, r1
 800229c:	431a      	orrs	r2, r3
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	611a      	str	r2, [r3, #16]
 80022a2:	bf00      	nop
 80022a4:	3714      	adds	r7, #20
 80022a6:	46bd      	mov	sp, r7
 80022a8:	bc80      	pop	{r7}
 80022aa:	4770      	bx	lr

080022ac <HAL_PWR_EnterSLEEPMode>:
 80022ac:	b480      	push	{r7}
 80022ae:	b083      	sub	sp, #12
 80022b0:	af00      	add	r7, sp, #0
 80022b2:	6078      	str	r0, [r7, #4]
 80022b4:	460b      	mov	r3, r1
 80022b6:	70fb      	strb	r3, [r7, #3]
 80022b8:	4b09      	ldr	r3, [pc, #36]	; (80022e0 <HAL_PWR_EnterSLEEPMode+0x34>)
 80022ba:	691b      	ldr	r3, [r3, #16]
 80022bc:	4a08      	ldr	r2, [pc, #32]	; (80022e0 <HAL_PWR_EnterSLEEPMode+0x34>)
 80022be:	f023 0304 	bic.w	r3, r3, #4
 80022c2:	6113      	str	r3, [r2, #16]
 80022c4:	78fb      	ldrb	r3, [r7, #3]
 80022c6:	2b01      	cmp	r3, #1
 80022c8:	d101      	bne.n	80022ce <HAL_PWR_EnterSLEEPMode+0x22>
 80022ca:	bf30      	wfi
 80022cc:	e002      	b.n	80022d4 <HAL_PWR_EnterSLEEPMode+0x28>
 80022ce:	bf40      	sev
 80022d0:	bf20      	wfe
 80022d2:	bf20      	wfe
 80022d4:	bf00      	nop
 80022d6:	370c      	adds	r7, #12
 80022d8:	46bd      	mov	sp, r7
 80022da:	bc80      	pop	{r7}
 80022dc:	4770      	bx	lr
 80022de:	bf00      	nop
 80022e0:	e000ed00 	.word	0xe000ed00

080022e4 <HAL_RCC_OscConfig>:
 80022e4:	b580      	push	{r7, lr}
 80022e6:	b086      	sub	sp, #24
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	6078      	str	r0, [r7, #4]
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	2b00      	cmp	r3, #0
 80022f0:	d101      	bne.n	80022f6 <HAL_RCC_OscConfig+0x12>
 80022f2:	2301      	movs	r3, #1
 80022f4:	e26c      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	f003 0301 	and.w	r3, r3, #1
 80022fe:	2b00      	cmp	r3, #0
 8002300:	f000 8087 	beq.w	8002412 <HAL_RCC_OscConfig+0x12e>
 8002304:	4b92      	ldr	r3, [pc, #584]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002306:	685b      	ldr	r3, [r3, #4]
 8002308:	f003 030c 	and.w	r3, r3, #12
 800230c:	2b04      	cmp	r3, #4
 800230e:	d00c      	beq.n	800232a <HAL_RCC_OscConfig+0x46>
 8002310:	4b8f      	ldr	r3, [pc, #572]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002312:	685b      	ldr	r3, [r3, #4]
 8002314:	f003 030c 	and.w	r3, r3, #12
 8002318:	2b08      	cmp	r3, #8
 800231a:	d112      	bne.n	8002342 <HAL_RCC_OscConfig+0x5e>
 800231c:	4b8c      	ldr	r3, [pc, #560]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800231e:	685b      	ldr	r3, [r3, #4]
 8002320:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002324:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002328:	d10b      	bne.n	8002342 <HAL_RCC_OscConfig+0x5e>
 800232a:	4b89      	ldr	r3, [pc, #548]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002332:	2b00      	cmp	r3, #0
 8002334:	d06c      	beq.n	8002410 <HAL_RCC_OscConfig+0x12c>
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	685b      	ldr	r3, [r3, #4]
 800233a:	2b00      	cmp	r3, #0
 800233c:	d168      	bne.n	8002410 <HAL_RCC_OscConfig+0x12c>
 800233e:	2301      	movs	r3, #1
 8002340:	e246      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	685b      	ldr	r3, [r3, #4]
 8002346:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800234a:	d106      	bne.n	800235a <HAL_RCC_OscConfig+0x76>
 800234c:	4b80      	ldr	r3, [pc, #512]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	4a7f      	ldr	r2, [pc, #508]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002352:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002356:	6013      	str	r3, [r2, #0]
 8002358:	e02e      	b.n	80023b8 <HAL_RCC_OscConfig+0xd4>
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	685b      	ldr	r3, [r3, #4]
 800235e:	2b00      	cmp	r3, #0
 8002360:	d10c      	bne.n	800237c <HAL_RCC_OscConfig+0x98>
 8002362:	4b7b      	ldr	r3, [pc, #492]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	4a7a      	ldr	r2, [pc, #488]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002368:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800236c:	6013      	str	r3, [r2, #0]
 800236e:	4b78      	ldr	r3, [pc, #480]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	4a77      	ldr	r2, [pc, #476]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002374:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002378:	6013      	str	r3, [r2, #0]
 800237a:	e01d      	b.n	80023b8 <HAL_RCC_OscConfig+0xd4>
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	685b      	ldr	r3, [r3, #4]
 8002380:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002384:	d10c      	bne.n	80023a0 <HAL_RCC_OscConfig+0xbc>
 8002386:	4b72      	ldr	r3, [pc, #456]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	4a71      	ldr	r2, [pc, #452]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800238c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002390:	6013      	str	r3, [r2, #0]
 8002392:	4b6f      	ldr	r3, [pc, #444]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	4a6e      	ldr	r2, [pc, #440]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002398:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800239c:	6013      	str	r3, [r2, #0]
 800239e:	e00b      	b.n	80023b8 <HAL_RCC_OscConfig+0xd4>
 80023a0:	4b6b      	ldr	r3, [pc, #428]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	4a6a      	ldr	r2, [pc, #424]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 80023a6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80023aa:	6013      	str	r3, [r2, #0]
 80023ac:	4b68      	ldr	r3, [pc, #416]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	4a67      	ldr	r2, [pc, #412]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 80023b2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80023b6:	6013      	str	r3, [r2, #0]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	685b      	ldr	r3, [r3, #4]
 80023bc:	2b00      	cmp	r3, #0
 80023be:	d013      	beq.n	80023e8 <HAL_RCC_OscConfig+0x104>
 80023c0:	f7ff fbde 	bl	8001b80 <HAL_GetTick>
 80023c4:	6138      	str	r0, [r7, #16]
 80023c6:	e008      	b.n	80023da <HAL_RCC_OscConfig+0xf6>
 80023c8:	f7ff fbda 	bl	8001b80 <HAL_GetTick>
 80023cc:	4602      	mov	r2, r0
 80023ce:	693b      	ldr	r3, [r7, #16]
 80023d0:	1ad3      	subs	r3, r2, r3
 80023d2:	2b64      	cmp	r3, #100	; 0x64
 80023d4:	d901      	bls.n	80023da <HAL_RCC_OscConfig+0xf6>
 80023d6:	2303      	movs	r3, #3
 80023d8:	e1fa      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 80023da:	4b5d      	ldr	r3, [pc, #372]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80023e2:	2b00      	cmp	r3, #0
 80023e4:	d0f0      	beq.n	80023c8 <HAL_RCC_OscConfig+0xe4>
 80023e6:	e014      	b.n	8002412 <HAL_RCC_OscConfig+0x12e>
 80023e8:	f7ff fbca 	bl	8001b80 <HAL_GetTick>
 80023ec:	6138      	str	r0, [r7, #16]
 80023ee:	e008      	b.n	8002402 <HAL_RCC_OscConfig+0x11e>
 80023f0:	f7ff fbc6 	bl	8001b80 <HAL_GetTick>
 80023f4:	4602      	mov	r2, r0
 80023f6:	693b      	ldr	r3, [r7, #16]
 80023f8:	1ad3      	subs	r3, r2, r3
 80023fa:	2b64      	cmp	r3, #100	; 0x64
 80023fc:	d901      	bls.n	8002402 <HAL_RCC_OscConfig+0x11e>
 80023fe:	2303      	movs	r3, #3
 8002400:	e1e6      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 8002402:	4b53      	ldr	r3, [pc, #332]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800240a:	2b00      	cmp	r3, #0
 800240c:	d1f0      	bne.n	80023f0 <HAL_RCC_OscConfig+0x10c>
 800240e:	e000      	b.n	8002412 <HAL_RCC_OscConfig+0x12e>
 8002410:	bf00      	nop
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	f003 0302 	and.w	r3, r3, #2
 800241a:	2b00      	cmp	r3, #0
 800241c:	d063      	beq.n	80024e6 <HAL_RCC_OscConfig+0x202>
 800241e:	4b4c      	ldr	r3, [pc, #304]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002420:	685b      	ldr	r3, [r3, #4]
 8002422:	f003 030c 	and.w	r3, r3, #12
 8002426:	2b00      	cmp	r3, #0
 8002428:	d00b      	beq.n	8002442 <HAL_RCC_OscConfig+0x15e>
 800242a:	4b49      	ldr	r3, [pc, #292]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800242c:	685b      	ldr	r3, [r3, #4]
 800242e:	f003 030c 	and.w	r3, r3, #12
 8002432:	2b08      	cmp	r3, #8
 8002434:	d11c      	bne.n	8002470 <HAL_RCC_OscConfig+0x18c>
 8002436:	4b46      	ldr	r3, [pc, #280]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002438:	685b      	ldr	r3, [r3, #4]
 800243a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800243e:	2b00      	cmp	r3, #0
 8002440:	d116      	bne.n	8002470 <HAL_RCC_OscConfig+0x18c>
 8002442:	4b43      	ldr	r3, [pc, #268]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	f003 0302 	and.w	r3, r3, #2
 800244a:	2b00      	cmp	r3, #0
 800244c:	d005      	beq.n	800245a <HAL_RCC_OscConfig+0x176>
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	691b      	ldr	r3, [r3, #16]
 8002452:	2b01      	cmp	r3, #1
 8002454:	d001      	beq.n	800245a <HAL_RCC_OscConfig+0x176>
 8002456:	2301      	movs	r3, #1
 8002458:	e1ba      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 800245a:	4b3d      	ldr	r3, [pc, #244]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	695b      	ldr	r3, [r3, #20]
 8002466:	00db      	lsls	r3, r3, #3
 8002468:	4939      	ldr	r1, [pc, #228]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800246a:	4313      	orrs	r3, r2
 800246c:	600b      	str	r3, [r1, #0]
 800246e:	e03a      	b.n	80024e6 <HAL_RCC_OscConfig+0x202>
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	691b      	ldr	r3, [r3, #16]
 8002474:	2b00      	cmp	r3, #0
 8002476:	d020      	beq.n	80024ba <HAL_RCC_OscConfig+0x1d6>
 8002478:	4b36      	ldr	r3, [pc, #216]	; (8002554 <HAL_RCC_OscConfig+0x270>)
 800247a:	2201      	movs	r2, #1
 800247c:	601a      	str	r2, [r3, #0]
 800247e:	f7ff fb7f 	bl	8001b80 <HAL_GetTick>
 8002482:	6138      	str	r0, [r7, #16]
 8002484:	e008      	b.n	8002498 <HAL_RCC_OscConfig+0x1b4>
 8002486:	f7ff fb7b 	bl	8001b80 <HAL_GetTick>
 800248a:	4602      	mov	r2, r0
 800248c:	693b      	ldr	r3, [r7, #16]
 800248e:	1ad3      	subs	r3, r2, r3
 8002490:	2b02      	cmp	r3, #2
 8002492:	d901      	bls.n	8002498 <HAL_RCC_OscConfig+0x1b4>
 8002494:	2303      	movs	r3, #3
 8002496:	e19b      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 8002498:	4b2d      	ldr	r3, [pc, #180]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	f003 0302 	and.w	r3, r3, #2
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d0f0      	beq.n	8002486 <HAL_RCC_OscConfig+0x1a2>
 80024a4:	4b2a      	ldr	r3, [pc, #168]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	695b      	ldr	r3, [r3, #20]
 80024b0:	00db      	lsls	r3, r3, #3
 80024b2:	4927      	ldr	r1, [pc, #156]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 80024b4:	4313      	orrs	r3, r2
 80024b6:	600b      	str	r3, [r1, #0]
 80024b8:	e015      	b.n	80024e6 <HAL_RCC_OscConfig+0x202>
 80024ba:	4b26      	ldr	r3, [pc, #152]	; (8002554 <HAL_RCC_OscConfig+0x270>)
 80024bc:	2200      	movs	r2, #0
 80024be:	601a      	str	r2, [r3, #0]
 80024c0:	f7ff fb5e 	bl	8001b80 <HAL_GetTick>
 80024c4:	6138      	str	r0, [r7, #16]
 80024c6:	e008      	b.n	80024da <HAL_RCC_OscConfig+0x1f6>
 80024c8:	f7ff fb5a 	bl	8001b80 <HAL_GetTick>
 80024cc:	4602      	mov	r2, r0
 80024ce:	693b      	ldr	r3, [r7, #16]
 80024d0:	1ad3      	subs	r3, r2, r3
 80024d2:	2b02      	cmp	r3, #2
 80024d4:	d901      	bls.n	80024da <HAL_RCC_OscConfig+0x1f6>
 80024d6:	2303      	movs	r3, #3
 80024d8:	e17a      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 80024da:	4b1d      	ldr	r3, [pc, #116]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	f003 0302 	and.w	r3, r3, #2
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d1f0      	bne.n	80024c8 <HAL_RCC_OscConfig+0x1e4>
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	681b      	ldr	r3, [r3, #0]
 80024ea:	f003 0308 	and.w	r3, r3, #8
 80024ee:	2b00      	cmp	r3, #0
 80024f0:	d03a      	beq.n	8002568 <HAL_RCC_OscConfig+0x284>
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	699b      	ldr	r3, [r3, #24]
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	d019      	beq.n	800252e <HAL_RCC_OscConfig+0x24a>
 80024fa:	4b17      	ldr	r3, [pc, #92]	; (8002558 <HAL_RCC_OscConfig+0x274>)
 80024fc:	2201      	movs	r2, #1
 80024fe:	601a      	str	r2, [r3, #0]
 8002500:	f7ff fb3e 	bl	8001b80 <HAL_GetTick>
 8002504:	6138      	str	r0, [r7, #16]
 8002506:	e008      	b.n	800251a <HAL_RCC_OscConfig+0x236>
 8002508:	f7ff fb3a 	bl	8001b80 <HAL_GetTick>
 800250c:	4602      	mov	r2, r0
 800250e:	693b      	ldr	r3, [r7, #16]
 8002510:	1ad3      	subs	r3, r2, r3
 8002512:	2b02      	cmp	r3, #2
 8002514:	d901      	bls.n	800251a <HAL_RCC_OscConfig+0x236>
 8002516:	2303      	movs	r3, #3
 8002518:	e15a      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 800251a:	4b0d      	ldr	r3, [pc, #52]	; (8002550 <HAL_RCC_OscConfig+0x26c>)
 800251c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800251e:	f003 0302 	and.w	r3, r3, #2
 8002522:	2b00      	cmp	r3, #0
 8002524:	d0f0      	beq.n	8002508 <HAL_RCC_OscConfig+0x224>
 8002526:	2001      	movs	r0, #1
 8002528:	f000 facc 	bl	8002ac4 <RCC_Delay>
 800252c:	e01c      	b.n	8002568 <HAL_RCC_OscConfig+0x284>
 800252e:	4b0a      	ldr	r3, [pc, #40]	; (8002558 <HAL_RCC_OscConfig+0x274>)
 8002530:	2200      	movs	r2, #0
 8002532:	601a      	str	r2, [r3, #0]
 8002534:	f7ff fb24 	bl	8001b80 <HAL_GetTick>
 8002538:	6138      	str	r0, [r7, #16]
 800253a:	e00f      	b.n	800255c <HAL_RCC_OscConfig+0x278>
 800253c:	f7ff fb20 	bl	8001b80 <HAL_GetTick>
 8002540:	4602      	mov	r2, r0
 8002542:	693b      	ldr	r3, [r7, #16]
 8002544:	1ad3      	subs	r3, r2, r3
 8002546:	2b02      	cmp	r3, #2
 8002548:	d908      	bls.n	800255c <HAL_RCC_OscConfig+0x278>
 800254a:	2303      	movs	r3, #3
 800254c:	e140      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 800254e:	bf00      	nop
 8002550:	40021000 	.word	0x40021000
 8002554:	42420000 	.word	0x42420000
 8002558:	42420480 	.word	0x42420480
 800255c:	4b9e      	ldr	r3, [pc, #632]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800255e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002560:	f003 0302 	and.w	r3, r3, #2
 8002564:	2b00      	cmp	r3, #0
 8002566:	d1e9      	bne.n	800253c <HAL_RCC_OscConfig+0x258>
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	f003 0304 	and.w	r3, r3, #4
 8002570:	2b00      	cmp	r3, #0
 8002572:	f000 80a6 	beq.w	80026c2 <HAL_RCC_OscConfig+0x3de>
 8002576:	2300      	movs	r3, #0
 8002578:	75fb      	strb	r3, [r7, #23]
 800257a:	4b97      	ldr	r3, [pc, #604]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800257c:	69db      	ldr	r3, [r3, #28]
 800257e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002582:	2b00      	cmp	r3, #0
 8002584:	d10d      	bne.n	80025a2 <HAL_RCC_OscConfig+0x2be>
 8002586:	4b94      	ldr	r3, [pc, #592]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002588:	69db      	ldr	r3, [r3, #28]
 800258a:	4a93      	ldr	r2, [pc, #588]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800258c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002590:	61d3      	str	r3, [r2, #28]
 8002592:	4b91      	ldr	r3, [pc, #580]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002594:	69db      	ldr	r3, [r3, #28]
 8002596:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800259a:	60bb      	str	r3, [r7, #8]
 800259c:	68bb      	ldr	r3, [r7, #8]
 800259e:	2301      	movs	r3, #1
 80025a0:	75fb      	strb	r3, [r7, #23]
 80025a2:	4b8e      	ldr	r3, [pc, #568]	; (80027dc <HAL_RCC_OscConfig+0x4f8>)
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025aa:	2b00      	cmp	r3, #0
 80025ac:	d118      	bne.n	80025e0 <HAL_RCC_OscConfig+0x2fc>
 80025ae:	4b8b      	ldr	r3, [pc, #556]	; (80027dc <HAL_RCC_OscConfig+0x4f8>)
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	4a8a      	ldr	r2, [pc, #552]	; (80027dc <HAL_RCC_OscConfig+0x4f8>)
 80025b4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80025b8:	6013      	str	r3, [r2, #0]
 80025ba:	f7ff fae1 	bl	8001b80 <HAL_GetTick>
 80025be:	6138      	str	r0, [r7, #16]
 80025c0:	e008      	b.n	80025d4 <HAL_RCC_OscConfig+0x2f0>
 80025c2:	f7ff fadd 	bl	8001b80 <HAL_GetTick>
 80025c6:	4602      	mov	r2, r0
 80025c8:	693b      	ldr	r3, [r7, #16]
 80025ca:	1ad3      	subs	r3, r2, r3
 80025cc:	2b64      	cmp	r3, #100	; 0x64
 80025ce:	d901      	bls.n	80025d4 <HAL_RCC_OscConfig+0x2f0>
 80025d0:	2303      	movs	r3, #3
 80025d2:	e0fd      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 80025d4:	4b81      	ldr	r3, [pc, #516]	; (80027dc <HAL_RCC_OscConfig+0x4f8>)
 80025d6:	681b      	ldr	r3, [r3, #0]
 80025d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d0f0      	beq.n	80025c2 <HAL_RCC_OscConfig+0x2de>
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	68db      	ldr	r3, [r3, #12]
 80025e4:	2b01      	cmp	r3, #1
 80025e6:	d106      	bne.n	80025f6 <HAL_RCC_OscConfig+0x312>
 80025e8:	4b7b      	ldr	r3, [pc, #492]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 80025ea:	6a1b      	ldr	r3, [r3, #32]
 80025ec:	4a7a      	ldr	r2, [pc, #488]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 80025ee:	f043 0301 	orr.w	r3, r3, #1
 80025f2:	6213      	str	r3, [r2, #32]
 80025f4:	e02d      	b.n	8002652 <HAL_RCC_OscConfig+0x36e>
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	68db      	ldr	r3, [r3, #12]
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d10c      	bne.n	8002618 <HAL_RCC_OscConfig+0x334>
 80025fe:	4b76      	ldr	r3, [pc, #472]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002600:	6a1b      	ldr	r3, [r3, #32]
 8002602:	4a75      	ldr	r2, [pc, #468]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002604:	f023 0301 	bic.w	r3, r3, #1
 8002608:	6213      	str	r3, [r2, #32]
 800260a:	4b73      	ldr	r3, [pc, #460]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800260c:	6a1b      	ldr	r3, [r3, #32]
 800260e:	4a72      	ldr	r2, [pc, #456]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002610:	f023 0304 	bic.w	r3, r3, #4
 8002614:	6213      	str	r3, [r2, #32]
 8002616:	e01c      	b.n	8002652 <HAL_RCC_OscConfig+0x36e>
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	68db      	ldr	r3, [r3, #12]
 800261c:	2b05      	cmp	r3, #5
 800261e:	d10c      	bne.n	800263a <HAL_RCC_OscConfig+0x356>
 8002620:	4b6d      	ldr	r3, [pc, #436]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002622:	6a1b      	ldr	r3, [r3, #32]
 8002624:	4a6c      	ldr	r2, [pc, #432]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002626:	f043 0304 	orr.w	r3, r3, #4
 800262a:	6213      	str	r3, [r2, #32]
 800262c:	4b6a      	ldr	r3, [pc, #424]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800262e:	6a1b      	ldr	r3, [r3, #32]
 8002630:	4a69      	ldr	r2, [pc, #420]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002632:	f043 0301 	orr.w	r3, r3, #1
 8002636:	6213      	str	r3, [r2, #32]
 8002638:	e00b      	b.n	8002652 <HAL_RCC_OscConfig+0x36e>
 800263a:	4b67      	ldr	r3, [pc, #412]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800263c:	6a1b      	ldr	r3, [r3, #32]
 800263e:	4a66      	ldr	r2, [pc, #408]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002640:	f023 0301 	bic.w	r3, r3, #1
 8002644:	6213      	str	r3, [r2, #32]
 8002646:	4b64      	ldr	r3, [pc, #400]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002648:	6a1b      	ldr	r3, [r3, #32]
 800264a:	4a63      	ldr	r2, [pc, #396]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800264c:	f023 0304 	bic.w	r3, r3, #4
 8002650:	6213      	str	r3, [r2, #32]
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	68db      	ldr	r3, [r3, #12]
 8002656:	2b00      	cmp	r3, #0
 8002658:	d015      	beq.n	8002686 <HAL_RCC_OscConfig+0x3a2>
 800265a:	f7ff fa91 	bl	8001b80 <HAL_GetTick>
 800265e:	6138      	str	r0, [r7, #16]
 8002660:	e00a      	b.n	8002678 <HAL_RCC_OscConfig+0x394>
 8002662:	f7ff fa8d 	bl	8001b80 <HAL_GetTick>
 8002666:	4602      	mov	r2, r0
 8002668:	693b      	ldr	r3, [r7, #16]
 800266a:	1ad3      	subs	r3, r2, r3
 800266c:	f241 3288 	movw	r2, #5000	; 0x1388
 8002670:	4293      	cmp	r3, r2
 8002672:	d901      	bls.n	8002678 <HAL_RCC_OscConfig+0x394>
 8002674:	2303      	movs	r3, #3
 8002676:	e0ab      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 8002678:	4b57      	ldr	r3, [pc, #348]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800267a:	6a1b      	ldr	r3, [r3, #32]
 800267c:	f003 0302 	and.w	r3, r3, #2
 8002680:	2b00      	cmp	r3, #0
 8002682:	d0ee      	beq.n	8002662 <HAL_RCC_OscConfig+0x37e>
 8002684:	e014      	b.n	80026b0 <HAL_RCC_OscConfig+0x3cc>
 8002686:	f7ff fa7b 	bl	8001b80 <HAL_GetTick>
 800268a:	6138      	str	r0, [r7, #16]
 800268c:	e00a      	b.n	80026a4 <HAL_RCC_OscConfig+0x3c0>
 800268e:	f7ff fa77 	bl	8001b80 <HAL_GetTick>
 8002692:	4602      	mov	r2, r0
 8002694:	693b      	ldr	r3, [r7, #16]
 8002696:	1ad3      	subs	r3, r2, r3
 8002698:	f241 3288 	movw	r2, #5000	; 0x1388
 800269c:	4293      	cmp	r3, r2
 800269e:	d901      	bls.n	80026a4 <HAL_RCC_OscConfig+0x3c0>
 80026a0:	2303      	movs	r3, #3
 80026a2:	e095      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 80026a4:	4b4c      	ldr	r3, [pc, #304]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 80026a6:	6a1b      	ldr	r3, [r3, #32]
 80026a8:	f003 0302 	and.w	r3, r3, #2
 80026ac:	2b00      	cmp	r3, #0
 80026ae:	d1ee      	bne.n	800268e <HAL_RCC_OscConfig+0x3aa>
 80026b0:	7dfb      	ldrb	r3, [r7, #23]
 80026b2:	2b01      	cmp	r3, #1
 80026b4:	d105      	bne.n	80026c2 <HAL_RCC_OscConfig+0x3de>
 80026b6:	4b48      	ldr	r3, [pc, #288]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 80026b8:	69db      	ldr	r3, [r3, #28]
 80026ba:	4a47      	ldr	r2, [pc, #284]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 80026bc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80026c0:	61d3      	str	r3, [r2, #28]
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	69db      	ldr	r3, [r3, #28]
 80026c6:	2b00      	cmp	r3, #0
 80026c8:	f000 8081 	beq.w	80027ce <HAL_RCC_OscConfig+0x4ea>
 80026cc:	4b42      	ldr	r3, [pc, #264]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 80026ce:	685b      	ldr	r3, [r3, #4]
 80026d0:	f003 030c 	and.w	r3, r3, #12
 80026d4:	2b08      	cmp	r3, #8
 80026d6:	d061      	beq.n	800279c <HAL_RCC_OscConfig+0x4b8>
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	69db      	ldr	r3, [r3, #28]
 80026dc:	2b02      	cmp	r3, #2
 80026de:	d146      	bne.n	800276e <HAL_RCC_OscConfig+0x48a>
 80026e0:	4b3f      	ldr	r3, [pc, #252]	; (80027e0 <HAL_RCC_OscConfig+0x4fc>)
 80026e2:	2200      	movs	r2, #0
 80026e4:	601a      	str	r2, [r3, #0]
 80026e6:	f7ff fa4b 	bl	8001b80 <HAL_GetTick>
 80026ea:	6138      	str	r0, [r7, #16]
 80026ec:	e008      	b.n	8002700 <HAL_RCC_OscConfig+0x41c>
 80026ee:	f7ff fa47 	bl	8001b80 <HAL_GetTick>
 80026f2:	4602      	mov	r2, r0
 80026f4:	693b      	ldr	r3, [r7, #16]
 80026f6:	1ad3      	subs	r3, r2, r3
 80026f8:	2b02      	cmp	r3, #2
 80026fa:	d901      	bls.n	8002700 <HAL_RCC_OscConfig+0x41c>
 80026fc:	2303      	movs	r3, #3
 80026fe:	e067      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 8002700:	4b35      	ldr	r3, [pc, #212]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002702:	681b      	ldr	r3, [r3, #0]
 8002704:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002708:	2b00      	cmp	r3, #0
 800270a:	d1f0      	bne.n	80026ee <HAL_RCC_OscConfig+0x40a>
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	6a1b      	ldr	r3, [r3, #32]
 8002710:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002714:	d108      	bne.n	8002728 <HAL_RCC_OscConfig+0x444>
 8002716:	4b30      	ldr	r3, [pc, #192]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002718:	685b      	ldr	r3, [r3, #4]
 800271a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	689b      	ldr	r3, [r3, #8]
 8002722:	492d      	ldr	r1, [pc, #180]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002724:	4313      	orrs	r3, r2
 8002726:	604b      	str	r3, [r1, #4]
 8002728:	4b2b      	ldr	r3, [pc, #172]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800272a:	685b      	ldr	r3, [r3, #4]
 800272c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	6a19      	ldr	r1, [r3, #32]
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002738:	430b      	orrs	r3, r1
 800273a:	4927      	ldr	r1, [pc, #156]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 800273c:	4313      	orrs	r3, r2
 800273e:	604b      	str	r3, [r1, #4]
 8002740:	4b27      	ldr	r3, [pc, #156]	; (80027e0 <HAL_RCC_OscConfig+0x4fc>)
 8002742:	2201      	movs	r2, #1
 8002744:	601a      	str	r2, [r3, #0]
 8002746:	f7ff fa1b 	bl	8001b80 <HAL_GetTick>
 800274a:	6138      	str	r0, [r7, #16]
 800274c:	e008      	b.n	8002760 <HAL_RCC_OscConfig+0x47c>
 800274e:	f7ff fa17 	bl	8001b80 <HAL_GetTick>
 8002752:	4602      	mov	r2, r0
 8002754:	693b      	ldr	r3, [r7, #16]
 8002756:	1ad3      	subs	r3, r2, r3
 8002758:	2b02      	cmp	r3, #2
 800275a:	d901      	bls.n	8002760 <HAL_RCC_OscConfig+0x47c>
 800275c:	2303      	movs	r3, #3
 800275e:	e037      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 8002760:	4b1d      	ldr	r3, [pc, #116]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002768:	2b00      	cmp	r3, #0
 800276a:	d0f0      	beq.n	800274e <HAL_RCC_OscConfig+0x46a>
 800276c:	e02f      	b.n	80027ce <HAL_RCC_OscConfig+0x4ea>
 800276e:	4b1c      	ldr	r3, [pc, #112]	; (80027e0 <HAL_RCC_OscConfig+0x4fc>)
 8002770:	2200      	movs	r2, #0
 8002772:	601a      	str	r2, [r3, #0]
 8002774:	f7ff fa04 	bl	8001b80 <HAL_GetTick>
 8002778:	6138      	str	r0, [r7, #16]
 800277a:	e008      	b.n	800278e <HAL_RCC_OscConfig+0x4aa>
 800277c:	f7ff fa00 	bl	8001b80 <HAL_GetTick>
 8002780:	4602      	mov	r2, r0
 8002782:	693b      	ldr	r3, [r7, #16]
 8002784:	1ad3      	subs	r3, r2, r3
 8002786:	2b02      	cmp	r3, #2
 8002788:	d901      	bls.n	800278e <HAL_RCC_OscConfig+0x4aa>
 800278a:	2303      	movs	r3, #3
 800278c:	e020      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 800278e:	4b12      	ldr	r3, [pc, #72]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 8002790:	681b      	ldr	r3, [r3, #0]
 8002792:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002796:	2b00      	cmp	r3, #0
 8002798:	d1f0      	bne.n	800277c <HAL_RCC_OscConfig+0x498>
 800279a:	e018      	b.n	80027ce <HAL_RCC_OscConfig+0x4ea>
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	69db      	ldr	r3, [r3, #28]
 80027a0:	2b01      	cmp	r3, #1
 80027a2:	d101      	bne.n	80027a8 <HAL_RCC_OscConfig+0x4c4>
 80027a4:	2301      	movs	r3, #1
 80027a6:	e013      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 80027a8:	4b0b      	ldr	r3, [pc, #44]	; (80027d8 <HAL_RCC_OscConfig+0x4f4>)
 80027aa:	685b      	ldr	r3, [r3, #4]
 80027ac:	60fb      	str	r3, [r7, #12]
 80027ae:	68fb      	ldr	r3, [r7, #12]
 80027b0:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	6a1b      	ldr	r3, [r3, #32]
 80027b8:	429a      	cmp	r2, r3
 80027ba:	d106      	bne.n	80027ca <HAL_RCC_OscConfig+0x4e6>
 80027bc:	68fb      	ldr	r3, [r7, #12]
 80027be:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027c6:	429a      	cmp	r2, r3
 80027c8:	d001      	beq.n	80027ce <HAL_RCC_OscConfig+0x4ea>
 80027ca:	2301      	movs	r3, #1
 80027cc:	e000      	b.n	80027d0 <HAL_RCC_OscConfig+0x4ec>
 80027ce:	2300      	movs	r3, #0
 80027d0:	4618      	mov	r0, r3
 80027d2:	3718      	adds	r7, #24
 80027d4:	46bd      	mov	sp, r7
 80027d6:	bd80      	pop	{r7, pc}
 80027d8:	40021000 	.word	0x40021000
 80027dc:	40007000 	.word	0x40007000
 80027e0:	42420060 	.word	0x42420060

080027e4 <HAL_RCC_ClockConfig>:
 80027e4:	b580      	push	{r7, lr}
 80027e6:	b084      	sub	sp, #16
 80027e8:	af00      	add	r7, sp, #0
 80027ea:	6078      	str	r0, [r7, #4]
 80027ec:	6039      	str	r1, [r7, #0]
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	2b00      	cmp	r3, #0
 80027f2:	d101      	bne.n	80027f8 <HAL_RCC_ClockConfig+0x14>
 80027f4:	2301      	movs	r3, #1
 80027f6:	e0d0      	b.n	800299a <HAL_RCC_ClockConfig+0x1b6>
 80027f8:	4b6a      	ldr	r3, [pc, #424]	; (80029a4 <HAL_RCC_ClockConfig+0x1c0>)
 80027fa:	681b      	ldr	r3, [r3, #0]
 80027fc:	f003 0307 	and.w	r3, r3, #7
 8002800:	683a      	ldr	r2, [r7, #0]
 8002802:	429a      	cmp	r2, r3
 8002804:	d910      	bls.n	8002828 <HAL_RCC_ClockConfig+0x44>
 8002806:	4b67      	ldr	r3, [pc, #412]	; (80029a4 <HAL_RCC_ClockConfig+0x1c0>)
 8002808:	681b      	ldr	r3, [r3, #0]
 800280a:	f023 0207 	bic.w	r2, r3, #7
 800280e:	4965      	ldr	r1, [pc, #404]	; (80029a4 <HAL_RCC_ClockConfig+0x1c0>)
 8002810:	683b      	ldr	r3, [r7, #0]
 8002812:	4313      	orrs	r3, r2
 8002814:	600b      	str	r3, [r1, #0]
 8002816:	4b63      	ldr	r3, [pc, #396]	; (80029a4 <HAL_RCC_ClockConfig+0x1c0>)
 8002818:	681b      	ldr	r3, [r3, #0]
 800281a:	f003 0307 	and.w	r3, r3, #7
 800281e:	683a      	ldr	r2, [r7, #0]
 8002820:	429a      	cmp	r2, r3
 8002822:	d001      	beq.n	8002828 <HAL_RCC_ClockConfig+0x44>
 8002824:	2301      	movs	r3, #1
 8002826:	e0b8      	b.n	800299a <HAL_RCC_ClockConfig+0x1b6>
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	f003 0302 	and.w	r3, r3, #2
 8002830:	2b00      	cmp	r3, #0
 8002832:	d020      	beq.n	8002876 <HAL_RCC_ClockConfig+0x92>
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	f003 0304 	and.w	r3, r3, #4
 800283c:	2b00      	cmp	r3, #0
 800283e:	d005      	beq.n	800284c <HAL_RCC_ClockConfig+0x68>
 8002840:	4b59      	ldr	r3, [pc, #356]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 8002842:	685b      	ldr	r3, [r3, #4]
 8002844:	4a58      	ldr	r2, [pc, #352]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 8002846:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 800284a:	6053      	str	r3, [r2, #4]
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	f003 0308 	and.w	r3, r3, #8
 8002854:	2b00      	cmp	r3, #0
 8002856:	d005      	beq.n	8002864 <HAL_RCC_ClockConfig+0x80>
 8002858:	4b53      	ldr	r3, [pc, #332]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 800285a:	685b      	ldr	r3, [r3, #4]
 800285c:	4a52      	ldr	r2, [pc, #328]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 800285e:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002862:	6053      	str	r3, [r2, #4]
 8002864:	4b50      	ldr	r3, [pc, #320]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 8002866:	685b      	ldr	r3, [r3, #4]
 8002868:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800286c:	687b      	ldr	r3, [r7, #4]
 800286e:	689b      	ldr	r3, [r3, #8]
 8002870:	494d      	ldr	r1, [pc, #308]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 8002872:	4313      	orrs	r3, r2
 8002874:	604b      	str	r3, [r1, #4]
 8002876:	687b      	ldr	r3, [r7, #4]
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	f003 0301 	and.w	r3, r3, #1
 800287e:	2b00      	cmp	r3, #0
 8002880:	d040      	beq.n	8002904 <HAL_RCC_ClockConfig+0x120>
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	685b      	ldr	r3, [r3, #4]
 8002886:	2b01      	cmp	r3, #1
 8002888:	d107      	bne.n	800289a <HAL_RCC_ClockConfig+0xb6>
 800288a:	4b47      	ldr	r3, [pc, #284]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002892:	2b00      	cmp	r3, #0
 8002894:	d115      	bne.n	80028c2 <HAL_RCC_ClockConfig+0xde>
 8002896:	2301      	movs	r3, #1
 8002898:	e07f      	b.n	800299a <HAL_RCC_ClockConfig+0x1b6>
 800289a:	687b      	ldr	r3, [r7, #4]
 800289c:	685b      	ldr	r3, [r3, #4]
 800289e:	2b02      	cmp	r3, #2
 80028a0:	d107      	bne.n	80028b2 <HAL_RCC_ClockConfig+0xce>
 80028a2:	4b41      	ldr	r3, [pc, #260]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 80028a4:	681b      	ldr	r3, [r3, #0]
 80028a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80028aa:	2b00      	cmp	r3, #0
 80028ac:	d109      	bne.n	80028c2 <HAL_RCC_ClockConfig+0xde>
 80028ae:	2301      	movs	r3, #1
 80028b0:	e073      	b.n	800299a <HAL_RCC_ClockConfig+0x1b6>
 80028b2:	4b3d      	ldr	r3, [pc, #244]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	f003 0302 	and.w	r3, r3, #2
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d101      	bne.n	80028c2 <HAL_RCC_ClockConfig+0xde>
 80028be:	2301      	movs	r3, #1
 80028c0:	e06b      	b.n	800299a <HAL_RCC_ClockConfig+0x1b6>
 80028c2:	4b39      	ldr	r3, [pc, #228]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 80028c4:	685b      	ldr	r3, [r3, #4]
 80028c6:	f023 0203 	bic.w	r2, r3, #3
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	685b      	ldr	r3, [r3, #4]
 80028ce:	4936      	ldr	r1, [pc, #216]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 80028d0:	4313      	orrs	r3, r2
 80028d2:	604b      	str	r3, [r1, #4]
 80028d4:	f7ff f954 	bl	8001b80 <HAL_GetTick>
 80028d8:	60f8      	str	r0, [r7, #12]
 80028da:	e00a      	b.n	80028f2 <HAL_RCC_ClockConfig+0x10e>
 80028dc:	f7ff f950 	bl	8001b80 <HAL_GetTick>
 80028e0:	4602      	mov	r2, r0
 80028e2:	68fb      	ldr	r3, [r7, #12]
 80028e4:	1ad3      	subs	r3, r2, r3
 80028e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80028ea:	4293      	cmp	r3, r2
 80028ec:	d901      	bls.n	80028f2 <HAL_RCC_ClockConfig+0x10e>
 80028ee:	2303      	movs	r3, #3
 80028f0:	e053      	b.n	800299a <HAL_RCC_ClockConfig+0x1b6>
 80028f2:	4b2d      	ldr	r3, [pc, #180]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 80028f4:	685b      	ldr	r3, [r3, #4]
 80028f6:	f003 020c 	and.w	r2, r3, #12
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	685b      	ldr	r3, [r3, #4]
 80028fe:	009b      	lsls	r3, r3, #2
 8002900:	429a      	cmp	r2, r3
 8002902:	d1eb      	bne.n	80028dc <HAL_RCC_ClockConfig+0xf8>
 8002904:	4b27      	ldr	r3, [pc, #156]	; (80029a4 <HAL_RCC_ClockConfig+0x1c0>)
 8002906:	681b      	ldr	r3, [r3, #0]
 8002908:	f003 0307 	and.w	r3, r3, #7
 800290c:	683a      	ldr	r2, [r7, #0]
 800290e:	429a      	cmp	r2, r3
 8002910:	d210      	bcs.n	8002934 <HAL_RCC_ClockConfig+0x150>
 8002912:	4b24      	ldr	r3, [pc, #144]	; (80029a4 <HAL_RCC_ClockConfig+0x1c0>)
 8002914:	681b      	ldr	r3, [r3, #0]
 8002916:	f023 0207 	bic.w	r2, r3, #7
 800291a:	4922      	ldr	r1, [pc, #136]	; (80029a4 <HAL_RCC_ClockConfig+0x1c0>)
 800291c:	683b      	ldr	r3, [r7, #0]
 800291e:	4313      	orrs	r3, r2
 8002920:	600b      	str	r3, [r1, #0]
 8002922:	4b20      	ldr	r3, [pc, #128]	; (80029a4 <HAL_RCC_ClockConfig+0x1c0>)
 8002924:	681b      	ldr	r3, [r3, #0]
 8002926:	f003 0307 	and.w	r3, r3, #7
 800292a:	683a      	ldr	r2, [r7, #0]
 800292c:	429a      	cmp	r2, r3
 800292e:	d001      	beq.n	8002934 <HAL_RCC_ClockConfig+0x150>
 8002930:	2301      	movs	r3, #1
 8002932:	e032      	b.n	800299a <HAL_RCC_ClockConfig+0x1b6>
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	f003 0304 	and.w	r3, r3, #4
 800293c:	2b00      	cmp	r3, #0
 800293e:	d008      	beq.n	8002952 <HAL_RCC_ClockConfig+0x16e>
 8002940:	4b19      	ldr	r3, [pc, #100]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 8002942:	685b      	ldr	r3, [r3, #4]
 8002944:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	68db      	ldr	r3, [r3, #12]
 800294c:	4916      	ldr	r1, [pc, #88]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 800294e:	4313      	orrs	r3, r2
 8002950:	604b      	str	r3, [r1, #4]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	f003 0308 	and.w	r3, r3, #8
 800295a:	2b00      	cmp	r3, #0
 800295c:	d009      	beq.n	8002972 <HAL_RCC_ClockConfig+0x18e>
 800295e:	4b12      	ldr	r3, [pc, #72]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 8002960:	685b      	ldr	r3, [r3, #4]
 8002962:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	691b      	ldr	r3, [r3, #16]
 800296a:	00db      	lsls	r3, r3, #3
 800296c:	490e      	ldr	r1, [pc, #56]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 800296e:	4313      	orrs	r3, r2
 8002970:	604b      	str	r3, [r1, #4]
 8002972:	f000 f821 	bl	80029b8 <HAL_RCC_GetSysClockFreq>
 8002976:	4602      	mov	r2, r0
 8002978:	4b0b      	ldr	r3, [pc, #44]	; (80029a8 <HAL_RCC_ClockConfig+0x1c4>)
 800297a:	685b      	ldr	r3, [r3, #4]
 800297c:	091b      	lsrs	r3, r3, #4
 800297e:	f003 030f 	and.w	r3, r3, #15
 8002982:	490a      	ldr	r1, [pc, #40]	; (80029ac <HAL_RCC_ClockConfig+0x1c8>)
 8002984:	5ccb      	ldrb	r3, [r1, r3]
 8002986:	fa22 f303 	lsr.w	r3, r2, r3
 800298a:	4a09      	ldr	r2, [pc, #36]	; (80029b0 <HAL_RCC_ClockConfig+0x1cc>)
 800298c:	6013      	str	r3, [r2, #0]
 800298e:	4b09      	ldr	r3, [pc, #36]	; (80029b4 <HAL_RCC_ClockConfig+0x1d0>)
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	4618      	mov	r0, r3
 8002994:	f7ff f8b2 	bl	8001afc <HAL_InitTick>
 8002998:	2300      	movs	r3, #0
 800299a:	4618      	mov	r0, r3
 800299c:	3710      	adds	r7, #16
 800299e:	46bd      	mov	sp, r7
 80029a0:	bd80      	pop	{r7, pc}
 80029a2:	bf00      	nop
 80029a4:	40022000 	.word	0x40022000
 80029a8:	40021000 	.word	0x40021000
 80029ac:	08004f48 	.word	0x08004f48
 80029b0:	20000060 	.word	0x20000060
 80029b4:	20000064 	.word	0x20000064

080029b8 <HAL_RCC_GetSysClockFreq>:
 80029b8:	b480      	push	{r7}
 80029ba:	b087      	sub	sp, #28
 80029bc:	af00      	add	r7, sp, #0
 80029be:	2300      	movs	r3, #0
 80029c0:	60fb      	str	r3, [r7, #12]
 80029c2:	2300      	movs	r3, #0
 80029c4:	60bb      	str	r3, [r7, #8]
 80029c6:	2300      	movs	r3, #0
 80029c8:	617b      	str	r3, [r7, #20]
 80029ca:	2300      	movs	r3, #0
 80029cc:	607b      	str	r3, [r7, #4]
 80029ce:	2300      	movs	r3, #0
 80029d0:	613b      	str	r3, [r7, #16]
 80029d2:	4b1e      	ldr	r3, [pc, #120]	; (8002a4c <HAL_RCC_GetSysClockFreq+0x94>)
 80029d4:	685b      	ldr	r3, [r3, #4]
 80029d6:	60fb      	str	r3, [r7, #12]
 80029d8:	68fb      	ldr	r3, [r7, #12]
 80029da:	f003 030c 	and.w	r3, r3, #12
 80029de:	2b04      	cmp	r3, #4
 80029e0:	d002      	beq.n	80029e8 <HAL_RCC_GetSysClockFreq+0x30>
 80029e2:	2b08      	cmp	r3, #8
 80029e4:	d003      	beq.n	80029ee <HAL_RCC_GetSysClockFreq+0x36>
 80029e6:	e027      	b.n	8002a38 <HAL_RCC_GetSysClockFreq+0x80>
 80029e8:	4b19      	ldr	r3, [pc, #100]	; (8002a50 <HAL_RCC_GetSysClockFreq+0x98>)
 80029ea:	613b      	str	r3, [r7, #16]
 80029ec:	e027      	b.n	8002a3e <HAL_RCC_GetSysClockFreq+0x86>
 80029ee:	68fb      	ldr	r3, [r7, #12]
 80029f0:	0c9b      	lsrs	r3, r3, #18
 80029f2:	f003 030f 	and.w	r3, r3, #15
 80029f6:	4a17      	ldr	r2, [pc, #92]	; (8002a54 <HAL_RCC_GetSysClockFreq+0x9c>)
 80029f8:	5cd3      	ldrb	r3, [r2, r3]
 80029fa:	607b      	str	r3, [r7, #4]
 80029fc:	68fb      	ldr	r3, [r7, #12]
 80029fe:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002a02:	2b00      	cmp	r3, #0
 8002a04:	d010      	beq.n	8002a28 <HAL_RCC_GetSysClockFreq+0x70>
 8002a06:	4b11      	ldr	r3, [pc, #68]	; (8002a4c <HAL_RCC_GetSysClockFreq+0x94>)
 8002a08:	685b      	ldr	r3, [r3, #4]
 8002a0a:	0c5b      	lsrs	r3, r3, #17
 8002a0c:	f003 0301 	and.w	r3, r3, #1
 8002a10:	4a11      	ldr	r2, [pc, #68]	; (8002a58 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002a12:	5cd3      	ldrb	r3, [r2, r3]
 8002a14:	60bb      	str	r3, [r7, #8]
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	4a0d      	ldr	r2, [pc, #52]	; (8002a50 <HAL_RCC_GetSysClockFreq+0x98>)
 8002a1a:	fb02 f203 	mul.w	r2, r2, r3
 8002a1e:	68bb      	ldr	r3, [r7, #8]
 8002a20:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a24:	617b      	str	r3, [r7, #20]
 8002a26:	e004      	b.n	8002a32 <HAL_RCC_GetSysClockFreq+0x7a>
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	4a0c      	ldr	r2, [pc, #48]	; (8002a5c <HAL_RCC_GetSysClockFreq+0xa4>)
 8002a2c:	fb02 f303 	mul.w	r3, r2, r3
 8002a30:	617b      	str	r3, [r7, #20]
 8002a32:	697b      	ldr	r3, [r7, #20]
 8002a34:	613b      	str	r3, [r7, #16]
 8002a36:	e002      	b.n	8002a3e <HAL_RCC_GetSysClockFreq+0x86>
 8002a38:	4b05      	ldr	r3, [pc, #20]	; (8002a50 <HAL_RCC_GetSysClockFreq+0x98>)
 8002a3a:	613b      	str	r3, [r7, #16]
 8002a3c:	bf00      	nop
 8002a3e:	693b      	ldr	r3, [r7, #16]
 8002a40:	4618      	mov	r0, r3
 8002a42:	371c      	adds	r7, #28
 8002a44:	46bd      	mov	sp, r7
 8002a46:	bc80      	pop	{r7}
 8002a48:	4770      	bx	lr
 8002a4a:	bf00      	nop
 8002a4c:	40021000 	.word	0x40021000
 8002a50:	007a1200 	.word	0x007a1200
 8002a54:	08004f60 	.word	0x08004f60
 8002a58:	08004f70 	.word	0x08004f70
 8002a5c:	003d0900 	.word	0x003d0900

08002a60 <HAL_RCC_GetHCLKFreq>:
 8002a60:	b480      	push	{r7}
 8002a62:	af00      	add	r7, sp, #0
 8002a64:	4b02      	ldr	r3, [pc, #8]	; (8002a70 <HAL_RCC_GetHCLKFreq+0x10>)
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	4618      	mov	r0, r3
 8002a6a:	46bd      	mov	sp, r7
 8002a6c:	bc80      	pop	{r7}
 8002a6e:	4770      	bx	lr
 8002a70:	20000060 	.word	0x20000060

08002a74 <HAL_RCC_GetPCLK1Freq>:
 8002a74:	b580      	push	{r7, lr}
 8002a76:	af00      	add	r7, sp, #0
 8002a78:	f7ff fff2 	bl	8002a60 <HAL_RCC_GetHCLKFreq>
 8002a7c:	4602      	mov	r2, r0
 8002a7e:	4b05      	ldr	r3, [pc, #20]	; (8002a94 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002a80:	685b      	ldr	r3, [r3, #4]
 8002a82:	0a1b      	lsrs	r3, r3, #8
 8002a84:	f003 0307 	and.w	r3, r3, #7
 8002a88:	4903      	ldr	r1, [pc, #12]	; (8002a98 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002a8a:	5ccb      	ldrb	r3, [r1, r3]
 8002a8c:	fa22 f303 	lsr.w	r3, r2, r3
 8002a90:	4618      	mov	r0, r3
 8002a92:	bd80      	pop	{r7, pc}
 8002a94:	40021000 	.word	0x40021000
 8002a98:	08004f58 	.word	0x08004f58

08002a9c <HAL_RCC_GetPCLK2Freq>:
 8002a9c:	b580      	push	{r7, lr}
 8002a9e:	af00      	add	r7, sp, #0
 8002aa0:	f7ff ffde 	bl	8002a60 <HAL_RCC_GetHCLKFreq>
 8002aa4:	4602      	mov	r2, r0
 8002aa6:	4b05      	ldr	r3, [pc, #20]	; (8002abc <HAL_RCC_GetPCLK2Freq+0x20>)
 8002aa8:	685b      	ldr	r3, [r3, #4]
 8002aaa:	0adb      	lsrs	r3, r3, #11
 8002aac:	f003 0307 	and.w	r3, r3, #7
 8002ab0:	4903      	ldr	r1, [pc, #12]	; (8002ac0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002ab2:	5ccb      	ldrb	r3, [r1, r3]
 8002ab4:	fa22 f303 	lsr.w	r3, r2, r3
 8002ab8:	4618      	mov	r0, r3
 8002aba:	bd80      	pop	{r7, pc}
 8002abc:	40021000 	.word	0x40021000
 8002ac0:	08004f58 	.word	0x08004f58

08002ac4 <RCC_Delay>:
 8002ac4:	b480      	push	{r7}
 8002ac6:	b085      	sub	sp, #20
 8002ac8:	af00      	add	r7, sp, #0
 8002aca:	6078      	str	r0, [r7, #4]
 8002acc:	4b0a      	ldr	r3, [pc, #40]	; (8002af8 <RCC_Delay+0x34>)
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	4a0a      	ldr	r2, [pc, #40]	; (8002afc <RCC_Delay+0x38>)
 8002ad2:	fba2 2303 	umull	r2, r3, r2, r3
 8002ad6:	0a5b      	lsrs	r3, r3, #9
 8002ad8:	687a      	ldr	r2, [r7, #4]
 8002ada:	fb02 f303 	mul.w	r3, r2, r3
 8002ade:	60fb      	str	r3, [r7, #12]
 8002ae0:	bf00      	nop
 8002ae2:	68fb      	ldr	r3, [r7, #12]
 8002ae4:	1e5a      	subs	r2, r3, #1
 8002ae6:	60fa      	str	r2, [r7, #12]
 8002ae8:	2b00      	cmp	r3, #0
 8002aea:	d1f9      	bne.n	8002ae0 <RCC_Delay+0x1c>
 8002aec:	bf00      	nop
 8002aee:	bf00      	nop
 8002af0:	3714      	adds	r7, #20
 8002af2:	46bd      	mov	sp, r7
 8002af4:	bc80      	pop	{r7}
 8002af6:	4770      	bx	lr
 8002af8:	20000060 	.word	0x20000060
 8002afc:	10624dd3 	.word	0x10624dd3

08002b00 <HAL_TIM_Base_Init>:
 8002b00:	b580      	push	{r7, lr}
 8002b02:	b082      	sub	sp, #8
 8002b04:	af00      	add	r7, sp, #0
 8002b06:	6078      	str	r0, [r7, #4]
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d101      	bne.n	8002b12 <HAL_TIM_Base_Init+0x12>
 8002b0e:	2301      	movs	r3, #1
 8002b10:	e041      	b.n	8002b96 <HAL_TIM_Base_Init+0x96>
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002b18:	b2db      	uxtb	r3, r3
 8002b1a:	2b00      	cmp	r3, #0
 8002b1c:	d106      	bne.n	8002b2c <HAL_TIM_Base_Init+0x2c>
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	2200      	movs	r2, #0
 8002b22:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b26:	6878      	ldr	r0, [r7, #4]
 8002b28:	f7fe fe66 	bl	80017f8 <HAL_TIM_Base_MspInit>
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	2202      	movs	r2, #2
 8002b30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	681a      	ldr	r2, [r3, #0]
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	3304      	adds	r3, #4
 8002b3c:	4619      	mov	r1, r3
 8002b3e:	4610      	mov	r0, r2
 8002b40:	f000 fc30 	bl	80033a4 <TIM_Base_SetConfig>
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	2201      	movs	r2, #1
 8002b48:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	2201      	movs	r2, #1
 8002b50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	2201      	movs	r2, #1
 8002b58:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	2201      	movs	r2, #1
 8002b60:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	2201      	movs	r2, #1
 8002b68:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	2201      	movs	r2, #1
 8002b70:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	2201      	movs	r2, #1
 8002b78:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	2201      	movs	r2, #1
 8002b80:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	2201      	movs	r2, #1
 8002b88:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	2201      	movs	r2, #1
 8002b90:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b94:	2300      	movs	r3, #0
 8002b96:	4618      	mov	r0, r3
 8002b98:	3708      	adds	r7, #8
 8002b9a:	46bd      	mov	sp, r7
 8002b9c:	bd80      	pop	{r7, pc}
	...

08002ba0 <HAL_TIM_Base_Start_IT>:
 8002ba0:	b480      	push	{r7}
 8002ba2:	b085      	sub	sp, #20
 8002ba4:	af00      	add	r7, sp, #0
 8002ba6:	6078      	str	r0, [r7, #4]
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002bae:	b2db      	uxtb	r3, r3
 8002bb0:	2b01      	cmp	r3, #1
 8002bb2:	d001      	beq.n	8002bb8 <HAL_TIM_Base_Start_IT+0x18>
 8002bb4:	2301      	movs	r3, #1
 8002bb6:	e03a      	b.n	8002c2e <HAL_TIM_Base_Start_IT+0x8e>
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	2202      	movs	r2, #2
 8002bbc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	68da      	ldr	r2, [r3, #12]
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	681b      	ldr	r3, [r3, #0]
 8002bca:	f042 0201 	orr.w	r2, r2, #1
 8002bce:	60da      	str	r2, [r3, #12]
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	4a18      	ldr	r2, [pc, #96]	; (8002c38 <HAL_TIM_Base_Start_IT+0x98>)
 8002bd6:	4293      	cmp	r3, r2
 8002bd8:	d00e      	beq.n	8002bf8 <HAL_TIM_Base_Start_IT+0x58>
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002be2:	d009      	beq.n	8002bf8 <HAL_TIM_Base_Start_IT+0x58>
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	4a14      	ldr	r2, [pc, #80]	; (8002c3c <HAL_TIM_Base_Start_IT+0x9c>)
 8002bea:	4293      	cmp	r3, r2
 8002bec:	d004      	beq.n	8002bf8 <HAL_TIM_Base_Start_IT+0x58>
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	4a13      	ldr	r2, [pc, #76]	; (8002c40 <HAL_TIM_Base_Start_IT+0xa0>)
 8002bf4:	4293      	cmp	r3, r2
 8002bf6:	d111      	bne.n	8002c1c <HAL_TIM_Base_Start_IT+0x7c>
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	689b      	ldr	r3, [r3, #8]
 8002bfe:	f003 0307 	and.w	r3, r3, #7
 8002c02:	60fb      	str	r3, [r7, #12]
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	2b06      	cmp	r3, #6
 8002c08:	d010      	beq.n	8002c2c <HAL_TIM_Base_Start_IT+0x8c>
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	681a      	ldr	r2, [r3, #0]
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	f042 0201 	orr.w	r2, r2, #1
 8002c18:	601a      	str	r2, [r3, #0]
 8002c1a:	e007      	b.n	8002c2c <HAL_TIM_Base_Start_IT+0x8c>
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	681a      	ldr	r2, [r3, #0]
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	681b      	ldr	r3, [r3, #0]
 8002c26:	f042 0201 	orr.w	r2, r2, #1
 8002c2a:	601a      	str	r2, [r3, #0]
 8002c2c:	2300      	movs	r3, #0
 8002c2e:	4618      	mov	r0, r3
 8002c30:	3714      	adds	r7, #20
 8002c32:	46bd      	mov	sp, r7
 8002c34:	bc80      	pop	{r7}
 8002c36:	4770      	bx	lr
 8002c38:	40012c00 	.word	0x40012c00
 8002c3c:	40000400 	.word	0x40000400
 8002c40:	40000800 	.word	0x40000800

08002c44 <HAL_TIM_PWM_Init>:
 8002c44:	b580      	push	{r7, lr}
 8002c46:	b082      	sub	sp, #8
 8002c48:	af00      	add	r7, sp, #0
 8002c4a:	6078      	str	r0, [r7, #4]
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d101      	bne.n	8002c56 <HAL_TIM_PWM_Init+0x12>
 8002c52:	2301      	movs	r3, #1
 8002c54:	e041      	b.n	8002cda <HAL_TIM_PWM_Init+0x96>
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002c5c:	b2db      	uxtb	r3, r3
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	d106      	bne.n	8002c70 <HAL_TIM_PWM_Init+0x2c>
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	2200      	movs	r2, #0
 8002c66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c6a:	6878      	ldr	r0, [r7, #4]
 8002c6c:	f000 f839 	bl	8002ce2 <HAL_TIM_PWM_MspInit>
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	2202      	movs	r2, #2
 8002c74:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	681a      	ldr	r2, [r3, #0]
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	3304      	adds	r3, #4
 8002c80:	4619      	mov	r1, r3
 8002c82:	4610      	mov	r0, r2
 8002c84:	f000 fb8e 	bl	80033a4 <TIM_Base_SetConfig>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	2201      	movs	r2, #1
 8002c8c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	2201      	movs	r2, #1
 8002c94:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	2201      	movs	r2, #1
 8002c9c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	2201      	movs	r2, #1
 8002ca4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	2201      	movs	r2, #1
 8002cac:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	2201      	movs	r2, #1
 8002cb4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	2201      	movs	r2, #1
 8002cbc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	2201      	movs	r2, #1
 8002cc4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	2201      	movs	r2, #1
 8002ccc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	2201      	movs	r2, #1
 8002cd4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002cd8:	2300      	movs	r3, #0
 8002cda:	4618      	mov	r0, r3
 8002cdc:	3708      	adds	r7, #8
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	bd80      	pop	{r7, pc}

08002ce2 <HAL_TIM_PWM_MspInit>:
 8002ce2:	b480      	push	{r7}
 8002ce4:	b083      	sub	sp, #12
 8002ce6:	af00      	add	r7, sp, #0
 8002ce8:	6078      	str	r0, [r7, #4]
 8002cea:	bf00      	nop
 8002cec:	370c      	adds	r7, #12
 8002cee:	46bd      	mov	sp, r7
 8002cf0:	bc80      	pop	{r7}
 8002cf2:	4770      	bx	lr

08002cf4 <HAL_TIM_PWM_Start>:
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	b084      	sub	sp, #16
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	6078      	str	r0, [r7, #4]
 8002cfc:	6039      	str	r1, [r7, #0]
 8002cfe:	683b      	ldr	r3, [r7, #0]
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d109      	bne.n	8002d18 <HAL_TIM_PWM_Start+0x24>
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002d0a:	b2db      	uxtb	r3, r3
 8002d0c:	2b01      	cmp	r3, #1
 8002d0e:	bf14      	ite	ne
 8002d10:	2301      	movne	r3, #1
 8002d12:	2300      	moveq	r3, #0
 8002d14:	b2db      	uxtb	r3, r3
 8002d16:	e022      	b.n	8002d5e <HAL_TIM_PWM_Start+0x6a>
 8002d18:	683b      	ldr	r3, [r7, #0]
 8002d1a:	2b04      	cmp	r3, #4
 8002d1c:	d109      	bne.n	8002d32 <HAL_TIM_PWM_Start+0x3e>
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8002d24:	b2db      	uxtb	r3, r3
 8002d26:	2b01      	cmp	r3, #1
 8002d28:	bf14      	ite	ne
 8002d2a:	2301      	movne	r3, #1
 8002d2c:	2300      	moveq	r3, #0
 8002d2e:	b2db      	uxtb	r3, r3
 8002d30:	e015      	b.n	8002d5e <HAL_TIM_PWM_Start+0x6a>
 8002d32:	683b      	ldr	r3, [r7, #0]
 8002d34:	2b08      	cmp	r3, #8
 8002d36:	d109      	bne.n	8002d4c <HAL_TIM_PWM_Start+0x58>
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002d3e:	b2db      	uxtb	r3, r3
 8002d40:	2b01      	cmp	r3, #1
 8002d42:	bf14      	ite	ne
 8002d44:	2301      	movne	r3, #1
 8002d46:	2300      	moveq	r3, #0
 8002d48:	b2db      	uxtb	r3, r3
 8002d4a:	e008      	b.n	8002d5e <HAL_TIM_PWM_Start+0x6a>
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002d52:	b2db      	uxtb	r3, r3
 8002d54:	2b01      	cmp	r3, #1
 8002d56:	bf14      	ite	ne
 8002d58:	2301      	movne	r3, #1
 8002d5a:	2300      	moveq	r3, #0
 8002d5c:	b2db      	uxtb	r3, r3
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d001      	beq.n	8002d66 <HAL_TIM_PWM_Start+0x72>
 8002d62:	2301      	movs	r3, #1
 8002d64:	e05e      	b.n	8002e24 <HAL_TIM_PWM_Start+0x130>
 8002d66:	683b      	ldr	r3, [r7, #0]
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	d104      	bne.n	8002d76 <HAL_TIM_PWM_Start+0x82>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	2202      	movs	r2, #2
 8002d70:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002d74:	e013      	b.n	8002d9e <HAL_TIM_PWM_Start+0xaa>
 8002d76:	683b      	ldr	r3, [r7, #0]
 8002d78:	2b04      	cmp	r3, #4
 8002d7a:	d104      	bne.n	8002d86 <HAL_TIM_PWM_Start+0x92>
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	2202      	movs	r2, #2
 8002d80:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002d84:	e00b      	b.n	8002d9e <HAL_TIM_PWM_Start+0xaa>
 8002d86:	683b      	ldr	r3, [r7, #0]
 8002d88:	2b08      	cmp	r3, #8
 8002d8a:	d104      	bne.n	8002d96 <HAL_TIM_PWM_Start+0xa2>
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	2202      	movs	r2, #2
 8002d90:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002d94:	e003      	b.n	8002d9e <HAL_TIM_PWM_Start+0xaa>
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	2202      	movs	r2, #2
 8002d9a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	2201      	movs	r2, #1
 8002da4:	6839      	ldr	r1, [r7, #0]
 8002da6:	4618      	mov	r0, r3
 8002da8:	f000 fd7c 	bl	80038a4 <TIM_CCxChannelCmd>
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	4a1e      	ldr	r2, [pc, #120]	; (8002e2c <HAL_TIM_PWM_Start+0x138>)
 8002db2:	4293      	cmp	r3, r2
 8002db4:	d107      	bne.n	8002dc6 <HAL_TIM_PWM_Start+0xd2>
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002dc4:	645a      	str	r2, [r3, #68]	; 0x44
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	4a18      	ldr	r2, [pc, #96]	; (8002e2c <HAL_TIM_PWM_Start+0x138>)
 8002dcc:	4293      	cmp	r3, r2
 8002dce:	d00e      	beq.n	8002dee <HAL_TIM_PWM_Start+0xfa>
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002dd8:	d009      	beq.n	8002dee <HAL_TIM_PWM_Start+0xfa>
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	4a14      	ldr	r2, [pc, #80]	; (8002e30 <HAL_TIM_PWM_Start+0x13c>)
 8002de0:	4293      	cmp	r3, r2
 8002de2:	d004      	beq.n	8002dee <HAL_TIM_PWM_Start+0xfa>
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	4a12      	ldr	r2, [pc, #72]	; (8002e34 <HAL_TIM_PWM_Start+0x140>)
 8002dea:	4293      	cmp	r3, r2
 8002dec:	d111      	bne.n	8002e12 <HAL_TIM_PWM_Start+0x11e>
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	689b      	ldr	r3, [r3, #8]
 8002df4:	f003 0307 	and.w	r3, r3, #7
 8002df8:	60fb      	str	r3, [r7, #12]
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	2b06      	cmp	r3, #6
 8002dfe:	d010      	beq.n	8002e22 <HAL_TIM_PWM_Start+0x12e>
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	681a      	ldr	r2, [r3, #0]
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	681b      	ldr	r3, [r3, #0]
 8002e0a:	f042 0201 	orr.w	r2, r2, #1
 8002e0e:	601a      	str	r2, [r3, #0]
 8002e10:	e007      	b.n	8002e22 <HAL_TIM_PWM_Start+0x12e>
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	681a      	ldr	r2, [r3, #0]
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	f042 0201 	orr.w	r2, r2, #1
 8002e20:	601a      	str	r2, [r3, #0]
 8002e22:	2300      	movs	r3, #0
 8002e24:	4618      	mov	r0, r3
 8002e26:	3710      	adds	r7, #16
 8002e28:	46bd      	mov	sp, r7
 8002e2a:	bd80      	pop	{r7, pc}
 8002e2c:	40012c00 	.word	0x40012c00
 8002e30:	40000400 	.word	0x40000400
 8002e34:	40000800 	.word	0x40000800

08002e38 <HAL_TIM_IRQHandler>:
 8002e38:	b580      	push	{r7, lr}
 8002e3a:	b082      	sub	sp, #8
 8002e3c:	af00      	add	r7, sp, #0
 8002e3e:	6078      	str	r0, [r7, #4]
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	691b      	ldr	r3, [r3, #16]
 8002e46:	f003 0302 	and.w	r3, r3, #2
 8002e4a:	2b02      	cmp	r3, #2
 8002e4c:	d122      	bne.n	8002e94 <HAL_TIM_IRQHandler+0x5c>
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	68db      	ldr	r3, [r3, #12]
 8002e54:	f003 0302 	and.w	r3, r3, #2
 8002e58:	2b02      	cmp	r3, #2
 8002e5a:	d11b      	bne.n	8002e94 <HAL_TIM_IRQHandler+0x5c>
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	f06f 0202 	mvn.w	r2, #2
 8002e64:	611a      	str	r2, [r3, #16]
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	2201      	movs	r2, #1
 8002e6a:	771a      	strb	r2, [r3, #28]
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	699b      	ldr	r3, [r3, #24]
 8002e72:	f003 0303 	and.w	r3, r3, #3
 8002e76:	2b00      	cmp	r3, #0
 8002e78:	d003      	beq.n	8002e82 <HAL_TIM_IRQHandler+0x4a>
 8002e7a:	6878      	ldr	r0, [r7, #4]
 8002e7c:	f000 fa76 	bl	800336c <HAL_TIM_IC_CaptureCallback>
 8002e80:	e005      	b.n	8002e8e <HAL_TIM_IRQHandler+0x56>
 8002e82:	6878      	ldr	r0, [r7, #4]
 8002e84:	f000 fa69 	bl	800335a <HAL_TIM_OC_DelayElapsedCallback>
 8002e88:	6878      	ldr	r0, [r7, #4]
 8002e8a:	f000 fa78 	bl	800337e <HAL_TIM_PWM_PulseFinishedCallback>
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	2200      	movs	r2, #0
 8002e92:	771a      	strb	r2, [r3, #28]
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	691b      	ldr	r3, [r3, #16]
 8002e9a:	f003 0304 	and.w	r3, r3, #4
 8002e9e:	2b04      	cmp	r3, #4
 8002ea0:	d122      	bne.n	8002ee8 <HAL_TIM_IRQHandler+0xb0>
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	68db      	ldr	r3, [r3, #12]
 8002ea8:	f003 0304 	and.w	r3, r3, #4
 8002eac:	2b04      	cmp	r3, #4
 8002eae:	d11b      	bne.n	8002ee8 <HAL_TIM_IRQHandler+0xb0>
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	f06f 0204 	mvn.w	r2, #4
 8002eb8:	611a      	str	r2, [r3, #16]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	2202      	movs	r2, #2
 8002ebe:	771a      	strb	r2, [r3, #28]
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	699b      	ldr	r3, [r3, #24]
 8002ec6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d003      	beq.n	8002ed6 <HAL_TIM_IRQHandler+0x9e>
 8002ece:	6878      	ldr	r0, [r7, #4]
 8002ed0:	f000 fa4c 	bl	800336c <HAL_TIM_IC_CaptureCallback>
 8002ed4:	e005      	b.n	8002ee2 <HAL_TIM_IRQHandler+0xaa>
 8002ed6:	6878      	ldr	r0, [r7, #4]
 8002ed8:	f000 fa3f 	bl	800335a <HAL_TIM_OC_DelayElapsedCallback>
 8002edc:	6878      	ldr	r0, [r7, #4]
 8002ede:	f000 fa4e 	bl	800337e <HAL_TIM_PWM_PulseFinishedCallback>
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	2200      	movs	r2, #0
 8002ee6:	771a      	strb	r2, [r3, #28]
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	681b      	ldr	r3, [r3, #0]
 8002eec:	691b      	ldr	r3, [r3, #16]
 8002eee:	f003 0308 	and.w	r3, r3, #8
 8002ef2:	2b08      	cmp	r3, #8
 8002ef4:	d122      	bne.n	8002f3c <HAL_TIM_IRQHandler+0x104>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	68db      	ldr	r3, [r3, #12]
 8002efc:	f003 0308 	and.w	r3, r3, #8
 8002f00:	2b08      	cmp	r3, #8
 8002f02:	d11b      	bne.n	8002f3c <HAL_TIM_IRQHandler+0x104>
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	f06f 0208 	mvn.w	r2, #8
 8002f0c:	611a      	str	r2, [r3, #16]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	2204      	movs	r2, #4
 8002f12:	771a      	strb	r2, [r3, #28]
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	69db      	ldr	r3, [r3, #28]
 8002f1a:	f003 0303 	and.w	r3, r3, #3
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	d003      	beq.n	8002f2a <HAL_TIM_IRQHandler+0xf2>
 8002f22:	6878      	ldr	r0, [r7, #4]
 8002f24:	f000 fa22 	bl	800336c <HAL_TIM_IC_CaptureCallback>
 8002f28:	e005      	b.n	8002f36 <HAL_TIM_IRQHandler+0xfe>
 8002f2a:	6878      	ldr	r0, [r7, #4]
 8002f2c:	f000 fa15 	bl	800335a <HAL_TIM_OC_DelayElapsedCallback>
 8002f30:	6878      	ldr	r0, [r7, #4]
 8002f32:	f000 fa24 	bl	800337e <HAL_TIM_PWM_PulseFinishedCallback>
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	2200      	movs	r2, #0
 8002f3a:	771a      	strb	r2, [r3, #28]
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	691b      	ldr	r3, [r3, #16]
 8002f42:	f003 0310 	and.w	r3, r3, #16
 8002f46:	2b10      	cmp	r3, #16
 8002f48:	d122      	bne.n	8002f90 <HAL_TIM_IRQHandler+0x158>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	68db      	ldr	r3, [r3, #12]
 8002f50:	f003 0310 	and.w	r3, r3, #16
 8002f54:	2b10      	cmp	r3, #16
 8002f56:	d11b      	bne.n	8002f90 <HAL_TIM_IRQHandler+0x158>
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	f06f 0210 	mvn.w	r2, #16
 8002f60:	611a      	str	r2, [r3, #16]
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	2208      	movs	r2, #8
 8002f66:	771a      	strb	r2, [r3, #28]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	69db      	ldr	r3, [r3, #28]
 8002f6e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002f72:	2b00      	cmp	r3, #0
 8002f74:	d003      	beq.n	8002f7e <HAL_TIM_IRQHandler+0x146>
 8002f76:	6878      	ldr	r0, [r7, #4]
 8002f78:	f000 f9f8 	bl	800336c <HAL_TIM_IC_CaptureCallback>
 8002f7c:	e005      	b.n	8002f8a <HAL_TIM_IRQHandler+0x152>
 8002f7e:	6878      	ldr	r0, [r7, #4]
 8002f80:	f000 f9eb 	bl	800335a <HAL_TIM_OC_DelayElapsedCallback>
 8002f84:	6878      	ldr	r0, [r7, #4]
 8002f86:	f000 f9fa 	bl	800337e <HAL_TIM_PWM_PulseFinishedCallback>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	2200      	movs	r2, #0
 8002f8e:	771a      	strb	r2, [r3, #28]
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	691b      	ldr	r3, [r3, #16]
 8002f96:	f003 0301 	and.w	r3, r3, #1
 8002f9a:	2b01      	cmp	r3, #1
 8002f9c:	d10e      	bne.n	8002fbc <HAL_TIM_IRQHandler+0x184>
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	68db      	ldr	r3, [r3, #12]
 8002fa4:	f003 0301 	and.w	r3, r3, #1
 8002fa8:	2b01      	cmp	r3, #1
 8002faa:	d107      	bne.n	8002fbc <HAL_TIM_IRQHandler+0x184>
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	f06f 0201 	mvn.w	r2, #1
 8002fb4:	611a      	str	r2, [r3, #16]
 8002fb6:	6878      	ldr	r0, [r7, #4]
 8002fb8:	f7fe f8c4 	bl	8001144 <HAL_TIM_PeriodElapsedCallback>
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	681b      	ldr	r3, [r3, #0]
 8002fc0:	691b      	ldr	r3, [r3, #16]
 8002fc2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002fc6:	2b80      	cmp	r3, #128	; 0x80
 8002fc8:	d10e      	bne.n	8002fe8 <HAL_TIM_IRQHandler+0x1b0>
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	68db      	ldr	r3, [r3, #12]
 8002fd0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002fd4:	2b80      	cmp	r3, #128	; 0x80
 8002fd6:	d107      	bne.n	8002fe8 <HAL_TIM_IRQHandler+0x1b0>
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002fe0:	611a      	str	r2, [r3, #16]
 8002fe2:	6878      	ldr	r0, [r7, #4]
 8002fe4:	f000 fce9 	bl	80039ba <HAL_TIMEx_BreakCallback>
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	681b      	ldr	r3, [r3, #0]
 8002fec:	691b      	ldr	r3, [r3, #16]
 8002fee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ff2:	2b40      	cmp	r3, #64	; 0x40
 8002ff4:	d10e      	bne.n	8003014 <HAL_TIM_IRQHandler+0x1dc>
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	68db      	ldr	r3, [r3, #12]
 8002ffc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003000:	2b40      	cmp	r3, #64	; 0x40
 8003002:	d107      	bne.n	8003014 <HAL_TIM_IRQHandler+0x1dc>
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800300c:	611a      	str	r2, [r3, #16]
 800300e:	6878      	ldr	r0, [r7, #4]
 8003010:	f000 f9be 	bl	8003390 <HAL_TIM_TriggerCallback>
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	691b      	ldr	r3, [r3, #16]
 800301a:	f003 0320 	and.w	r3, r3, #32
 800301e:	2b20      	cmp	r3, #32
 8003020:	d10e      	bne.n	8003040 <HAL_TIM_IRQHandler+0x208>
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	68db      	ldr	r3, [r3, #12]
 8003028:	f003 0320 	and.w	r3, r3, #32
 800302c:	2b20      	cmp	r3, #32
 800302e:	d107      	bne.n	8003040 <HAL_TIM_IRQHandler+0x208>
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	f06f 0220 	mvn.w	r2, #32
 8003038:	611a      	str	r2, [r3, #16]
 800303a:	6878      	ldr	r0, [r7, #4]
 800303c:	f000 fcb4 	bl	80039a8 <HAL_TIMEx_CommutCallback>
 8003040:	bf00      	nop
 8003042:	3708      	adds	r7, #8
 8003044:	46bd      	mov	sp, r7
 8003046:	bd80      	pop	{r7, pc}

08003048 <HAL_TIM_PWM_ConfigChannel>:
 8003048:	b580      	push	{r7, lr}
 800304a:	b086      	sub	sp, #24
 800304c:	af00      	add	r7, sp, #0
 800304e:	60f8      	str	r0, [r7, #12]
 8003050:	60b9      	str	r1, [r7, #8]
 8003052:	607a      	str	r2, [r7, #4]
 8003054:	2300      	movs	r3, #0
 8003056:	75fb      	strb	r3, [r7, #23]
 8003058:	68fb      	ldr	r3, [r7, #12]
 800305a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800305e:	2b01      	cmp	r3, #1
 8003060:	d101      	bne.n	8003066 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8003062:	2302      	movs	r3, #2
 8003064:	e0ae      	b.n	80031c4 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8003066:	68fb      	ldr	r3, [r7, #12]
 8003068:	2201      	movs	r2, #1
 800306a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	2b0c      	cmp	r3, #12
 8003072:	f200 809f 	bhi.w	80031b4 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003076:	a201      	add	r2, pc, #4	; (adr r2, 800307c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003078:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800307c:	080030b1 	.word	0x080030b1
 8003080:	080031b5 	.word	0x080031b5
 8003084:	080031b5 	.word	0x080031b5
 8003088:	080031b5 	.word	0x080031b5
 800308c:	080030f1 	.word	0x080030f1
 8003090:	080031b5 	.word	0x080031b5
 8003094:	080031b5 	.word	0x080031b5
 8003098:	080031b5 	.word	0x080031b5
 800309c:	08003133 	.word	0x08003133
 80030a0:	080031b5 	.word	0x080031b5
 80030a4:	080031b5 	.word	0x080031b5
 80030a8:	080031b5 	.word	0x080031b5
 80030ac:	08003173 	.word	0x08003173
 80030b0:	68fb      	ldr	r3, [r7, #12]
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	68b9      	ldr	r1, [r7, #8]
 80030b6:	4618      	mov	r0, r3
 80030b8:	f000 f9d6 	bl	8003468 <TIM_OC1_SetConfig>
 80030bc:	68fb      	ldr	r3, [r7, #12]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	699a      	ldr	r2, [r3, #24]
 80030c2:	68fb      	ldr	r3, [r7, #12]
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	f042 0208 	orr.w	r2, r2, #8
 80030ca:	619a      	str	r2, [r3, #24]
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	681b      	ldr	r3, [r3, #0]
 80030d0:	699a      	ldr	r2, [r3, #24]
 80030d2:	68fb      	ldr	r3, [r7, #12]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	f022 0204 	bic.w	r2, r2, #4
 80030da:	619a      	str	r2, [r3, #24]
 80030dc:	68fb      	ldr	r3, [r7, #12]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	6999      	ldr	r1, [r3, #24]
 80030e2:	68bb      	ldr	r3, [r7, #8]
 80030e4:	691a      	ldr	r2, [r3, #16]
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	430a      	orrs	r2, r1
 80030ec:	619a      	str	r2, [r3, #24]
 80030ee:	e064      	b.n	80031ba <HAL_TIM_PWM_ConfigChannel+0x172>
 80030f0:	68fb      	ldr	r3, [r7, #12]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	68b9      	ldr	r1, [r7, #8]
 80030f6:	4618      	mov	r0, r3
 80030f8:	f000 fa1c 	bl	8003534 <TIM_OC2_SetConfig>
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	699a      	ldr	r2, [r3, #24]
 8003102:	68fb      	ldr	r3, [r7, #12]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800310a:	619a      	str	r2, [r3, #24]
 800310c:	68fb      	ldr	r3, [r7, #12]
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	699a      	ldr	r2, [r3, #24]
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800311a:	619a      	str	r2, [r3, #24]
 800311c:	68fb      	ldr	r3, [r7, #12]
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	6999      	ldr	r1, [r3, #24]
 8003122:	68bb      	ldr	r3, [r7, #8]
 8003124:	691b      	ldr	r3, [r3, #16]
 8003126:	021a      	lsls	r2, r3, #8
 8003128:	68fb      	ldr	r3, [r7, #12]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	430a      	orrs	r2, r1
 800312e:	619a      	str	r2, [r3, #24]
 8003130:	e043      	b.n	80031ba <HAL_TIM_PWM_ConfigChannel+0x172>
 8003132:	68fb      	ldr	r3, [r7, #12]
 8003134:	681b      	ldr	r3, [r3, #0]
 8003136:	68b9      	ldr	r1, [r7, #8]
 8003138:	4618      	mov	r0, r3
 800313a:	f000 fa65 	bl	8003608 <TIM_OC3_SetConfig>
 800313e:	68fb      	ldr	r3, [r7, #12]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	69da      	ldr	r2, [r3, #28]
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	f042 0208 	orr.w	r2, r2, #8
 800314c:	61da      	str	r2, [r3, #28]
 800314e:	68fb      	ldr	r3, [r7, #12]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	69da      	ldr	r2, [r3, #28]
 8003154:	68fb      	ldr	r3, [r7, #12]
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	f022 0204 	bic.w	r2, r2, #4
 800315c:	61da      	str	r2, [r3, #28]
 800315e:	68fb      	ldr	r3, [r7, #12]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	69d9      	ldr	r1, [r3, #28]
 8003164:	68bb      	ldr	r3, [r7, #8]
 8003166:	691a      	ldr	r2, [r3, #16]
 8003168:	68fb      	ldr	r3, [r7, #12]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	430a      	orrs	r2, r1
 800316e:	61da      	str	r2, [r3, #28]
 8003170:	e023      	b.n	80031ba <HAL_TIM_PWM_ConfigChannel+0x172>
 8003172:	68fb      	ldr	r3, [r7, #12]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	68b9      	ldr	r1, [r7, #8]
 8003178:	4618      	mov	r0, r3
 800317a:	f000 faaf 	bl	80036dc <TIM_OC4_SetConfig>
 800317e:	68fb      	ldr	r3, [r7, #12]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	69da      	ldr	r2, [r3, #28]
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800318c:	61da      	str	r2, [r3, #28]
 800318e:	68fb      	ldr	r3, [r7, #12]
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	69da      	ldr	r2, [r3, #28]
 8003194:	68fb      	ldr	r3, [r7, #12]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800319c:	61da      	str	r2, [r3, #28]
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	69d9      	ldr	r1, [r3, #28]
 80031a4:	68bb      	ldr	r3, [r7, #8]
 80031a6:	691b      	ldr	r3, [r3, #16]
 80031a8:	021a      	lsls	r2, r3, #8
 80031aa:	68fb      	ldr	r3, [r7, #12]
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	430a      	orrs	r2, r1
 80031b0:	61da      	str	r2, [r3, #28]
 80031b2:	e002      	b.n	80031ba <HAL_TIM_PWM_ConfigChannel+0x172>
 80031b4:	2301      	movs	r3, #1
 80031b6:	75fb      	strb	r3, [r7, #23]
 80031b8:	bf00      	nop
 80031ba:	68fb      	ldr	r3, [r7, #12]
 80031bc:	2200      	movs	r2, #0
 80031be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031c2:	7dfb      	ldrb	r3, [r7, #23]
 80031c4:	4618      	mov	r0, r3
 80031c6:	3718      	adds	r7, #24
 80031c8:	46bd      	mov	sp, r7
 80031ca:	bd80      	pop	{r7, pc}

080031cc <HAL_TIM_ConfigClockSource>:
 80031cc:	b580      	push	{r7, lr}
 80031ce:	b084      	sub	sp, #16
 80031d0:	af00      	add	r7, sp, #0
 80031d2:	6078      	str	r0, [r7, #4]
 80031d4:	6039      	str	r1, [r7, #0]
 80031d6:	2300      	movs	r3, #0
 80031d8:	73fb      	strb	r3, [r7, #15]
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80031e0:	2b01      	cmp	r3, #1
 80031e2:	d101      	bne.n	80031e8 <HAL_TIM_ConfigClockSource+0x1c>
 80031e4:	2302      	movs	r3, #2
 80031e6:	e0b4      	b.n	8003352 <HAL_TIM_ConfigClockSource+0x186>
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2201      	movs	r2, #1
 80031ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	2202      	movs	r2, #2
 80031f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	689b      	ldr	r3, [r3, #8]
 80031fe:	60bb      	str	r3, [r7, #8]
 8003200:	68bb      	ldr	r3, [r7, #8]
 8003202:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003206:	60bb      	str	r3, [r7, #8]
 8003208:	68bb      	ldr	r3, [r7, #8]
 800320a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800320e:	60bb      	str	r3, [r7, #8]
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	68ba      	ldr	r2, [r7, #8]
 8003216:	609a      	str	r2, [r3, #8]
 8003218:	683b      	ldr	r3, [r7, #0]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003220:	d03e      	beq.n	80032a0 <HAL_TIM_ConfigClockSource+0xd4>
 8003222:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003226:	f200 8087 	bhi.w	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 800322a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800322e:	f000 8086 	beq.w	800333e <HAL_TIM_ConfigClockSource+0x172>
 8003232:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003236:	d87f      	bhi.n	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 8003238:	2b70      	cmp	r3, #112	; 0x70
 800323a:	d01a      	beq.n	8003272 <HAL_TIM_ConfigClockSource+0xa6>
 800323c:	2b70      	cmp	r3, #112	; 0x70
 800323e:	d87b      	bhi.n	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 8003240:	2b60      	cmp	r3, #96	; 0x60
 8003242:	d050      	beq.n	80032e6 <HAL_TIM_ConfigClockSource+0x11a>
 8003244:	2b60      	cmp	r3, #96	; 0x60
 8003246:	d877      	bhi.n	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 8003248:	2b50      	cmp	r3, #80	; 0x50
 800324a:	d03c      	beq.n	80032c6 <HAL_TIM_ConfigClockSource+0xfa>
 800324c:	2b50      	cmp	r3, #80	; 0x50
 800324e:	d873      	bhi.n	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 8003250:	2b40      	cmp	r3, #64	; 0x40
 8003252:	d058      	beq.n	8003306 <HAL_TIM_ConfigClockSource+0x13a>
 8003254:	2b40      	cmp	r3, #64	; 0x40
 8003256:	d86f      	bhi.n	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 8003258:	2b30      	cmp	r3, #48	; 0x30
 800325a:	d064      	beq.n	8003326 <HAL_TIM_ConfigClockSource+0x15a>
 800325c:	2b30      	cmp	r3, #48	; 0x30
 800325e:	d86b      	bhi.n	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 8003260:	2b20      	cmp	r3, #32
 8003262:	d060      	beq.n	8003326 <HAL_TIM_ConfigClockSource+0x15a>
 8003264:	2b20      	cmp	r3, #32
 8003266:	d867      	bhi.n	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 8003268:	2b00      	cmp	r3, #0
 800326a:	d05c      	beq.n	8003326 <HAL_TIM_ConfigClockSource+0x15a>
 800326c:	2b10      	cmp	r3, #16
 800326e:	d05a      	beq.n	8003326 <HAL_TIM_ConfigClockSource+0x15a>
 8003270:	e062      	b.n	8003338 <HAL_TIM_ConfigClockSource+0x16c>
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	6818      	ldr	r0, [r3, #0]
 8003276:	683b      	ldr	r3, [r7, #0]
 8003278:	6899      	ldr	r1, [r3, #8]
 800327a:	683b      	ldr	r3, [r7, #0]
 800327c:	685a      	ldr	r2, [r3, #4]
 800327e:	683b      	ldr	r3, [r7, #0]
 8003280:	68db      	ldr	r3, [r3, #12]
 8003282:	f000 faf0 	bl	8003866 <TIM_ETR_SetConfig>
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	689b      	ldr	r3, [r3, #8]
 800328c:	60bb      	str	r3, [r7, #8]
 800328e:	68bb      	ldr	r3, [r7, #8]
 8003290:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003294:	60bb      	str	r3, [r7, #8]
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	68ba      	ldr	r2, [r7, #8]
 800329c:	609a      	str	r2, [r3, #8]
 800329e:	e04f      	b.n	8003340 <HAL_TIM_ConfigClockSource+0x174>
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	6818      	ldr	r0, [r3, #0]
 80032a4:	683b      	ldr	r3, [r7, #0]
 80032a6:	6899      	ldr	r1, [r3, #8]
 80032a8:	683b      	ldr	r3, [r7, #0]
 80032aa:	685a      	ldr	r2, [r3, #4]
 80032ac:	683b      	ldr	r3, [r7, #0]
 80032ae:	68db      	ldr	r3, [r3, #12]
 80032b0:	f000 fad9 	bl	8003866 <TIM_ETR_SetConfig>
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	689a      	ldr	r2, [r3, #8]
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	681b      	ldr	r3, [r3, #0]
 80032be:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80032c2:	609a      	str	r2, [r3, #8]
 80032c4:	e03c      	b.n	8003340 <HAL_TIM_ConfigClockSource+0x174>
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	6818      	ldr	r0, [r3, #0]
 80032ca:	683b      	ldr	r3, [r7, #0]
 80032cc:	6859      	ldr	r1, [r3, #4]
 80032ce:	683b      	ldr	r3, [r7, #0]
 80032d0:	68db      	ldr	r3, [r3, #12]
 80032d2:	461a      	mov	r2, r3
 80032d4:	f000 fa50 	bl	8003778 <TIM_TI1_ConfigInputStage>
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	2150      	movs	r1, #80	; 0x50
 80032de:	4618      	mov	r0, r3
 80032e0:	f000 faa7 	bl	8003832 <TIM_ITRx_SetConfig>
 80032e4:	e02c      	b.n	8003340 <HAL_TIM_ConfigClockSource+0x174>
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	6818      	ldr	r0, [r3, #0]
 80032ea:	683b      	ldr	r3, [r7, #0]
 80032ec:	6859      	ldr	r1, [r3, #4]
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	68db      	ldr	r3, [r3, #12]
 80032f2:	461a      	mov	r2, r3
 80032f4:	f000 fa6e 	bl	80037d4 <TIM_TI2_ConfigInputStage>
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	2160      	movs	r1, #96	; 0x60
 80032fe:	4618      	mov	r0, r3
 8003300:	f000 fa97 	bl	8003832 <TIM_ITRx_SetConfig>
 8003304:	e01c      	b.n	8003340 <HAL_TIM_ConfigClockSource+0x174>
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	6818      	ldr	r0, [r3, #0]
 800330a:	683b      	ldr	r3, [r7, #0]
 800330c:	6859      	ldr	r1, [r3, #4]
 800330e:	683b      	ldr	r3, [r7, #0]
 8003310:	68db      	ldr	r3, [r3, #12]
 8003312:	461a      	mov	r2, r3
 8003314:	f000 fa30 	bl	8003778 <TIM_TI1_ConfigInputStage>
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	2140      	movs	r1, #64	; 0x40
 800331e:	4618      	mov	r0, r3
 8003320:	f000 fa87 	bl	8003832 <TIM_ITRx_SetConfig>
 8003324:	e00c      	b.n	8003340 <HAL_TIM_ConfigClockSource+0x174>
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	681a      	ldr	r2, [r3, #0]
 800332a:	683b      	ldr	r3, [r7, #0]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	4619      	mov	r1, r3
 8003330:	4610      	mov	r0, r2
 8003332:	f000 fa7e 	bl	8003832 <TIM_ITRx_SetConfig>
 8003336:	e003      	b.n	8003340 <HAL_TIM_ConfigClockSource+0x174>
 8003338:	2301      	movs	r3, #1
 800333a:	73fb      	strb	r3, [r7, #15]
 800333c:	e000      	b.n	8003340 <HAL_TIM_ConfigClockSource+0x174>
 800333e:	bf00      	nop
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	2201      	movs	r2, #1
 8003344:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	2200      	movs	r2, #0
 800334c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003350:	7bfb      	ldrb	r3, [r7, #15]
 8003352:	4618      	mov	r0, r3
 8003354:	3710      	adds	r7, #16
 8003356:	46bd      	mov	sp, r7
 8003358:	bd80      	pop	{r7, pc}

0800335a <HAL_TIM_OC_DelayElapsedCallback>:
 800335a:	b480      	push	{r7}
 800335c:	b083      	sub	sp, #12
 800335e:	af00      	add	r7, sp, #0
 8003360:	6078      	str	r0, [r7, #4]
 8003362:	bf00      	nop
 8003364:	370c      	adds	r7, #12
 8003366:	46bd      	mov	sp, r7
 8003368:	bc80      	pop	{r7}
 800336a:	4770      	bx	lr

0800336c <HAL_TIM_IC_CaptureCallback>:
 800336c:	b480      	push	{r7}
 800336e:	b083      	sub	sp, #12
 8003370:	af00      	add	r7, sp, #0
 8003372:	6078      	str	r0, [r7, #4]
 8003374:	bf00      	nop
 8003376:	370c      	adds	r7, #12
 8003378:	46bd      	mov	sp, r7
 800337a:	bc80      	pop	{r7}
 800337c:	4770      	bx	lr

0800337e <HAL_TIM_PWM_PulseFinishedCallback>:
 800337e:	b480      	push	{r7}
 8003380:	b083      	sub	sp, #12
 8003382:	af00      	add	r7, sp, #0
 8003384:	6078      	str	r0, [r7, #4]
 8003386:	bf00      	nop
 8003388:	370c      	adds	r7, #12
 800338a:	46bd      	mov	sp, r7
 800338c:	bc80      	pop	{r7}
 800338e:	4770      	bx	lr

08003390 <HAL_TIM_TriggerCallback>:
 8003390:	b480      	push	{r7}
 8003392:	b083      	sub	sp, #12
 8003394:	af00      	add	r7, sp, #0
 8003396:	6078      	str	r0, [r7, #4]
 8003398:	bf00      	nop
 800339a:	370c      	adds	r7, #12
 800339c:	46bd      	mov	sp, r7
 800339e:	bc80      	pop	{r7}
 80033a0:	4770      	bx	lr
	...

080033a4 <TIM_Base_SetConfig>:
 80033a4:	b480      	push	{r7}
 80033a6:	b085      	sub	sp, #20
 80033a8:	af00      	add	r7, sp, #0
 80033aa:	6078      	str	r0, [r7, #4]
 80033ac:	6039      	str	r1, [r7, #0]
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	60fb      	str	r3, [r7, #12]
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	4a29      	ldr	r2, [pc, #164]	; (800345c <TIM_Base_SetConfig+0xb8>)
 80033b8:	4293      	cmp	r3, r2
 80033ba:	d00b      	beq.n	80033d4 <TIM_Base_SetConfig+0x30>
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80033c2:	d007      	beq.n	80033d4 <TIM_Base_SetConfig+0x30>
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	4a26      	ldr	r2, [pc, #152]	; (8003460 <TIM_Base_SetConfig+0xbc>)
 80033c8:	4293      	cmp	r3, r2
 80033ca:	d003      	beq.n	80033d4 <TIM_Base_SetConfig+0x30>
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	4a25      	ldr	r2, [pc, #148]	; (8003464 <TIM_Base_SetConfig+0xc0>)
 80033d0:	4293      	cmp	r3, r2
 80033d2:	d108      	bne.n	80033e6 <TIM_Base_SetConfig+0x42>
 80033d4:	68fb      	ldr	r3, [r7, #12]
 80033d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80033da:	60fb      	str	r3, [r7, #12]
 80033dc:	683b      	ldr	r3, [r7, #0]
 80033de:	685b      	ldr	r3, [r3, #4]
 80033e0:	68fa      	ldr	r2, [r7, #12]
 80033e2:	4313      	orrs	r3, r2
 80033e4:	60fb      	str	r3, [r7, #12]
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	4a1c      	ldr	r2, [pc, #112]	; (800345c <TIM_Base_SetConfig+0xb8>)
 80033ea:	4293      	cmp	r3, r2
 80033ec:	d00b      	beq.n	8003406 <TIM_Base_SetConfig+0x62>
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80033f4:	d007      	beq.n	8003406 <TIM_Base_SetConfig+0x62>
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	4a19      	ldr	r2, [pc, #100]	; (8003460 <TIM_Base_SetConfig+0xbc>)
 80033fa:	4293      	cmp	r3, r2
 80033fc:	d003      	beq.n	8003406 <TIM_Base_SetConfig+0x62>
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	4a18      	ldr	r2, [pc, #96]	; (8003464 <TIM_Base_SetConfig+0xc0>)
 8003402:	4293      	cmp	r3, r2
 8003404:	d108      	bne.n	8003418 <TIM_Base_SetConfig+0x74>
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800340c:	60fb      	str	r3, [r7, #12]
 800340e:	683b      	ldr	r3, [r7, #0]
 8003410:	68db      	ldr	r3, [r3, #12]
 8003412:	68fa      	ldr	r2, [r7, #12]
 8003414:	4313      	orrs	r3, r2
 8003416:	60fb      	str	r3, [r7, #12]
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800341e:	683b      	ldr	r3, [r7, #0]
 8003420:	695b      	ldr	r3, [r3, #20]
 8003422:	4313      	orrs	r3, r2
 8003424:	60fb      	str	r3, [r7, #12]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	68fa      	ldr	r2, [r7, #12]
 800342a:	601a      	str	r2, [r3, #0]
 800342c:	683b      	ldr	r3, [r7, #0]
 800342e:	689a      	ldr	r2, [r3, #8]
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	62da      	str	r2, [r3, #44]	; 0x2c
 8003434:	683b      	ldr	r3, [r7, #0]
 8003436:	681a      	ldr	r2, [r3, #0]
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	629a      	str	r2, [r3, #40]	; 0x28
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	4a07      	ldr	r2, [pc, #28]	; (800345c <TIM_Base_SetConfig+0xb8>)
 8003440:	4293      	cmp	r3, r2
 8003442:	d103      	bne.n	800344c <TIM_Base_SetConfig+0xa8>
 8003444:	683b      	ldr	r3, [r7, #0]
 8003446:	691a      	ldr	r2, [r3, #16]
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	631a      	str	r2, [r3, #48]	; 0x30
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	2201      	movs	r2, #1
 8003450:	615a      	str	r2, [r3, #20]
 8003452:	bf00      	nop
 8003454:	3714      	adds	r7, #20
 8003456:	46bd      	mov	sp, r7
 8003458:	bc80      	pop	{r7}
 800345a:	4770      	bx	lr
 800345c:	40012c00 	.word	0x40012c00
 8003460:	40000400 	.word	0x40000400
 8003464:	40000800 	.word	0x40000800

08003468 <TIM_OC1_SetConfig>:
 8003468:	b480      	push	{r7}
 800346a:	b087      	sub	sp, #28
 800346c:	af00      	add	r7, sp, #0
 800346e:	6078      	str	r0, [r7, #4]
 8003470:	6039      	str	r1, [r7, #0]
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	6a1b      	ldr	r3, [r3, #32]
 8003476:	617b      	str	r3, [r7, #20]
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	6a1b      	ldr	r3, [r3, #32]
 800347c:	f023 0201 	bic.w	r2, r3, #1
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	621a      	str	r2, [r3, #32]
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	685b      	ldr	r3, [r3, #4]
 8003488:	613b      	str	r3, [r7, #16]
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	699b      	ldr	r3, [r3, #24]
 800348e:	60fb      	str	r3, [r7, #12]
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003496:	60fb      	str	r3, [r7, #12]
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	f023 0303 	bic.w	r3, r3, #3
 800349e:	60fb      	str	r3, [r7, #12]
 80034a0:	683b      	ldr	r3, [r7, #0]
 80034a2:	681b      	ldr	r3, [r3, #0]
 80034a4:	68fa      	ldr	r2, [r7, #12]
 80034a6:	4313      	orrs	r3, r2
 80034a8:	60fb      	str	r3, [r7, #12]
 80034aa:	697b      	ldr	r3, [r7, #20]
 80034ac:	f023 0302 	bic.w	r3, r3, #2
 80034b0:	617b      	str	r3, [r7, #20]
 80034b2:	683b      	ldr	r3, [r7, #0]
 80034b4:	689b      	ldr	r3, [r3, #8]
 80034b6:	697a      	ldr	r2, [r7, #20]
 80034b8:	4313      	orrs	r3, r2
 80034ba:	617b      	str	r3, [r7, #20]
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	4a1c      	ldr	r2, [pc, #112]	; (8003530 <TIM_OC1_SetConfig+0xc8>)
 80034c0:	4293      	cmp	r3, r2
 80034c2:	d10c      	bne.n	80034de <TIM_OC1_SetConfig+0x76>
 80034c4:	697b      	ldr	r3, [r7, #20]
 80034c6:	f023 0308 	bic.w	r3, r3, #8
 80034ca:	617b      	str	r3, [r7, #20]
 80034cc:	683b      	ldr	r3, [r7, #0]
 80034ce:	68db      	ldr	r3, [r3, #12]
 80034d0:	697a      	ldr	r2, [r7, #20]
 80034d2:	4313      	orrs	r3, r2
 80034d4:	617b      	str	r3, [r7, #20]
 80034d6:	697b      	ldr	r3, [r7, #20]
 80034d8:	f023 0304 	bic.w	r3, r3, #4
 80034dc:	617b      	str	r3, [r7, #20]
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	4a13      	ldr	r2, [pc, #76]	; (8003530 <TIM_OC1_SetConfig+0xc8>)
 80034e2:	4293      	cmp	r3, r2
 80034e4:	d111      	bne.n	800350a <TIM_OC1_SetConfig+0xa2>
 80034e6:	693b      	ldr	r3, [r7, #16]
 80034e8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80034ec:	613b      	str	r3, [r7, #16]
 80034ee:	693b      	ldr	r3, [r7, #16]
 80034f0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80034f4:	613b      	str	r3, [r7, #16]
 80034f6:	683b      	ldr	r3, [r7, #0]
 80034f8:	695b      	ldr	r3, [r3, #20]
 80034fa:	693a      	ldr	r2, [r7, #16]
 80034fc:	4313      	orrs	r3, r2
 80034fe:	613b      	str	r3, [r7, #16]
 8003500:	683b      	ldr	r3, [r7, #0]
 8003502:	699b      	ldr	r3, [r3, #24]
 8003504:	693a      	ldr	r2, [r7, #16]
 8003506:	4313      	orrs	r3, r2
 8003508:	613b      	str	r3, [r7, #16]
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	693a      	ldr	r2, [r7, #16]
 800350e:	605a      	str	r2, [r3, #4]
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	68fa      	ldr	r2, [r7, #12]
 8003514:	619a      	str	r2, [r3, #24]
 8003516:	683b      	ldr	r3, [r7, #0]
 8003518:	685a      	ldr	r2, [r3, #4]
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	635a      	str	r2, [r3, #52]	; 0x34
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	697a      	ldr	r2, [r7, #20]
 8003522:	621a      	str	r2, [r3, #32]
 8003524:	bf00      	nop
 8003526:	371c      	adds	r7, #28
 8003528:	46bd      	mov	sp, r7
 800352a:	bc80      	pop	{r7}
 800352c:	4770      	bx	lr
 800352e:	bf00      	nop
 8003530:	40012c00 	.word	0x40012c00

08003534 <TIM_OC2_SetConfig>:
 8003534:	b480      	push	{r7}
 8003536:	b087      	sub	sp, #28
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
 800353c:	6039      	str	r1, [r7, #0]
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	6a1b      	ldr	r3, [r3, #32]
 8003542:	617b      	str	r3, [r7, #20]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	6a1b      	ldr	r3, [r3, #32]
 8003548:	f023 0210 	bic.w	r2, r3, #16
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	621a      	str	r2, [r3, #32]
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	685b      	ldr	r3, [r3, #4]
 8003554:	613b      	str	r3, [r7, #16]
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	699b      	ldr	r3, [r3, #24]
 800355a:	60fb      	str	r3, [r7, #12]
 800355c:	68fb      	ldr	r3, [r7, #12]
 800355e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003562:	60fb      	str	r3, [r7, #12]
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800356a:	60fb      	str	r3, [r7, #12]
 800356c:	683b      	ldr	r3, [r7, #0]
 800356e:	681b      	ldr	r3, [r3, #0]
 8003570:	021b      	lsls	r3, r3, #8
 8003572:	68fa      	ldr	r2, [r7, #12]
 8003574:	4313      	orrs	r3, r2
 8003576:	60fb      	str	r3, [r7, #12]
 8003578:	697b      	ldr	r3, [r7, #20]
 800357a:	f023 0320 	bic.w	r3, r3, #32
 800357e:	617b      	str	r3, [r7, #20]
 8003580:	683b      	ldr	r3, [r7, #0]
 8003582:	689b      	ldr	r3, [r3, #8]
 8003584:	011b      	lsls	r3, r3, #4
 8003586:	697a      	ldr	r2, [r7, #20]
 8003588:	4313      	orrs	r3, r2
 800358a:	617b      	str	r3, [r7, #20]
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	4a1d      	ldr	r2, [pc, #116]	; (8003604 <TIM_OC2_SetConfig+0xd0>)
 8003590:	4293      	cmp	r3, r2
 8003592:	d10d      	bne.n	80035b0 <TIM_OC2_SetConfig+0x7c>
 8003594:	697b      	ldr	r3, [r7, #20]
 8003596:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800359a:	617b      	str	r3, [r7, #20]
 800359c:	683b      	ldr	r3, [r7, #0]
 800359e:	68db      	ldr	r3, [r3, #12]
 80035a0:	011b      	lsls	r3, r3, #4
 80035a2:	697a      	ldr	r2, [r7, #20]
 80035a4:	4313      	orrs	r3, r2
 80035a6:	617b      	str	r3, [r7, #20]
 80035a8:	697b      	ldr	r3, [r7, #20]
 80035aa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80035ae:	617b      	str	r3, [r7, #20]
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	4a14      	ldr	r2, [pc, #80]	; (8003604 <TIM_OC2_SetConfig+0xd0>)
 80035b4:	4293      	cmp	r3, r2
 80035b6:	d113      	bne.n	80035e0 <TIM_OC2_SetConfig+0xac>
 80035b8:	693b      	ldr	r3, [r7, #16]
 80035ba:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80035be:	613b      	str	r3, [r7, #16]
 80035c0:	693b      	ldr	r3, [r7, #16]
 80035c2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80035c6:	613b      	str	r3, [r7, #16]
 80035c8:	683b      	ldr	r3, [r7, #0]
 80035ca:	695b      	ldr	r3, [r3, #20]
 80035cc:	009b      	lsls	r3, r3, #2
 80035ce:	693a      	ldr	r2, [r7, #16]
 80035d0:	4313      	orrs	r3, r2
 80035d2:	613b      	str	r3, [r7, #16]
 80035d4:	683b      	ldr	r3, [r7, #0]
 80035d6:	699b      	ldr	r3, [r3, #24]
 80035d8:	009b      	lsls	r3, r3, #2
 80035da:	693a      	ldr	r2, [r7, #16]
 80035dc:	4313      	orrs	r3, r2
 80035de:	613b      	str	r3, [r7, #16]
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	693a      	ldr	r2, [r7, #16]
 80035e4:	605a      	str	r2, [r3, #4]
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	68fa      	ldr	r2, [r7, #12]
 80035ea:	619a      	str	r2, [r3, #24]
 80035ec:	683b      	ldr	r3, [r7, #0]
 80035ee:	685a      	ldr	r2, [r3, #4]
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	639a      	str	r2, [r3, #56]	; 0x38
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	697a      	ldr	r2, [r7, #20]
 80035f8:	621a      	str	r2, [r3, #32]
 80035fa:	bf00      	nop
 80035fc:	371c      	adds	r7, #28
 80035fe:	46bd      	mov	sp, r7
 8003600:	bc80      	pop	{r7}
 8003602:	4770      	bx	lr
 8003604:	40012c00 	.word	0x40012c00

08003608 <TIM_OC3_SetConfig>:
 8003608:	b480      	push	{r7}
 800360a:	b087      	sub	sp, #28
 800360c:	af00      	add	r7, sp, #0
 800360e:	6078      	str	r0, [r7, #4]
 8003610:	6039      	str	r1, [r7, #0]
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	6a1b      	ldr	r3, [r3, #32]
 8003616:	617b      	str	r3, [r7, #20]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	6a1b      	ldr	r3, [r3, #32]
 800361c:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	621a      	str	r2, [r3, #32]
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	685b      	ldr	r3, [r3, #4]
 8003628:	613b      	str	r3, [r7, #16]
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	69db      	ldr	r3, [r3, #28]
 800362e:	60fb      	str	r3, [r7, #12]
 8003630:	68fb      	ldr	r3, [r7, #12]
 8003632:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003636:	60fb      	str	r3, [r7, #12]
 8003638:	68fb      	ldr	r3, [r7, #12]
 800363a:	f023 0303 	bic.w	r3, r3, #3
 800363e:	60fb      	str	r3, [r7, #12]
 8003640:	683b      	ldr	r3, [r7, #0]
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	68fa      	ldr	r2, [r7, #12]
 8003646:	4313      	orrs	r3, r2
 8003648:	60fb      	str	r3, [r7, #12]
 800364a:	697b      	ldr	r3, [r7, #20]
 800364c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003650:	617b      	str	r3, [r7, #20]
 8003652:	683b      	ldr	r3, [r7, #0]
 8003654:	689b      	ldr	r3, [r3, #8]
 8003656:	021b      	lsls	r3, r3, #8
 8003658:	697a      	ldr	r2, [r7, #20]
 800365a:	4313      	orrs	r3, r2
 800365c:	617b      	str	r3, [r7, #20]
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	4a1d      	ldr	r2, [pc, #116]	; (80036d8 <TIM_OC3_SetConfig+0xd0>)
 8003662:	4293      	cmp	r3, r2
 8003664:	d10d      	bne.n	8003682 <TIM_OC3_SetConfig+0x7a>
 8003666:	697b      	ldr	r3, [r7, #20]
 8003668:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800366c:	617b      	str	r3, [r7, #20]
 800366e:	683b      	ldr	r3, [r7, #0]
 8003670:	68db      	ldr	r3, [r3, #12]
 8003672:	021b      	lsls	r3, r3, #8
 8003674:	697a      	ldr	r2, [r7, #20]
 8003676:	4313      	orrs	r3, r2
 8003678:	617b      	str	r3, [r7, #20]
 800367a:	697b      	ldr	r3, [r7, #20]
 800367c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003680:	617b      	str	r3, [r7, #20]
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	4a14      	ldr	r2, [pc, #80]	; (80036d8 <TIM_OC3_SetConfig+0xd0>)
 8003686:	4293      	cmp	r3, r2
 8003688:	d113      	bne.n	80036b2 <TIM_OC3_SetConfig+0xaa>
 800368a:	693b      	ldr	r3, [r7, #16]
 800368c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003690:	613b      	str	r3, [r7, #16]
 8003692:	693b      	ldr	r3, [r7, #16]
 8003694:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003698:	613b      	str	r3, [r7, #16]
 800369a:	683b      	ldr	r3, [r7, #0]
 800369c:	695b      	ldr	r3, [r3, #20]
 800369e:	011b      	lsls	r3, r3, #4
 80036a0:	693a      	ldr	r2, [r7, #16]
 80036a2:	4313      	orrs	r3, r2
 80036a4:	613b      	str	r3, [r7, #16]
 80036a6:	683b      	ldr	r3, [r7, #0]
 80036a8:	699b      	ldr	r3, [r3, #24]
 80036aa:	011b      	lsls	r3, r3, #4
 80036ac:	693a      	ldr	r2, [r7, #16]
 80036ae:	4313      	orrs	r3, r2
 80036b0:	613b      	str	r3, [r7, #16]
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	693a      	ldr	r2, [r7, #16]
 80036b6:	605a      	str	r2, [r3, #4]
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	68fa      	ldr	r2, [r7, #12]
 80036bc:	61da      	str	r2, [r3, #28]
 80036be:	683b      	ldr	r3, [r7, #0]
 80036c0:	685a      	ldr	r2, [r3, #4]
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	63da      	str	r2, [r3, #60]	; 0x3c
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	697a      	ldr	r2, [r7, #20]
 80036ca:	621a      	str	r2, [r3, #32]
 80036cc:	bf00      	nop
 80036ce:	371c      	adds	r7, #28
 80036d0:	46bd      	mov	sp, r7
 80036d2:	bc80      	pop	{r7}
 80036d4:	4770      	bx	lr
 80036d6:	bf00      	nop
 80036d8:	40012c00 	.word	0x40012c00

080036dc <TIM_OC4_SetConfig>:
 80036dc:	b480      	push	{r7}
 80036de:	b087      	sub	sp, #28
 80036e0:	af00      	add	r7, sp, #0
 80036e2:	6078      	str	r0, [r7, #4]
 80036e4:	6039      	str	r1, [r7, #0]
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	6a1b      	ldr	r3, [r3, #32]
 80036ea:	613b      	str	r3, [r7, #16]
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	6a1b      	ldr	r3, [r3, #32]
 80036f0:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	621a      	str	r2, [r3, #32]
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	685b      	ldr	r3, [r3, #4]
 80036fc:	617b      	str	r3, [r7, #20]
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	69db      	ldr	r3, [r3, #28]
 8003702:	60fb      	str	r3, [r7, #12]
 8003704:	68fb      	ldr	r3, [r7, #12]
 8003706:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800370a:	60fb      	str	r3, [r7, #12]
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003712:	60fb      	str	r3, [r7, #12]
 8003714:	683b      	ldr	r3, [r7, #0]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	021b      	lsls	r3, r3, #8
 800371a:	68fa      	ldr	r2, [r7, #12]
 800371c:	4313      	orrs	r3, r2
 800371e:	60fb      	str	r3, [r7, #12]
 8003720:	693b      	ldr	r3, [r7, #16]
 8003722:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003726:	613b      	str	r3, [r7, #16]
 8003728:	683b      	ldr	r3, [r7, #0]
 800372a:	689b      	ldr	r3, [r3, #8]
 800372c:	031b      	lsls	r3, r3, #12
 800372e:	693a      	ldr	r2, [r7, #16]
 8003730:	4313      	orrs	r3, r2
 8003732:	613b      	str	r3, [r7, #16]
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	4a0f      	ldr	r2, [pc, #60]	; (8003774 <TIM_OC4_SetConfig+0x98>)
 8003738:	4293      	cmp	r3, r2
 800373a:	d109      	bne.n	8003750 <TIM_OC4_SetConfig+0x74>
 800373c:	697b      	ldr	r3, [r7, #20]
 800373e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003742:	617b      	str	r3, [r7, #20]
 8003744:	683b      	ldr	r3, [r7, #0]
 8003746:	695b      	ldr	r3, [r3, #20]
 8003748:	019b      	lsls	r3, r3, #6
 800374a:	697a      	ldr	r2, [r7, #20]
 800374c:	4313      	orrs	r3, r2
 800374e:	617b      	str	r3, [r7, #20]
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	697a      	ldr	r2, [r7, #20]
 8003754:	605a      	str	r2, [r3, #4]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	68fa      	ldr	r2, [r7, #12]
 800375a:	61da      	str	r2, [r3, #28]
 800375c:	683b      	ldr	r3, [r7, #0]
 800375e:	685a      	ldr	r2, [r3, #4]
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	641a      	str	r2, [r3, #64]	; 0x40
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	693a      	ldr	r2, [r7, #16]
 8003768:	621a      	str	r2, [r3, #32]
 800376a:	bf00      	nop
 800376c:	371c      	adds	r7, #28
 800376e:	46bd      	mov	sp, r7
 8003770:	bc80      	pop	{r7}
 8003772:	4770      	bx	lr
 8003774:	40012c00 	.word	0x40012c00

08003778 <TIM_TI1_ConfigInputStage>:
 8003778:	b480      	push	{r7}
 800377a:	b087      	sub	sp, #28
 800377c:	af00      	add	r7, sp, #0
 800377e:	60f8      	str	r0, [r7, #12]
 8003780:	60b9      	str	r1, [r7, #8]
 8003782:	607a      	str	r2, [r7, #4]
 8003784:	68fb      	ldr	r3, [r7, #12]
 8003786:	6a1b      	ldr	r3, [r3, #32]
 8003788:	617b      	str	r3, [r7, #20]
 800378a:	68fb      	ldr	r3, [r7, #12]
 800378c:	6a1b      	ldr	r3, [r3, #32]
 800378e:	f023 0201 	bic.w	r2, r3, #1
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	621a      	str	r2, [r3, #32]
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	699b      	ldr	r3, [r3, #24]
 800379a:	613b      	str	r3, [r7, #16]
 800379c:	693b      	ldr	r3, [r7, #16]
 800379e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80037a2:	613b      	str	r3, [r7, #16]
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	011b      	lsls	r3, r3, #4
 80037a8:	693a      	ldr	r2, [r7, #16]
 80037aa:	4313      	orrs	r3, r2
 80037ac:	613b      	str	r3, [r7, #16]
 80037ae:	697b      	ldr	r3, [r7, #20]
 80037b0:	f023 030a 	bic.w	r3, r3, #10
 80037b4:	617b      	str	r3, [r7, #20]
 80037b6:	697a      	ldr	r2, [r7, #20]
 80037b8:	68bb      	ldr	r3, [r7, #8]
 80037ba:	4313      	orrs	r3, r2
 80037bc:	617b      	str	r3, [r7, #20]
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	693a      	ldr	r2, [r7, #16]
 80037c2:	619a      	str	r2, [r3, #24]
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	697a      	ldr	r2, [r7, #20]
 80037c8:	621a      	str	r2, [r3, #32]
 80037ca:	bf00      	nop
 80037cc:	371c      	adds	r7, #28
 80037ce:	46bd      	mov	sp, r7
 80037d0:	bc80      	pop	{r7}
 80037d2:	4770      	bx	lr

080037d4 <TIM_TI2_ConfigInputStage>:
 80037d4:	b480      	push	{r7}
 80037d6:	b087      	sub	sp, #28
 80037d8:	af00      	add	r7, sp, #0
 80037da:	60f8      	str	r0, [r7, #12]
 80037dc:	60b9      	str	r1, [r7, #8]
 80037de:	607a      	str	r2, [r7, #4]
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	6a1b      	ldr	r3, [r3, #32]
 80037e4:	617b      	str	r3, [r7, #20]
 80037e6:	68fb      	ldr	r3, [r7, #12]
 80037e8:	6a1b      	ldr	r3, [r3, #32]
 80037ea:	f023 0210 	bic.w	r2, r3, #16
 80037ee:	68fb      	ldr	r3, [r7, #12]
 80037f0:	621a      	str	r2, [r3, #32]
 80037f2:	68fb      	ldr	r3, [r7, #12]
 80037f4:	699b      	ldr	r3, [r3, #24]
 80037f6:	613b      	str	r3, [r7, #16]
 80037f8:	693b      	ldr	r3, [r7, #16]
 80037fa:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80037fe:	613b      	str	r3, [r7, #16]
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	031b      	lsls	r3, r3, #12
 8003804:	693a      	ldr	r2, [r7, #16]
 8003806:	4313      	orrs	r3, r2
 8003808:	613b      	str	r3, [r7, #16]
 800380a:	697b      	ldr	r3, [r7, #20]
 800380c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003810:	617b      	str	r3, [r7, #20]
 8003812:	68bb      	ldr	r3, [r7, #8]
 8003814:	011b      	lsls	r3, r3, #4
 8003816:	697a      	ldr	r2, [r7, #20]
 8003818:	4313      	orrs	r3, r2
 800381a:	617b      	str	r3, [r7, #20]
 800381c:	68fb      	ldr	r3, [r7, #12]
 800381e:	693a      	ldr	r2, [r7, #16]
 8003820:	619a      	str	r2, [r3, #24]
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	697a      	ldr	r2, [r7, #20]
 8003826:	621a      	str	r2, [r3, #32]
 8003828:	bf00      	nop
 800382a:	371c      	adds	r7, #28
 800382c:	46bd      	mov	sp, r7
 800382e:	bc80      	pop	{r7}
 8003830:	4770      	bx	lr

08003832 <TIM_ITRx_SetConfig>:
 8003832:	b480      	push	{r7}
 8003834:	b085      	sub	sp, #20
 8003836:	af00      	add	r7, sp, #0
 8003838:	6078      	str	r0, [r7, #4]
 800383a:	6039      	str	r1, [r7, #0]
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	689b      	ldr	r3, [r3, #8]
 8003840:	60fb      	str	r3, [r7, #12]
 8003842:	68fb      	ldr	r3, [r7, #12]
 8003844:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003848:	60fb      	str	r3, [r7, #12]
 800384a:	683a      	ldr	r2, [r7, #0]
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	4313      	orrs	r3, r2
 8003850:	f043 0307 	orr.w	r3, r3, #7
 8003854:	60fb      	str	r3, [r7, #12]
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	68fa      	ldr	r2, [r7, #12]
 800385a:	609a      	str	r2, [r3, #8]
 800385c:	bf00      	nop
 800385e:	3714      	adds	r7, #20
 8003860:	46bd      	mov	sp, r7
 8003862:	bc80      	pop	{r7}
 8003864:	4770      	bx	lr

08003866 <TIM_ETR_SetConfig>:
 8003866:	b480      	push	{r7}
 8003868:	b087      	sub	sp, #28
 800386a:	af00      	add	r7, sp, #0
 800386c:	60f8      	str	r0, [r7, #12]
 800386e:	60b9      	str	r1, [r7, #8]
 8003870:	607a      	str	r2, [r7, #4]
 8003872:	603b      	str	r3, [r7, #0]
 8003874:	68fb      	ldr	r3, [r7, #12]
 8003876:	689b      	ldr	r3, [r3, #8]
 8003878:	617b      	str	r3, [r7, #20]
 800387a:	697b      	ldr	r3, [r7, #20]
 800387c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003880:	617b      	str	r3, [r7, #20]
 8003882:	683b      	ldr	r3, [r7, #0]
 8003884:	021a      	lsls	r2, r3, #8
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	431a      	orrs	r2, r3
 800388a:	68bb      	ldr	r3, [r7, #8]
 800388c:	4313      	orrs	r3, r2
 800388e:	697a      	ldr	r2, [r7, #20]
 8003890:	4313      	orrs	r3, r2
 8003892:	617b      	str	r3, [r7, #20]
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	697a      	ldr	r2, [r7, #20]
 8003898:	609a      	str	r2, [r3, #8]
 800389a:	bf00      	nop
 800389c:	371c      	adds	r7, #28
 800389e:	46bd      	mov	sp, r7
 80038a0:	bc80      	pop	{r7}
 80038a2:	4770      	bx	lr

080038a4 <TIM_CCxChannelCmd>:
 80038a4:	b480      	push	{r7}
 80038a6:	b087      	sub	sp, #28
 80038a8:	af00      	add	r7, sp, #0
 80038aa:	60f8      	str	r0, [r7, #12]
 80038ac:	60b9      	str	r1, [r7, #8]
 80038ae:	607a      	str	r2, [r7, #4]
 80038b0:	68bb      	ldr	r3, [r7, #8]
 80038b2:	f003 031f 	and.w	r3, r3, #31
 80038b6:	2201      	movs	r2, #1
 80038b8:	fa02 f303 	lsl.w	r3, r2, r3
 80038bc:	617b      	str	r3, [r7, #20]
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	6a1a      	ldr	r2, [r3, #32]
 80038c2:	697b      	ldr	r3, [r7, #20]
 80038c4:	43db      	mvns	r3, r3
 80038c6:	401a      	ands	r2, r3
 80038c8:	68fb      	ldr	r3, [r7, #12]
 80038ca:	621a      	str	r2, [r3, #32]
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	6a1a      	ldr	r2, [r3, #32]
 80038d0:	68bb      	ldr	r3, [r7, #8]
 80038d2:	f003 031f 	and.w	r3, r3, #31
 80038d6:	6879      	ldr	r1, [r7, #4]
 80038d8:	fa01 f303 	lsl.w	r3, r1, r3
 80038dc:	431a      	orrs	r2, r3
 80038de:	68fb      	ldr	r3, [r7, #12]
 80038e0:	621a      	str	r2, [r3, #32]
 80038e2:	bf00      	nop
 80038e4:	371c      	adds	r7, #28
 80038e6:	46bd      	mov	sp, r7
 80038e8:	bc80      	pop	{r7}
 80038ea:	4770      	bx	lr

080038ec <HAL_TIMEx_MasterConfigSynchronization>:
 80038ec:	b480      	push	{r7}
 80038ee:	b085      	sub	sp, #20
 80038f0:	af00      	add	r7, sp, #0
 80038f2:	6078      	str	r0, [r7, #4]
 80038f4:	6039      	str	r1, [r7, #0]
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80038fc:	2b01      	cmp	r3, #1
 80038fe:	d101      	bne.n	8003904 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003900:	2302      	movs	r3, #2
 8003902:	e046      	b.n	8003992 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	2201      	movs	r2, #1
 8003908:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	2202      	movs	r2, #2
 8003910:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	685b      	ldr	r3, [r3, #4]
 800391a:	60fb      	str	r3, [r7, #12]
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	689b      	ldr	r3, [r3, #8]
 8003922:	60bb      	str	r3, [r7, #8]
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800392a:	60fb      	str	r3, [r7, #12]
 800392c:	683b      	ldr	r3, [r7, #0]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	68fa      	ldr	r2, [r7, #12]
 8003932:	4313      	orrs	r3, r2
 8003934:	60fb      	str	r3, [r7, #12]
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	68fa      	ldr	r2, [r7, #12]
 800393c:	605a      	str	r2, [r3, #4]
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	4a16      	ldr	r2, [pc, #88]	; (800399c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003944:	4293      	cmp	r3, r2
 8003946:	d00e      	beq.n	8003966 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003950:	d009      	beq.n	8003966 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	4a12      	ldr	r2, [pc, #72]	; (80039a0 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003958:	4293      	cmp	r3, r2
 800395a:	d004      	beq.n	8003966 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	4a10      	ldr	r2, [pc, #64]	; (80039a4 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003962:	4293      	cmp	r3, r2
 8003964:	d10c      	bne.n	8003980 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003966:	68bb      	ldr	r3, [r7, #8]
 8003968:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800396c:	60bb      	str	r3, [r7, #8]
 800396e:	683b      	ldr	r3, [r7, #0]
 8003970:	685b      	ldr	r3, [r3, #4]
 8003972:	68ba      	ldr	r2, [r7, #8]
 8003974:	4313      	orrs	r3, r2
 8003976:	60bb      	str	r3, [r7, #8]
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	68ba      	ldr	r2, [r7, #8]
 800397e:	609a      	str	r2, [r3, #8]
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	2201      	movs	r2, #1
 8003984:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	2200      	movs	r2, #0
 800398c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003990:	2300      	movs	r3, #0
 8003992:	4618      	mov	r0, r3
 8003994:	3714      	adds	r7, #20
 8003996:	46bd      	mov	sp, r7
 8003998:	bc80      	pop	{r7}
 800399a:	4770      	bx	lr
 800399c:	40012c00 	.word	0x40012c00
 80039a0:	40000400 	.word	0x40000400
 80039a4:	40000800 	.word	0x40000800

080039a8 <HAL_TIMEx_CommutCallback>:
 80039a8:	b480      	push	{r7}
 80039aa:	b083      	sub	sp, #12
 80039ac:	af00      	add	r7, sp, #0
 80039ae:	6078      	str	r0, [r7, #4]
 80039b0:	bf00      	nop
 80039b2:	370c      	adds	r7, #12
 80039b4:	46bd      	mov	sp, r7
 80039b6:	bc80      	pop	{r7}
 80039b8:	4770      	bx	lr

080039ba <HAL_TIMEx_BreakCallback>:
 80039ba:	b480      	push	{r7}
 80039bc:	b083      	sub	sp, #12
 80039be:	af00      	add	r7, sp, #0
 80039c0:	6078      	str	r0, [r7, #4]
 80039c2:	bf00      	nop
 80039c4:	370c      	adds	r7, #12
 80039c6:	46bd      	mov	sp, r7
 80039c8:	bc80      	pop	{r7}
 80039ca:	4770      	bx	lr

080039cc <HAL_UART_Init>:
 80039cc:	b580      	push	{r7, lr}
 80039ce:	b082      	sub	sp, #8
 80039d0:	af00      	add	r7, sp, #0
 80039d2:	6078      	str	r0, [r7, #4]
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d101      	bne.n	80039de <HAL_UART_Init+0x12>
 80039da:	2301      	movs	r3, #1
 80039dc:	e042      	b.n	8003a64 <HAL_UART_Init+0x98>
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80039e4:	b2db      	uxtb	r3, r3
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d106      	bne.n	80039f8 <HAL_UART_Init+0x2c>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	2200      	movs	r2, #0
 80039ee:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80039f2:	6878      	ldr	r0, [r7, #4]
 80039f4:	f7fd ff72 	bl	80018dc <HAL_UART_MspInit>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	2224      	movs	r2, #36	; 0x24
 80039fc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	68da      	ldr	r2, [r3, #12]
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	681b      	ldr	r3, [r3, #0]
 8003a0a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003a0e:	60da      	str	r2, [r3, #12]
 8003a10:	6878      	ldr	r0, [r7, #4]
 8003a12:	f000 fd71 	bl	80044f8 <UART_SetConfig>
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	691a      	ldr	r2, [r3, #16]
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003a24:	611a      	str	r2, [r3, #16]
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	695a      	ldr	r2, [r3, #20]
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003a34:	615a      	str	r2, [r3, #20]
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	68da      	ldr	r2, [r3, #12]
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003a44:	60da      	str	r2, [r3, #12]
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	2200      	movs	r2, #0
 8003a4a:	645a      	str	r2, [r3, #68]	; 0x44
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	2220      	movs	r2, #32
 8003a50:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	2220      	movs	r2, #32
 8003a58:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	2200      	movs	r2, #0
 8003a60:	635a      	str	r2, [r3, #52]	; 0x34
 8003a62:	2300      	movs	r3, #0
 8003a64:	4618      	mov	r0, r3
 8003a66:	3708      	adds	r7, #8
 8003a68:	46bd      	mov	sp, r7
 8003a6a:	bd80      	pop	{r7, pc}

08003a6c <HAL_UART_Transmit>:
 8003a6c:	b580      	push	{r7, lr}
 8003a6e:	b08a      	sub	sp, #40	; 0x28
 8003a70:	af02      	add	r7, sp, #8
 8003a72:	60f8      	str	r0, [r7, #12]
 8003a74:	60b9      	str	r1, [r7, #8]
 8003a76:	603b      	str	r3, [r7, #0]
 8003a78:	4613      	mov	r3, r2
 8003a7a:	80fb      	strh	r3, [r7, #6]
 8003a7c:	2300      	movs	r3, #0
 8003a7e:	617b      	str	r3, [r7, #20]
 8003a80:	68fb      	ldr	r3, [r7, #12]
 8003a82:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003a86:	b2db      	uxtb	r3, r3
 8003a88:	2b20      	cmp	r3, #32
 8003a8a:	d16d      	bne.n	8003b68 <HAL_UART_Transmit+0xfc>
 8003a8c:	68bb      	ldr	r3, [r7, #8]
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d002      	beq.n	8003a98 <HAL_UART_Transmit+0x2c>
 8003a92:	88fb      	ldrh	r3, [r7, #6]
 8003a94:	2b00      	cmp	r3, #0
 8003a96:	d101      	bne.n	8003a9c <HAL_UART_Transmit+0x30>
 8003a98:	2301      	movs	r3, #1
 8003a9a:	e066      	b.n	8003b6a <HAL_UART_Transmit+0xfe>
 8003a9c:	68fb      	ldr	r3, [r7, #12]
 8003a9e:	2200      	movs	r2, #0
 8003aa0:	645a      	str	r2, [r3, #68]	; 0x44
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	2221      	movs	r2, #33	; 0x21
 8003aa6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003aaa:	f7fe f869 	bl	8001b80 <HAL_GetTick>
 8003aae:	6178      	str	r0, [r7, #20]
 8003ab0:	68fb      	ldr	r3, [r7, #12]
 8003ab2:	88fa      	ldrh	r2, [r7, #6]
 8003ab4:	849a      	strh	r2, [r3, #36]	; 0x24
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	88fa      	ldrh	r2, [r7, #6]
 8003aba:	84da      	strh	r2, [r3, #38]	; 0x26
 8003abc:	68fb      	ldr	r3, [r7, #12]
 8003abe:	689b      	ldr	r3, [r3, #8]
 8003ac0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003ac4:	d108      	bne.n	8003ad8 <HAL_UART_Transmit+0x6c>
 8003ac6:	68fb      	ldr	r3, [r7, #12]
 8003ac8:	691b      	ldr	r3, [r3, #16]
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d104      	bne.n	8003ad8 <HAL_UART_Transmit+0x6c>
 8003ace:	2300      	movs	r3, #0
 8003ad0:	61fb      	str	r3, [r7, #28]
 8003ad2:	68bb      	ldr	r3, [r7, #8]
 8003ad4:	61bb      	str	r3, [r7, #24]
 8003ad6:	e003      	b.n	8003ae0 <HAL_UART_Transmit+0x74>
 8003ad8:	68bb      	ldr	r3, [r7, #8]
 8003ada:	61fb      	str	r3, [r7, #28]
 8003adc:	2300      	movs	r3, #0
 8003ade:	61bb      	str	r3, [r7, #24]
 8003ae0:	e02a      	b.n	8003b38 <HAL_UART_Transmit+0xcc>
 8003ae2:	683b      	ldr	r3, [r7, #0]
 8003ae4:	9300      	str	r3, [sp, #0]
 8003ae6:	697b      	ldr	r3, [r7, #20]
 8003ae8:	2200      	movs	r2, #0
 8003aea:	2180      	movs	r1, #128	; 0x80
 8003aec:	68f8      	ldr	r0, [r7, #12]
 8003aee:	f000 faf9 	bl	80040e4 <UART_WaitOnFlagUntilTimeout>
 8003af2:	4603      	mov	r3, r0
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d001      	beq.n	8003afc <HAL_UART_Transmit+0x90>
 8003af8:	2303      	movs	r3, #3
 8003afa:	e036      	b.n	8003b6a <HAL_UART_Transmit+0xfe>
 8003afc:	69fb      	ldr	r3, [r7, #28]
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	d10b      	bne.n	8003b1a <HAL_UART_Transmit+0xae>
 8003b02:	69bb      	ldr	r3, [r7, #24]
 8003b04:	881b      	ldrh	r3, [r3, #0]
 8003b06:	461a      	mov	r2, r3
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003b10:	605a      	str	r2, [r3, #4]
 8003b12:	69bb      	ldr	r3, [r7, #24]
 8003b14:	3302      	adds	r3, #2
 8003b16:	61bb      	str	r3, [r7, #24]
 8003b18:	e007      	b.n	8003b2a <HAL_UART_Transmit+0xbe>
 8003b1a:	69fb      	ldr	r3, [r7, #28]
 8003b1c:	781a      	ldrb	r2, [r3, #0]
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	605a      	str	r2, [r3, #4]
 8003b24:	69fb      	ldr	r3, [r7, #28]
 8003b26:	3301      	adds	r3, #1
 8003b28:	61fb      	str	r3, [r7, #28]
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003b2e:	b29b      	uxth	r3, r3
 8003b30:	3b01      	subs	r3, #1
 8003b32:	b29a      	uxth	r2, r3
 8003b34:	68fb      	ldr	r3, [r7, #12]
 8003b36:	84da      	strh	r2, [r3, #38]	; 0x26
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003b3c:	b29b      	uxth	r3, r3
 8003b3e:	2b00      	cmp	r3, #0
 8003b40:	d1cf      	bne.n	8003ae2 <HAL_UART_Transmit+0x76>
 8003b42:	683b      	ldr	r3, [r7, #0]
 8003b44:	9300      	str	r3, [sp, #0]
 8003b46:	697b      	ldr	r3, [r7, #20]
 8003b48:	2200      	movs	r2, #0
 8003b4a:	2140      	movs	r1, #64	; 0x40
 8003b4c:	68f8      	ldr	r0, [r7, #12]
 8003b4e:	f000 fac9 	bl	80040e4 <UART_WaitOnFlagUntilTimeout>
 8003b52:	4603      	mov	r3, r0
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d001      	beq.n	8003b5c <HAL_UART_Transmit+0xf0>
 8003b58:	2303      	movs	r3, #3
 8003b5a:	e006      	b.n	8003b6a <HAL_UART_Transmit+0xfe>
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	2220      	movs	r2, #32
 8003b60:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b64:	2300      	movs	r3, #0
 8003b66:	e000      	b.n	8003b6a <HAL_UART_Transmit+0xfe>
 8003b68:	2302      	movs	r3, #2
 8003b6a:	4618      	mov	r0, r3
 8003b6c:	3720      	adds	r7, #32
 8003b6e:	46bd      	mov	sp, r7
 8003b70:	bd80      	pop	{r7, pc}
	...

08003b74 <HAL_UART_IRQHandler>:
 8003b74:	b580      	push	{r7, lr}
 8003b76:	b0ba      	sub	sp, #232	; 0xe8
 8003b78:	af00      	add	r7, sp, #0
 8003b7a:	6078      	str	r0, [r7, #4]
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	68db      	ldr	r3, [r3, #12]
 8003b8c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	681b      	ldr	r3, [r3, #0]
 8003b94:	695b      	ldr	r3, [r3, #20]
 8003b96:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8003b9a:	2300      	movs	r3, #0
 8003b9c:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003ba0:	2300      	movs	r3, #0
 8003ba2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8003ba6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003baa:	f003 030f 	and.w	r3, r3, #15
 8003bae:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003bb2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d10f      	bne.n	8003bda <HAL_UART_IRQHandler+0x66>
 8003bba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003bbe:	f003 0320 	and.w	r3, r3, #32
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	d009      	beq.n	8003bda <HAL_UART_IRQHandler+0x66>
 8003bc6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003bca:	f003 0320 	and.w	r3, r3, #32
 8003bce:	2b00      	cmp	r3, #0
 8003bd0:	d003      	beq.n	8003bda <HAL_UART_IRQHandler+0x66>
 8003bd2:	6878      	ldr	r0, [r7, #4]
 8003bd4:	f000 fbd1 	bl	800437a <UART_Receive_IT>
 8003bd8:	e25b      	b.n	8004092 <HAL_UART_IRQHandler+0x51e>
 8003bda:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	f000 80de 	beq.w	8003da0 <HAL_UART_IRQHandler+0x22c>
 8003be4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003be8:	f003 0301 	and.w	r3, r3, #1
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d106      	bne.n	8003bfe <HAL_UART_IRQHandler+0x8a>
 8003bf0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003bf4:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8003bf8:	2b00      	cmp	r3, #0
 8003bfa:	f000 80d1 	beq.w	8003da0 <HAL_UART_IRQHandler+0x22c>
 8003bfe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003c02:	f003 0301 	and.w	r3, r3, #1
 8003c06:	2b00      	cmp	r3, #0
 8003c08:	d00b      	beq.n	8003c22 <HAL_UART_IRQHandler+0xae>
 8003c0a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003c0e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d005      	beq.n	8003c22 <HAL_UART_IRQHandler+0xae>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c1a:	f043 0201 	orr.w	r2, r3, #1
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	645a      	str	r2, [r3, #68]	; 0x44
 8003c22:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003c26:	f003 0304 	and.w	r3, r3, #4
 8003c2a:	2b00      	cmp	r3, #0
 8003c2c:	d00b      	beq.n	8003c46 <HAL_UART_IRQHandler+0xd2>
 8003c2e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003c32:	f003 0301 	and.w	r3, r3, #1
 8003c36:	2b00      	cmp	r3, #0
 8003c38:	d005      	beq.n	8003c46 <HAL_UART_IRQHandler+0xd2>
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c3e:	f043 0202 	orr.w	r2, r3, #2
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	645a      	str	r2, [r3, #68]	; 0x44
 8003c46:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003c4a:	f003 0302 	and.w	r3, r3, #2
 8003c4e:	2b00      	cmp	r3, #0
 8003c50:	d00b      	beq.n	8003c6a <HAL_UART_IRQHandler+0xf6>
 8003c52:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003c56:	f003 0301 	and.w	r3, r3, #1
 8003c5a:	2b00      	cmp	r3, #0
 8003c5c:	d005      	beq.n	8003c6a <HAL_UART_IRQHandler+0xf6>
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c62:	f043 0204 	orr.w	r2, r3, #4
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	645a      	str	r2, [r3, #68]	; 0x44
 8003c6a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003c6e:	f003 0308 	and.w	r3, r3, #8
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d011      	beq.n	8003c9a <HAL_UART_IRQHandler+0x126>
 8003c76:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003c7a:	f003 0320 	and.w	r3, r3, #32
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d105      	bne.n	8003c8e <HAL_UART_IRQHandler+0x11a>
 8003c82:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003c86:	f003 0301 	and.w	r3, r3, #1
 8003c8a:	2b00      	cmp	r3, #0
 8003c8c:	d005      	beq.n	8003c9a <HAL_UART_IRQHandler+0x126>
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c92:	f043 0208 	orr.w	r2, r3, #8
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	645a      	str	r2, [r3, #68]	; 0x44
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	f000 81f2 	beq.w	8004088 <HAL_UART_IRQHandler+0x514>
 8003ca4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003ca8:	f003 0320 	and.w	r3, r3, #32
 8003cac:	2b00      	cmp	r3, #0
 8003cae:	d008      	beq.n	8003cc2 <HAL_UART_IRQHandler+0x14e>
 8003cb0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003cb4:	f003 0320 	and.w	r3, r3, #32
 8003cb8:	2b00      	cmp	r3, #0
 8003cba:	d002      	beq.n	8003cc2 <HAL_UART_IRQHandler+0x14e>
 8003cbc:	6878      	ldr	r0, [r7, #4]
 8003cbe:	f000 fb5c 	bl	800437a <UART_Receive_IT>
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	695b      	ldr	r3, [r3, #20]
 8003cc8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	bf14      	ite	ne
 8003cd0:	2301      	movne	r3, #1
 8003cd2:	2300      	moveq	r3, #0
 8003cd4:	b2db      	uxtb	r3, r3
 8003cd6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cde:	f003 0308 	and.w	r3, r3, #8
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	d103      	bne.n	8003cee <HAL_UART_IRQHandler+0x17a>
 8003ce6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8003cea:	2b00      	cmp	r3, #0
 8003cec:	d04f      	beq.n	8003d8e <HAL_UART_IRQHandler+0x21a>
 8003cee:	6878      	ldr	r0, [r7, #4]
 8003cf0:	f000 fa66 	bl	80041c0 <UART_EndRxTransfer>
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	695b      	ldr	r3, [r3, #20]
 8003cfa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	d041      	beq.n	8003d86 <HAL_UART_IRQHandler+0x212>
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	3314      	adds	r3, #20
 8003d08:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8003d0c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8003d10:	e853 3f00 	ldrex	r3, [r3]
 8003d14:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8003d18:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8003d1c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003d20:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	3314      	adds	r3, #20
 8003d2a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8003d2e:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8003d32:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8003d36:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8003d3a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8003d3e:	e841 2300 	strex	r3, r2, [r1]
 8003d42:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8003d46:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d1d9      	bne.n	8003d02 <HAL_UART_IRQHandler+0x18e>
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d52:	2b00      	cmp	r3, #0
 8003d54:	d013      	beq.n	8003d7e <HAL_UART_IRQHandler+0x20a>
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d5a:	4a7e      	ldr	r2, [pc, #504]	; (8003f54 <HAL_UART_IRQHandler+0x3e0>)
 8003d5c:	635a      	str	r2, [r3, #52]	; 0x34
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d62:	4618      	mov	r0, r3
 8003d64:	f7fe f85e 	bl	8001e24 <HAL_DMA_Abort_IT>
 8003d68:	4603      	mov	r3, r0
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d016      	beq.n	8003d9c <HAL_UART_IRQHandler+0x228>
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003d74:	687a      	ldr	r2, [r7, #4]
 8003d76:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8003d78:	4610      	mov	r0, r2
 8003d7a:	4798      	blx	r3
 8003d7c:	e00e      	b.n	8003d9c <HAL_UART_IRQHandler+0x228>
 8003d7e:	6878      	ldr	r0, [r7, #4]
 8003d80:	f000 f99c 	bl	80040bc <HAL_UART_ErrorCallback>
 8003d84:	e00a      	b.n	8003d9c <HAL_UART_IRQHandler+0x228>
 8003d86:	6878      	ldr	r0, [r7, #4]
 8003d88:	f000 f998 	bl	80040bc <HAL_UART_ErrorCallback>
 8003d8c:	e006      	b.n	8003d9c <HAL_UART_IRQHandler+0x228>
 8003d8e:	6878      	ldr	r0, [r7, #4]
 8003d90:	f000 f994 	bl	80040bc <HAL_UART_ErrorCallback>
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	2200      	movs	r2, #0
 8003d98:	645a      	str	r2, [r3, #68]	; 0x44
 8003d9a:	e175      	b.n	8004088 <HAL_UART_IRQHandler+0x514>
 8003d9c:	bf00      	nop
 8003d9e:	e173      	b.n	8004088 <HAL_UART_IRQHandler+0x514>
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003da4:	2b01      	cmp	r3, #1
 8003da6:	f040 814f 	bne.w	8004048 <HAL_UART_IRQHandler+0x4d4>
 8003daa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003dae:	f003 0310 	and.w	r3, r3, #16
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	f000 8148 	beq.w	8004048 <HAL_UART_IRQHandler+0x4d4>
 8003db8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003dbc:	f003 0310 	and.w	r3, r3, #16
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	f000 8141 	beq.w	8004048 <HAL_UART_IRQHandler+0x4d4>
 8003dc6:	2300      	movs	r3, #0
 8003dc8:	60bb      	str	r3, [r7, #8]
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	60bb      	str	r3, [r7, #8]
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	685b      	ldr	r3, [r3, #4]
 8003dd8:	60bb      	str	r3, [r7, #8]
 8003dda:	68bb      	ldr	r3, [r7, #8]
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	695b      	ldr	r3, [r3, #20]
 8003de2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	f000 80b6 	beq.w	8003f58 <HAL_UART_IRQHandler+0x3e4>
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	685b      	ldr	r3, [r3, #4]
 8003df4:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8003df8:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8003dfc:	2b00      	cmp	r3, #0
 8003dfe:	f000 8145 	beq.w	800408c <HAL_UART_IRQHandler+0x518>
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003e06:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8003e0a:	429a      	cmp	r2, r3
 8003e0c:	f080 813e 	bcs.w	800408c <HAL_UART_IRQHandler+0x518>
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8003e16:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003e1c:	699b      	ldr	r3, [r3, #24]
 8003e1e:	2b20      	cmp	r3, #32
 8003e20:	f000 8088 	beq.w	8003f34 <HAL_UART_IRQHandler+0x3c0>
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	330c      	adds	r3, #12
 8003e2a:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8003e2e:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8003e32:	e853 3f00 	ldrex	r3, [r3]
 8003e36:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8003e3a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8003e3e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003e42:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	330c      	adds	r3, #12
 8003e4c:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8003e50:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8003e54:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8003e58:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8003e5c:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8003e60:	e841 2300 	strex	r3, r2, [r1]
 8003e64:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8003e68:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8003e6c:	2b00      	cmp	r3, #0
 8003e6e:	d1d9      	bne.n	8003e24 <HAL_UART_IRQHandler+0x2b0>
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	681b      	ldr	r3, [r3, #0]
 8003e74:	3314      	adds	r3, #20
 8003e76:	677b      	str	r3, [r7, #116]	; 0x74
 8003e78:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003e7a:	e853 3f00 	ldrex	r3, [r3]
 8003e7e:	673b      	str	r3, [r7, #112]	; 0x70
 8003e80:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003e82:	f023 0301 	bic.w	r3, r3, #1
 8003e86:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	3314      	adds	r3, #20
 8003e90:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8003e94:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8003e98:	67fb      	str	r3, [r7, #124]	; 0x7c
 8003e9a:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8003e9c:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8003ea0:	e841 2300 	strex	r3, r2, [r1]
 8003ea4:	67bb      	str	r3, [r7, #120]	; 0x78
 8003ea6:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8003ea8:	2b00      	cmp	r3, #0
 8003eaa:	d1e1      	bne.n	8003e70 <HAL_UART_IRQHandler+0x2fc>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	3314      	adds	r3, #20
 8003eb2:	663b      	str	r3, [r7, #96]	; 0x60
 8003eb4:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003eb6:	e853 3f00 	ldrex	r3, [r3]
 8003eba:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003ebc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8003ebe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003ec2:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	3314      	adds	r3, #20
 8003ecc:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8003ed0:	66fa      	str	r2, [r7, #108]	; 0x6c
 8003ed2:	66bb      	str	r3, [r7, #104]	; 0x68
 8003ed4:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8003ed6:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8003ed8:	e841 2300 	strex	r3, r2, [r1]
 8003edc:	667b      	str	r3, [r7, #100]	; 0x64
 8003ede:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8003ee0:	2b00      	cmp	r3, #0
 8003ee2:	d1e3      	bne.n	8003eac <HAL_UART_IRQHandler+0x338>
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	2220      	movs	r2, #32
 8003ee8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	2200      	movs	r2, #0
 8003ef0:	631a      	str	r2, [r3, #48]	; 0x30
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	330c      	adds	r3, #12
 8003ef8:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003efa:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003efc:	e853 3f00 	ldrex	r3, [r3]
 8003f00:	64bb      	str	r3, [r7, #72]	; 0x48
 8003f02:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003f04:	f023 0310 	bic.w	r3, r3, #16
 8003f08:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	681b      	ldr	r3, [r3, #0]
 8003f10:	330c      	adds	r3, #12
 8003f12:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8003f16:	65ba      	str	r2, [r7, #88]	; 0x58
 8003f18:	657b      	str	r3, [r7, #84]	; 0x54
 8003f1a:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8003f1c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8003f1e:	e841 2300 	strex	r3, r2, [r1]
 8003f22:	653b      	str	r3, [r7, #80]	; 0x50
 8003f24:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	d1e3      	bne.n	8003ef2 <HAL_UART_IRQHandler+0x37e>
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003f2e:	4618      	mov	r0, r3
 8003f30:	f7fd ff3d 	bl	8001dae <HAL_DMA_Abort>
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	2202      	movs	r2, #2
 8003f38:	635a      	str	r2, [r3, #52]	; 0x34
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003f42:	b29b      	uxth	r3, r3
 8003f44:	1ad3      	subs	r3, r2, r3
 8003f46:	b29b      	uxth	r3, r3
 8003f48:	4619      	mov	r1, r3
 8003f4a:	6878      	ldr	r0, [r7, #4]
 8003f4c:	f000 f8bf 	bl	80040ce <HAL_UARTEx_RxEventCallback>
 8003f50:	e09c      	b.n	800408c <HAL_UART_IRQHandler+0x518>
 8003f52:	bf00      	nop
 8003f54:	08004285 	.word	0x08004285
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003f60:	b29b      	uxth	r3, r3
 8003f62:	1ad3      	subs	r3, r2, r3
 8003f64:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003f6c:	b29b      	uxth	r3, r3
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	f000 808e 	beq.w	8004090 <HAL_UART_IRQHandler+0x51c>
 8003f74:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	f000 8089 	beq.w	8004090 <HAL_UART_IRQHandler+0x51c>
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	681b      	ldr	r3, [r3, #0]
 8003f82:	330c      	adds	r3, #12
 8003f84:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f86:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f88:	e853 3f00 	ldrex	r3, [r3]
 8003f8c:	637b      	str	r3, [r7, #52]	; 0x34
 8003f8e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003f90:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8003f94:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	330c      	adds	r3, #12
 8003f9e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8003fa2:	647a      	str	r2, [r7, #68]	; 0x44
 8003fa4:	643b      	str	r3, [r7, #64]	; 0x40
 8003fa6:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8003fa8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8003faa:	e841 2300 	strex	r3, r2, [r1]
 8003fae:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003fb0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	d1e3      	bne.n	8003f7e <HAL_UART_IRQHandler+0x40a>
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	3314      	adds	r3, #20
 8003fbc:	627b      	str	r3, [r7, #36]	; 0x24
 8003fbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003fc0:	e853 3f00 	ldrex	r3, [r3]
 8003fc4:	623b      	str	r3, [r7, #32]
 8003fc6:	6a3b      	ldr	r3, [r7, #32]
 8003fc8:	f023 0301 	bic.w	r3, r3, #1
 8003fcc:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	3314      	adds	r3, #20
 8003fd6:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8003fda:	633a      	str	r2, [r7, #48]	; 0x30
 8003fdc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003fde:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8003fe0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003fe2:	e841 2300 	strex	r3, r2, [r1]
 8003fe6:	62bb      	str	r3, [r7, #40]	; 0x28
 8003fe8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003fea:	2b00      	cmp	r3, #0
 8003fec:	d1e3      	bne.n	8003fb6 <HAL_UART_IRQHandler+0x442>
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	2220      	movs	r2, #32
 8003ff2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	2200      	movs	r2, #0
 8003ffa:	631a      	str	r2, [r3, #48]	; 0x30
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	330c      	adds	r3, #12
 8004002:	613b      	str	r3, [r7, #16]
 8004004:	693b      	ldr	r3, [r7, #16]
 8004006:	e853 3f00 	ldrex	r3, [r3]
 800400a:	60fb      	str	r3, [r7, #12]
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	f023 0310 	bic.w	r3, r3, #16
 8004012:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	330c      	adds	r3, #12
 800401c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8004020:	61fa      	str	r2, [r7, #28]
 8004022:	61bb      	str	r3, [r7, #24]
 8004024:	69b9      	ldr	r1, [r7, #24]
 8004026:	69fa      	ldr	r2, [r7, #28]
 8004028:	e841 2300 	strex	r3, r2, [r1]
 800402c:	617b      	str	r3, [r7, #20]
 800402e:	697b      	ldr	r3, [r7, #20]
 8004030:	2b00      	cmp	r3, #0
 8004032:	d1e3      	bne.n	8003ffc <HAL_UART_IRQHandler+0x488>
 8004034:	687b      	ldr	r3, [r7, #4]
 8004036:	2202      	movs	r2, #2
 8004038:	635a      	str	r2, [r3, #52]	; 0x34
 800403a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800403e:	4619      	mov	r1, r3
 8004040:	6878      	ldr	r0, [r7, #4]
 8004042:	f000 f844 	bl	80040ce <HAL_UARTEx_RxEventCallback>
 8004046:	e023      	b.n	8004090 <HAL_UART_IRQHandler+0x51c>
 8004048:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800404c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004050:	2b00      	cmp	r3, #0
 8004052:	d009      	beq.n	8004068 <HAL_UART_IRQHandler+0x4f4>
 8004054:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004058:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800405c:	2b00      	cmp	r3, #0
 800405e:	d003      	beq.n	8004068 <HAL_UART_IRQHandler+0x4f4>
 8004060:	6878      	ldr	r0, [r7, #4]
 8004062:	f000 f923 	bl	80042ac <UART_Transmit_IT>
 8004066:	e014      	b.n	8004092 <HAL_UART_IRQHandler+0x51e>
 8004068:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800406c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004070:	2b00      	cmp	r3, #0
 8004072:	d00e      	beq.n	8004092 <HAL_UART_IRQHandler+0x51e>
 8004074:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004078:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800407c:	2b00      	cmp	r3, #0
 800407e:	d008      	beq.n	8004092 <HAL_UART_IRQHandler+0x51e>
 8004080:	6878      	ldr	r0, [r7, #4]
 8004082:	f000 f962 	bl	800434a <UART_EndTransmit_IT>
 8004086:	e004      	b.n	8004092 <HAL_UART_IRQHandler+0x51e>
 8004088:	bf00      	nop
 800408a:	e002      	b.n	8004092 <HAL_UART_IRQHandler+0x51e>
 800408c:	bf00      	nop
 800408e:	e000      	b.n	8004092 <HAL_UART_IRQHandler+0x51e>
 8004090:	bf00      	nop
 8004092:	37e8      	adds	r7, #232	; 0xe8
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}

08004098 <HAL_UART_TxCpltCallback>:
 8004098:	b480      	push	{r7}
 800409a:	b083      	sub	sp, #12
 800409c:	af00      	add	r7, sp, #0
 800409e:	6078      	str	r0, [r7, #4]
 80040a0:	bf00      	nop
 80040a2:	370c      	adds	r7, #12
 80040a4:	46bd      	mov	sp, r7
 80040a6:	bc80      	pop	{r7}
 80040a8:	4770      	bx	lr

080040aa <HAL_UART_RxCpltCallback>:
 80040aa:	b480      	push	{r7}
 80040ac:	b083      	sub	sp, #12
 80040ae:	af00      	add	r7, sp, #0
 80040b0:	6078      	str	r0, [r7, #4]
 80040b2:	bf00      	nop
 80040b4:	370c      	adds	r7, #12
 80040b6:	46bd      	mov	sp, r7
 80040b8:	bc80      	pop	{r7}
 80040ba:	4770      	bx	lr

080040bc <HAL_UART_ErrorCallback>:
 80040bc:	b480      	push	{r7}
 80040be:	b083      	sub	sp, #12
 80040c0:	af00      	add	r7, sp, #0
 80040c2:	6078      	str	r0, [r7, #4]
 80040c4:	bf00      	nop
 80040c6:	370c      	adds	r7, #12
 80040c8:	46bd      	mov	sp, r7
 80040ca:	bc80      	pop	{r7}
 80040cc:	4770      	bx	lr

080040ce <HAL_UARTEx_RxEventCallback>:
 80040ce:	b480      	push	{r7}
 80040d0:	b083      	sub	sp, #12
 80040d2:	af00      	add	r7, sp, #0
 80040d4:	6078      	str	r0, [r7, #4]
 80040d6:	460b      	mov	r3, r1
 80040d8:	807b      	strh	r3, [r7, #2]
 80040da:	bf00      	nop
 80040dc:	370c      	adds	r7, #12
 80040de:	46bd      	mov	sp, r7
 80040e0:	bc80      	pop	{r7}
 80040e2:	4770      	bx	lr

080040e4 <UART_WaitOnFlagUntilTimeout>:
 80040e4:	b580      	push	{r7, lr}
 80040e6:	b090      	sub	sp, #64	; 0x40
 80040e8:	af00      	add	r7, sp, #0
 80040ea:	60f8      	str	r0, [r7, #12]
 80040ec:	60b9      	str	r1, [r7, #8]
 80040ee:	603b      	str	r3, [r7, #0]
 80040f0:	4613      	mov	r3, r2
 80040f2:	71fb      	strb	r3, [r7, #7]
 80040f4:	e050      	b.n	8004198 <UART_WaitOnFlagUntilTimeout+0xb4>
 80040f6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80040f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80040fc:	d04c      	beq.n	8004198 <UART_WaitOnFlagUntilTimeout+0xb4>
 80040fe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004100:	2b00      	cmp	r3, #0
 8004102:	d007      	beq.n	8004114 <UART_WaitOnFlagUntilTimeout+0x30>
 8004104:	f7fd fd3c 	bl	8001b80 <HAL_GetTick>
 8004108:	4602      	mov	r2, r0
 800410a:	683b      	ldr	r3, [r7, #0]
 800410c:	1ad3      	subs	r3, r2, r3
 800410e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8004110:	429a      	cmp	r2, r3
 8004112:	d241      	bcs.n	8004198 <UART_WaitOnFlagUntilTimeout+0xb4>
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	330c      	adds	r3, #12
 800411a:	62bb      	str	r3, [r7, #40]	; 0x28
 800411c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800411e:	e853 3f00 	ldrex	r3, [r3]
 8004122:	627b      	str	r3, [r7, #36]	; 0x24
 8004124:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004126:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800412a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800412c:	68fb      	ldr	r3, [r7, #12]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	330c      	adds	r3, #12
 8004132:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004134:	637a      	str	r2, [r7, #52]	; 0x34
 8004136:	633b      	str	r3, [r7, #48]	; 0x30
 8004138:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800413a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800413c:	e841 2300 	strex	r3, r2, [r1]
 8004140:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004142:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004144:	2b00      	cmp	r3, #0
 8004146:	d1e5      	bne.n	8004114 <UART_WaitOnFlagUntilTimeout+0x30>
 8004148:	68fb      	ldr	r3, [r7, #12]
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	3314      	adds	r3, #20
 800414e:	617b      	str	r3, [r7, #20]
 8004150:	697b      	ldr	r3, [r7, #20]
 8004152:	e853 3f00 	ldrex	r3, [r3]
 8004156:	613b      	str	r3, [r7, #16]
 8004158:	693b      	ldr	r3, [r7, #16]
 800415a:	f023 0301 	bic.w	r3, r3, #1
 800415e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004160:	68fb      	ldr	r3, [r7, #12]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	3314      	adds	r3, #20
 8004166:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8004168:	623a      	str	r2, [r7, #32]
 800416a:	61fb      	str	r3, [r7, #28]
 800416c:	69f9      	ldr	r1, [r7, #28]
 800416e:	6a3a      	ldr	r2, [r7, #32]
 8004170:	e841 2300 	strex	r3, r2, [r1]
 8004174:	61bb      	str	r3, [r7, #24]
 8004176:	69bb      	ldr	r3, [r7, #24]
 8004178:	2b00      	cmp	r3, #0
 800417a:	d1e5      	bne.n	8004148 <UART_WaitOnFlagUntilTimeout+0x64>
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	2220      	movs	r2, #32
 8004180:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	2220      	movs	r2, #32
 8004188:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800418c:	68fb      	ldr	r3, [r7, #12]
 800418e:	2200      	movs	r2, #0
 8004190:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004194:	2303      	movs	r3, #3
 8004196:	e00f      	b.n	80041b8 <UART_WaitOnFlagUntilTimeout+0xd4>
 8004198:	68fb      	ldr	r3, [r7, #12]
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	681a      	ldr	r2, [r3, #0]
 800419e:	68bb      	ldr	r3, [r7, #8]
 80041a0:	4013      	ands	r3, r2
 80041a2:	68ba      	ldr	r2, [r7, #8]
 80041a4:	429a      	cmp	r2, r3
 80041a6:	bf0c      	ite	eq
 80041a8:	2301      	moveq	r3, #1
 80041aa:	2300      	movne	r3, #0
 80041ac:	b2db      	uxtb	r3, r3
 80041ae:	461a      	mov	r2, r3
 80041b0:	79fb      	ldrb	r3, [r7, #7]
 80041b2:	429a      	cmp	r2, r3
 80041b4:	d09f      	beq.n	80040f6 <UART_WaitOnFlagUntilTimeout+0x12>
 80041b6:	2300      	movs	r3, #0
 80041b8:	4618      	mov	r0, r3
 80041ba:	3740      	adds	r7, #64	; 0x40
 80041bc:	46bd      	mov	sp, r7
 80041be:	bd80      	pop	{r7, pc}

080041c0 <UART_EndRxTransfer>:
 80041c0:	b480      	push	{r7}
 80041c2:	b095      	sub	sp, #84	; 0x54
 80041c4:	af00      	add	r7, sp, #0
 80041c6:	6078      	str	r0, [r7, #4]
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	330c      	adds	r3, #12
 80041ce:	637b      	str	r3, [r7, #52]	; 0x34
 80041d0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80041d2:	e853 3f00 	ldrex	r3, [r3]
 80041d6:	633b      	str	r3, [r7, #48]	; 0x30
 80041d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80041da:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80041de:	64fb      	str	r3, [r7, #76]	; 0x4c
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	330c      	adds	r3, #12
 80041e6:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80041e8:	643a      	str	r2, [r7, #64]	; 0x40
 80041ea:	63fb      	str	r3, [r7, #60]	; 0x3c
 80041ec:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80041ee:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80041f0:	e841 2300 	strex	r3, r2, [r1]
 80041f4:	63bb      	str	r3, [r7, #56]	; 0x38
 80041f6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80041f8:	2b00      	cmp	r3, #0
 80041fa:	d1e5      	bne.n	80041c8 <UART_EndRxTransfer+0x8>
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	3314      	adds	r3, #20
 8004202:	623b      	str	r3, [r7, #32]
 8004204:	6a3b      	ldr	r3, [r7, #32]
 8004206:	e853 3f00 	ldrex	r3, [r3]
 800420a:	61fb      	str	r3, [r7, #28]
 800420c:	69fb      	ldr	r3, [r7, #28]
 800420e:	f023 0301 	bic.w	r3, r3, #1
 8004212:	64bb      	str	r3, [r7, #72]	; 0x48
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	3314      	adds	r3, #20
 800421a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800421c:	62fa      	str	r2, [r7, #44]	; 0x2c
 800421e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004220:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004222:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004224:	e841 2300 	strex	r3, r2, [r1]
 8004228:	627b      	str	r3, [r7, #36]	; 0x24
 800422a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800422c:	2b00      	cmp	r3, #0
 800422e:	d1e5      	bne.n	80041fc <UART_EndRxTransfer+0x3c>
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004234:	2b01      	cmp	r3, #1
 8004236:	d119      	bne.n	800426c <UART_EndRxTransfer+0xac>
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	681b      	ldr	r3, [r3, #0]
 800423c:	330c      	adds	r3, #12
 800423e:	60fb      	str	r3, [r7, #12]
 8004240:	68fb      	ldr	r3, [r7, #12]
 8004242:	e853 3f00 	ldrex	r3, [r3]
 8004246:	60bb      	str	r3, [r7, #8]
 8004248:	68bb      	ldr	r3, [r7, #8]
 800424a:	f023 0310 	bic.w	r3, r3, #16
 800424e:	647b      	str	r3, [r7, #68]	; 0x44
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	330c      	adds	r3, #12
 8004256:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8004258:	61ba      	str	r2, [r7, #24]
 800425a:	617b      	str	r3, [r7, #20]
 800425c:	6979      	ldr	r1, [r7, #20]
 800425e:	69ba      	ldr	r2, [r7, #24]
 8004260:	e841 2300 	strex	r3, r2, [r1]
 8004264:	613b      	str	r3, [r7, #16]
 8004266:	693b      	ldr	r3, [r7, #16]
 8004268:	2b00      	cmp	r3, #0
 800426a:	d1e5      	bne.n	8004238 <UART_EndRxTransfer+0x78>
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	2220      	movs	r2, #32
 8004270:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	2200      	movs	r2, #0
 8004278:	631a      	str	r2, [r3, #48]	; 0x30
 800427a:	bf00      	nop
 800427c:	3754      	adds	r7, #84	; 0x54
 800427e:	46bd      	mov	sp, r7
 8004280:	bc80      	pop	{r7}
 8004282:	4770      	bx	lr

08004284 <UART_DMAAbortOnError>:
 8004284:	b580      	push	{r7, lr}
 8004286:	b084      	sub	sp, #16
 8004288:	af00      	add	r7, sp, #0
 800428a:	6078      	str	r0, [r7, #4]
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004290:	60fb      	str	r3, [r7, #12]
 8004292:	68fb      	ldr	r3, [r7, #12]
 8004294:	2200      	movs	r2, #0
 8004296:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004298:	68fb      	ldr	r3, [r7, #12]
 800429a:	2200      	movs	r2, #0
 800429c:	84da      	strh	r2, [r3, #38]	; 0x26
 800429e:	68f8      	ldr	r0, [r7, #12]
 80042a0:	f7ff ff0c 	bl	80040bc <HAL_UART_ErrorCallback>
 80042a4:	bf00      	nop
 80042a6:	3710      	adds	r7, #16
 80042a8:	46bd      	mov	sp, r7
 80042aa:	bd80      	pop	{r7, pc}

080042ac <UART_Transmit_IT>:
 80042ac:	b480      	push	{r7}
 80042ae:	b085      	sub	sp, #20
 80042b0:	af00      	add	r7, sp, #0
 80042b2:	6078      	str	r0, [r7, #4]
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80042ba:	b2db      	uxtb	r3, r3
 80042bc:	2b21      	cmp	r3, #33	; 0x21
 80042be:	d13e      	bne.n	800433e <UART_Transmit_IT+0x92>
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	689b      	ldr	r3, [r3, #8]
 80042c4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80042c8:	d114      	bne.n	80042f4 <UART_Transmit_IT+0x48>
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	691b      	ldr	r3, [r3, #16]
 80042ce:	2b00      	cmp	r3, #0
 80042d0:	d110      	bne.n	80042f4 <UART_Transmit_IT+0x48>
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	6a1b      	ldr	r3, [r3, #32]
 80042d6:	60fb      	str	r3, [r7, #12]
 80042d8:	68fb      	ldr	r3, [r7, #12]
 80042da:	881b      	ldrh	r3, [r3, #0]
 80042dc:	461a      	mov	r2, r3
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80042e6:	605a      	str	r2, [r3, #4]
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	6a1b      	ldr	r3, [r3, #32]
 80042ec:	1c9a      	adds	r2, r3, #2
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	621a      	str	r2, [r3, #32]
 80042f2:	e008      	b.n	8004306 <UART_Transmit_IT+0x5a>
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	6a1b      	ldr	r3, [r3, #32]
 80042f8:	1c59      	adds	r1, r3, #1
 80042fa:	687a      	ldr	r2, [r7, #4]
 80042fc:	6211      	str	r1, [r2, #32]
 80042fe:	781a      	ldrb	r2, [r3, #0]
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	605a      	str	r2, [r3, #4]
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800430a:	b29b      	uxth	r3, r3
 800430c:	3b01      	subs	r3, #1
 800430e:	b29b      	uxth	r3, r3
 8004310:	687a      	ldr	r2, [r7, #4]
 8004312:	4619      	mov	r1, r3
 8004314:	84d1      	strh	r1, [r2, #38]	; 0x26
 8004316:	2b00      	cmp	r3, #0
 8004318:	d10f      	bne.n	800433a <UART_Transmit_IT+0x8e>
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	681b      	ldr	r3, [r3, #0]
 800431e:	68da      	ldr	r2, [r3, #12]
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004328:	60da      	str	r2, [r3, #12]
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	68da      	ldr	r2, [r3, #12]
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	681b      	ldr	r3, [r3, #0]
 8004334:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004338:	60da      	str	r2, [r3, #12]
 800433a:	2300      	movs	r3, #0
 800433c:	e000      	b.n	8004340 <UART_Transmit_IT+0x94>
 800433e:	2302      	movs	r3, #2
 8004340:	4618      	mov	r0, r3
 8004342:	3714      	adds	r7, #20
 8004344:	46bd      	mov	sp, r7
 8004346:	bc80      	pop	{r7}
 8004348:	4770      	bx	lr

0800434a <UART_EndTransmit_IT>:
 800434a:	b580      	push	{r7, lr}
 800434c:	b082      	sub	sp, #8
 800434e:	af00      	add	r7, sp, #0
 8004350:	6078      	str	r0, [r7, #4]
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	68da      	ldr	r2, [r3, #12]
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	681b      	ldr	r3, [r3, #0]
 800435c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004360:	60da      	str	r2, [r3, #12]
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	2220      	movs	r2, #32
 8004366:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800436a:	6878      	ldr	r0, [r7, #4]
 800436c:	f7ff fe94 	bl	8004098 <HAL_UART_TxCpltCallback>
 8004370:	2300      	movs	r3, #0
 8004372:	4618      	mov	r0, r3
 8004374:	3708      	adds	r7, #8
 8004376:	46bd      	mov	sp, r7
 8004378:	bd80      	pop	{r7, pc}

0800437a <UART_Receive_IT>:
 800437a:	b580      	push	{r7, lr}
 800437c:	b08c      	sub	sp, #48	; 0x30
 800437e:	af00      	add	r7, sp, #0
 8004380:	6078      	str	r0, [r7, #4]
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8004388:	b2db      	uxtb	r3, r3
 800438a:	2b22      	cmp	r3, #34	; 0x22
 800438c:	f040 80ae 	bne.w	80044ec <UART_Receive_IT+0x172>
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	689b      	ldr	r3, [r3, #8]
 8004394:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004398:	d117      	bne.n	80043ca <UART_Receive_IT+0x50>
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	691b      	ldr	r3, [r3, #16]
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d113      	bne.n	80043ca <UART_Receive_IT+0x50>
 80043a2:	2300      	movs	r3, #0
 80043a4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80043aa:	62bb      	str	r3, [r7, #40]	; 0x28
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	685b      	ldr	r3, [r3, #4]
 80043b2:	b29b      	uxth	r3, r3
 80043b4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80043b8:	b29a      	uxth	r2, r3
 80043ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80043bc:	801a      	strh	r2, [r3, #0]
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80043c2:	1c9a      	adds	r2, r3, #2
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	629a      	str	r2, [r3, #40]	; 0x28
 80043c8:	e026      	b.n	8004418 <UART_Receive_IT+0x9e>
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80043ce:	62fb      	str	r3, [r7, #44]	; 0x2c
 80043d0:	2300      	movs	r3, #0
 80043d2:	62bb      	str	r3, [r7, #40]	; 0x28
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	689b      	ldr	r3, [r3, #8]
 80043d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80043dc:	d007      	beq.n	80043ee <UART_Receive_IT+0x74>
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	689b      	ldr	r3, [r3, #8]
 80043e2:	2b00      	cmp	r3, #0
 80043e4:	d10a      	bne.n	80043fc <UART_Receive_IT+0x82>
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	691b      	ldr	r3, [r3, #16]
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	d106      	bne.n	80043fc <UART_Receive_IT+0x82>
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	685b      	ldr	r3, [r3, #4]
 80043f4:	b2da      	uxtb	r2, r3
 80043f6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043f8:	701a      	strb	r2, [r3, #0]
 80043fa:	e008      	b.n	800440e <UART_Receive_IT+0x94>
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	681b      	ldr	r3, [r3, #0]
 8004400:	685b      	ldr	r3, [r3, #4]
 8004402:	b2db      	uxtb	r3, r3
 8004404:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004408:	b2da      	uxtb	r2, r3
 800440a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800440c:	701a      	strb	r2, [r3, #0]
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004412:	1c5a      	adds	r2, r3, #1
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	629a      	str	r2, [r3, #40]	; 0x28
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800441c:	b29b      	uxth	r3, r3
 800441e:	3b01      	subs	r3, #1
 8004420:	b29b      	uxth	r3, r3
 8004422:	687a      	ldr	r2, [r7, #4]
 8004424:	4619      	mov	r1, r3
 8004426:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8004428:	2b00      	cmp	r3, #0
 800442a:	d15d      	bne.n	80044e8 <UART_Receive_IT+0x16e>
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	681b      	ldr	r3, [r3, #0]
 8004430:	68da      	ldr	r2, [r3, #12]
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	f022 0220 	bic.w	r2, r2, #32
 800443a:	60da      	str	r2, [r3, #12]
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	68da      	ldr	r2, [r3, #12]
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800444a:	60da      	str	r2, [r3, #12]
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	681b      	ldr	r3, [r3, #0]
 8004450:	695a      	ldr	r2, [r3, #20]
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	f022 0201 	bic.w	r2, r2, #1
 800445a:	615a      	str	r2, [r3, #20]
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	2220      	movs	r2, #32
 8004460:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	2200      	movs	r2, #0
 8004468:	635a      	str	r2, [r3, #52]	; 0x34
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800446e:	2b01      	cmp	r3, #1
 8004470:	d135      	bne.n	80044de <UART_Receive_IT+0x164>
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	2200      	movs	r2, #0
 8004476:	631a      	str	r2, [r3, #48]	; 0x30
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	330c      	adds	r3, #12
 800447e:	617b      	str	r3, [r7, #20]
 8004480:	697b      	ldr	r3, [r7, #20]
 8004482:	e853 3f00 	ldrex	r3, [r3]
 8004486:	613b      	str	r3, [r7, #16]
 8004488:	693b      	ldr	r3, [r7, #16]
 800448a:	f023 0310 	bic.w	r3, r3, #16
 800448e:	627b      	str	r3, [r7, #36]	; 0x24
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	330c      	adds	r3, #12
 8004496:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004498:	623a      	str	r2, [r7, #32]
 800449a:	61fb      	str	r3, [r7, #28]
 800449c:	69f9      	ldr	r1, [r7, #28]
 800449e:	6a3a      	ldr	r2, [r7, #32]
 80044a0:	e841 2300 	strex	r3, r2, [r1]
 80044a4:	61bb      	str	r3, [r7, #24]
 80044a6:	69bb      	ldr	r3, [r7, #24]
 80044a8:	2b00      	cmp	r3, #0
 80044aa:	d1e5      	bne.n	8004478 <UART_Receive_IT+0xfe>
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	f003 0310 	and.w	r3, r3, #16
 80044b6:	2b10      	cmp	r3, #16
 80044b8:	d10a      	bne.n	80044d0 <UART_Receive_IT+0x156>
 80044ba:	2300      	movs	r3, #0
 80044bc:	60fb      	str	r3, [r7, #12]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	681b      	ldr	r3, [r3, #0]
 80044c2:	681b      	ldr	r3, [r3, #0]
 80044c4:	60fb      	str	r3, [r7, #12]
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	685b      	ldr	r3, [r3, #4]
 80044cc:	60fb      	str	r3, [r7, #12]
 80044ce:	68fb      	ldr	r3, [r7, #12]
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80044d4:	4619      	mov	r1, r3
 80044d6:	6878      	ldr	r0, [r7, #4]
 80044d8:	f7ff fdf9 	bl	80040ce <HAL_UARTEx_RxEventCallback>
 80044dc:	e002      	b.n	80044e4 <UART_Receive_IT+0x16a>
 80044de:	6878      	ldr	r0, [r7, #4]
 80044e0:	f7ff fde3 	bl	80040aa <HAL_UART_RxCpltCallback>
 80044e4:	2300      	movs	r3, #0
 80044e6:	e002      	b.n	80044ee <UART_Receive_IT+0x174>
 80044e8:	2300      	movs	r3, #0
 80044ea:	e000      	b.n	80044ee <UART_Receive_IT+0x174>
 80044ec:	2302      	movs	r3, #2
 80044ee:	4618      	mov	r0, r3
 80044f0:	3730      	adds	r7, #48	; 0x30
 80044f2:	46bd      	mov	sp, r7
 80044f4:	bd80      	pop	{r7, pc}
	...

080044f8 <UART_SetConfig>:
 80044f8:	b580      	push	{r7, lr}
 80044fa:	b084      	sub	sp, #16
 80044fc:	af00      	add	r7, sp, #0
 80044fe:	6078      	str	r0, [r7, #4]
 8004500:	687b      	ldr	r3, [r7, #4]
 8004502:	681b      	ldr	r3, [r3, #0]
 8004504:	691b      	ldr	r3, [r3, #16]
 8004506:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	68da      	ldr	r2, [r3, #12]
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	681b      	ldr	r3, [r3, #0]
 8004512:	430a      	orrs	r2, r1
 8004514:	611a      	str	r2, [r3, #16]
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	689a      	ldr	r2, [r3, #8]
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	691b      	ldr	r3, [r3, #16]
 800451e:	431a      	orrs	r2, r3
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	695b      	ldr	r3, [r3, #20]
 8004524:	4313      	orrs	r3, r2
 8004526:	60bb      	str	r3, [r7, #8]
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	68db      	ldr	r3, [r3, #12]
 800452e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8004532:	f023 030c 	bic.w	r3, r3, #12
 8004536:	687a      	ldr	r2, [r7, #4]
 8004538:	6812      	ldr	r2, [r2, #0]
 800453a:	68b9      	ldr	r1, [r7, #8]
 800453c:	430b      	orrs	r3, r1
 800453e:	60d3      	str	r3, [r2, #12]
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	695b      	ldr	r3, [r3, #20]
 8004546:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	699a      	ldr	r2, [r3, #24]
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	430a      	orrs	r2, r1
 8004554:	615a      	str	r2, [r3, #20]
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	4a2c      	ldr	r2, [pc, #176]	; (800460c <UART_SetConfig+0x114>)
 800455c:	4293      	cmp	r3, r2
 800455e:	d103      	bne.n	8004568 <UART_SetConfig+0x70>
 8004560:	f7fe fa9c 	bl	8002a9c <HAL_RCC_GetPCLK2Freq>
 8004564:	60f8      	str	r0, [r7, #12]
 8004566:	e002      	b.n	800456e <UART_SetConfig+0x76>
 8004568:	f7fe fa84 	bl	8002a74 <HAL_RCC_GetPCLK1Freq>
 800456c:	60f8      	str	r0, [r7, #12]
 800456e:	68fa      	ldr	r2, [r7, #12]
 8004570:	4613      	mov	r3, r2
 8004572:	009b      	lsls	r3, r3, #2
 8004574:	4413      	add	r3, r2
 8004576:	009a      	lsls	r2, r3, #2
 8004578:	441a      	add	r2, r3
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	685b      	ldr	r3, [r3, #4]
 800457e:	009b      	lsls	r3, r3, #2
 8004580:	fbb2 f3f3 	udiv	r3, r2, r3
 8004584:	4a22      	ldr	r2, [pc, #136]	; (8004610 <UART_SetConfig+0x118>)
 8004586:	fba2 2303 	umull	r2, r3, r2, r3
 800458a:	095b      	lsrs	r3, r3, #5
 800458c:	0119      	lsls	r1, r3, #4
 800458e:	68fa      	ldr	r2, [r7, #12]
 8004590:	4613      	mov	r3, r2
 8004592:	009b      	lsls	r3, r3, #2
 8004594:	4413      	add	r3, r2
 8004596:	009a      	lsls	r2, r3, #2
 8004598:	441a      	add	r2, r3
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	685b      	ldr	r3, [r3, #4]
 800459e:	009b      	lsls	r3, r3, #2
 80045a0:	fbb2 f2f3 	udiv	r2, r2, r3
 80045a4:	4b1a      	ldr	r3, [pc, #104]	; (8004610 <UART_SetConfig+0x118>)
 80045a6:	fba3 0302 	umull	r0, r3, r3, r2
 80045aa:	095b      	lsrs	r3, r3, #5
 80045ac:	2064      	movs	r0, #100	; 0x64
 80045ae:	fb00 f303 	mul.w	r3, r0, r3
 80045b2:	1ad3      	subs	r3, r2, r3
 80045b4:	011b      	lsls	r3, r3, #4
 80045b6:	3332      	adds	r3, #50	; 0x32
 80045b8:	4a15      	ldr	r2, [pc, #84]	; (8004610 <UART_SetConfig+0x118>)
 80045ba:	fba2 2303 	umull	r2, r3, r2, r3
 80045be:	095b      	lsrs	r3, r3, #5
 80045c0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80045c4:	4419      	add	r1, r3
 80045c6:	68fa      	ldr	r2, [r7, #12]
 80045c8:	4613      	mov	r3, r2
 80045ca:	009b      	lsls	r3, r3, #2
 80045cc:	4413      	add	r3, r2
 80045ce:	009a      	lsls	r2, r3, #2
 80045d0:	441a      	add	r2, r3
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	685b      	ldr	r3, [r3, #4]
 80045d6:	009b      	lsls	r3, r3, #2
 80045d8:	fbb2 f2f3 	udiv	r2, r2, r3
 80045dc:	4b0c      	ldr	r3, [pc, #48]	; (8004610 <UART_SetConfig+0x118>)
 80045de:	fba3 0302 	umull	r0, r3, r3, r2
 80045e2:	095b      	lsrs	r3, r3, #5
 80045e4:	2064      	movs	r0, #100	; 0x64
 80045e6:	fb00 f303 	mul.w	r3, r0, r3
 80045ea:	1ad3      	subs	r3, r2, r3
 80045ec:	011b      	lsls	r3, r3, #4
 80045ee:	3332      	adds	r3, #50	; 0x32
 80045f0:	4a07      	ldr	r2, [pc, #28]	; (8004610 <UART_SetConfig+0x118>)
 80045f2:	fba2 2303 	umull	r2, r3, r2, r3
 80045f6:	095b      	lsrs	r3, r3, #5
 80045f8:	f003 020f 	and.w	r2, r3, #15
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	440a      	add	r2, r1
 8004602:	609a      	str	r2, [r3, #8]
 8004604:	bf00      	nop
 8004606:	3710      	adds	r7, #16
 8004608:	46bd      	mov	sp, r7
 800460a:	bd80      	pop	{r7, pc}
 800460c:	40013800 	.word	0x40013800
 8004610:	51eb851f 	.word	0x51eb851f

08004614 <__errno>:
 8004614:	4b01      	ldr	r3, [pc, #4]	; (800461c <__errno+0x8>)
 8004616:	6818      	ldr	r0, [r3, #0]
 8004618:	4770      	bx	lr
 800461a:	bf00      	nop
 800461c:	2000006c 	.word	0x2000006c

08004620 <__libc_init_array>:
 8004620:	b570      	push	{r4, r5, r6, lr}
 8004622:	2600      	movs	r6, #0
 8004624:	4d0c      	ldr	r5, [pc, #48]	; (8004658 <__libc_init_array+0x38>)
 8004626:	4c0d      	ldr	r4, [pc, #52]	; (800465c <__libc_init_array+0x3c>)
 8004628:	1b64      	subs	r4, r4, r5
 800462a:	10a4      	asrs	r4, r4, #2
 800462c:	42a6      	cmp	r6, r4
 800462e:	d109      	bne.n	8004644 <__libc_init_array+0x24>
 8004630:	f000 fc6c 	bl	8004f0c <_init>
 8004634:	2600      	movs	r6, #0
 8004636:	4d0a      	ldr	r5, [pc, #40]	; (8004660 <__libc_init_array+0x40>)
 8004638:	4c0a      	ldr	r4, [pc, #40]	; (8004664 <__libc_init_array+0x44>)
 800463a:	1b64      	subs	r4, r4, r5
 800463c:	10a4      	asrs	r4, r4, #2
 800463e:	42a6      	cmp	r6, r4
 8004640:	d105      	bne.n	800464e <__libc_init_array+0x2e>
 8004642:	bd70      	pop	{r4, r5, r6, pc}
 8004644:	f855 3b04 	ldr.w	r3, [r5], #4
 8004648:	4798      	blx	r3
 800464a:	3601      	adds	r6, #1
 800464c:	e7ee      	b.n	800462c <__libc_init_array+0xc>
 800464e:	f855 3b04 	ldr.w	r3, [r5], #4
 8004652:	4798      	blx	r3
 8004654:	3601      	adds	r6, #1
 8004656:	e7f2      	b.n	800463e <__libc_init_array+0x1e>
 8004658:	08004fa8 	.word	0x08004fa8
 800465c:	08004fa8 	.word	0x08004fa8
 8004660:	08004fa8 	.word	0x08004fa8
 8004664:	08004fac 	.word	0x08004fac

08004668 <malloc>:
 8004668:	4b02      	ldr	r3, [pc, #8]	; (8004674 <malloc+0xc>)
 800466a:	4601      	mov	r1, r0
 800466c:	6818      	ldr	r0, [r3, #0]
 800466e:	f000 b85f 	b.w	8004730 <_malloc_r>
 8004672:	bf00      	nop
 8004674:	2000006c 	.word	0x2000006c

08004678 <free>:
 8004678:	4b02      	ldr	r3, [pc, #8]	; (8004684 <free+0xc>)
 800467a:	4601      	mov	r1, r0
 800467c:	6818      	ldr	r0, [r3, #0]
 800467e:	f000 b80b 	b.w	8004698 <_free_r>
 8004682:	bf00      	nop
 8004684:	2000006c 	.word	0x2000006c

08004688 <memset>:
 8004688:	4603      	mov	r3, r0
 800468a:	4402      	add	r2, r0
 800468c:	4293      	cmp	r3, r2
 800468e:	d100      	bne.n	8004692 <memset+0xa>
 8004690:	4770      	bx	lr
 8004692:	f803 1b01 	strb.w	r1, [r3], #1
 8004696:	e7f9      	b.n	800468c <memset+0x4>

08004698 <_free_r>:
 8004698:	b538      	push	{r3, r4, r5, lr}
 800469a:	4605      	mov	r5, r0
 800469c:	2900      	cmp	r1, #0
 800469e:	d043      	beq.n	8004728 <_free_r+0x90>
 80046a0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80046a4:	1f0c      	subs	r4, r1, #4
 80046a6:	2b00      	cmp	r3, #0
 80046a8:	bfb8      	it	lt
 80046aa:	18e4      	addlt	r4, r4, r3
 80046ac:	f000 f8ca 	bl	8004844 <__malloc_lock>
 80046b0:	4a1e      	ldr	r2, [pc, #120]	; (800472c <_free_r+0x94>)
 80046b2:	6813      	ldr	r3, [r2, #0]
 80046b4:	4610      	mov	r0, r2
 80046b6:	b933      	cbnz	r3, 80046c6 <_free_r+0x2e>
 80046b8:	6063      	str	r3, [r4, #4]
 80046ba:	6014      	str	r4, [r2, #0]
 80046bc:	4628      	mov	r0, r5
 80046be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80046c2:	f000 b8c5 	b.w	8004850 <__malloc_unlock>
 80046c6:	42a3      	cmp	r3, r4
 80046c8:	d90a      	bls.n	80046e0 <_free_r+0x48>
 80046ca:	6821      	ldr	r1, [r4, #0]
 80046cc:	1862      	adds	r2, r4, r1
 80046ce:	4293      	cmp	r3, r2
 80046d0:	bf01      	itttt	eq
 80046d2:	681a      	ldreq	r2, [r3, #0]
 80046d4:	685b      	ldreq	r3, [r3, #4]
 80046d6:	1852      	addeq	r2, r2, r1
 80046d8:	6022      	streq	r2, [r4, #0]
 80046da:	6063      	str	r3, [r4, #4]
 80046dc:	6004      	str	r4, [r0, #0]
 80046de:	e7ed      	b.n	80046bc <_free_r+0x24>
 80046e0:	461a      	mov	r2, r3
 80046e2:	685b      	ldr	r3, [r3, #4]
 80046e4:	b10b      	cbz	r3, 80046ea <_free_r+0x52>
 80046e6:	42a3      	cmp	r3, r4
 80046e8:	d9fa      	bls.n	80046e0 <_free_r+0x48>
 80046ea:	6811      	ldr	r1, [r2, #0]
 80046ec:	1850      	adds	r0, r2, r1
 80046ee:	42a0      	cmp	r0, r4
 80046f0:	d10b      	bne.n	800470a <_free_r+0x72>
 80046f2:	6820      	ldr	r0, [r4, #0]
 80046f4:	4401      	add	r1, r0
 80046f6:	1850      	adds	r0, r2, r1
 80046f8:	4283      	cmp	r3, r0
 80046fa:	6011      	str	r1, [r2, #0]
 80046fc:	d1de      	bne.n	80046bc <_free_r+0x24>
 80046fe:	6818      	ldr	r0, [r3, #0]
 8004700:	685b      	ldr	r3, [r3, #4]
 8004702:	4401      	add	r1, r0
 8004704:	6011      	str	r1, [r2, #0]
 8004706:	6053      	str	r3, [r2, #4]
 8004708:	e7d8      	b.n	80046bc <_free_r+0x24>
 800470a:	d902      	bls.n	8004712 <_free_r+0x7a>
 800470c:	230c      	movs	r3, #12
 800470e:	602b      	str	r3, [r5, #0]
 8004710:	e7d4      	b.n	80046bc <_free_r+0x24>
 8004712:	6820      	ldr	r0, [r4, #0]
 8004714:	1821      	adds	r1, r4, r0
 8004716:	428b      	cmp	r3, r1
 8004718:	bf01      	itttt	eq
 800471a:	6819      	ldreq	r1, [r3, #0]
 800471c:	685b      	ldreq	r3, [r3, #4]
 800471e:	1809      	addeq	r1, r1, r0
 8004720:	6021      	streq	r1, [r4, #0]
 8004722:	6063      	str	r3, [r4, #4]
 8004724:	6054      	str	r4, [r2, #4]
 8004726:	e7c9      	b.n	80046bc <_free_r+0x24>
 8004728:	bd38      	pop	{r3, r4, r5, pc}
 800472a:	bf00      	nop
 800472c:	20000130 	.word	0x20000130

08004730 <_malloc_r>:
 8004730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004732:	1ccd      	adds	r5, r1, #3
 8004734:	f025 0503 	bic.w	r5, r5, #3
 8004738:	3508      	adds	r5, #8
 800473a:	2d0c      	cmp	r5, #12
 800473c:	bf38      	it	cc
 800473e:	250c      	movcc	r5, #12
 8004740:	2d00      	cmp	r5, #0
 8004742:	4606      	mov	r6, r0
 8004744:	db01      	blt.n	800474a <_malloc_r+0x1a>
 8004746:	42a9      	cmp	r1, r5
 8004748:	d903      	bls.n	8004752 <_malloc_r+0x22>
 800474a:	230c      	movs	r3, #12
 800474c:	6033      	str	r3, [r6, #0]
 800474e:	2000      	movs	r0, #0
 8004750:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004752:	f000 f877 	bl	8004844 <__malloc_lock>
 8004756:	4921      	ldr	r1, [pc, #132]	; (80047dc <_malloc_r+0xac>)
 8004758:	680a      	ldr	r2, [r1, #0]
 800475a:	4614      	mov	r4, r2
 800475c:	b99c      	cbnz	r4, 8004786 <_malloc_r+0x56>
 800475e:	4f20      	ldr	r7, [pc, #128]	; (80047e0 <_malloc_r+0xb0>)
 8004760:	683b      	ldr	r3, [r7, #0]
 8004762:	b923      	cbnz	r3, 800476e <_malloc_r+0x3e>
 8004764:	4621      	mov	r1, r4
 8004766:	4630      	mov	r0, r6
 8004768:	f000 f83c 	bl	80047e4 <_sbrk_r>
 800476c:	6038      	str	r0, [r7, #0]
 800476e:	4629      	mov	r1, r5
 8004770:	4630      	mov	r0, r6
 8004772:	f000 f837 	bl	80047e4 <_sbrk_r>
 8004776:	1c43      	adds	r3, r0, #1
 8004778:	d123      	bne.n	80047c2 <_malloc_r+0x92>
 800477a:	230c      	movs	r3, #12
 800477c:	4630      	mov	r0, r6
 800477e:	6033      	str	r3, [r6, #0]
 8004780:	f000 f866 	bl	8004850 <__malloc_unlock>
 8004784:	e7e3      	b.n	800474e <_malloc_r+0x1e>
 8004786:	6823      	ldr	r3, [r4, #0]
 8004788:	1b5b      	subs	r3, r3, r5
 800478a:	d417      	bmi.n	80047bc <_malloc_r+0x8c>
 800478c:	2b0b      	cmp	r3, #11
 800478e:	d903      	bls.n	8004798 <_malloc_r+0x68>
 8004790:	6023      	str	r3, [r4, #0]
 8004792:	441c      	add	r4, r3
 8004794:	6025      	str	r5, [r4, #0]
 8004796:	e004      	b.n	80047a2 <_malloc_r+0x72>
 8004798:	6863      	ldr	r3, [r4, #4]
 800479a:	42a2      	cmp	r2, r4
 800479c:	bf0c      	ite	eq
 800479e:	600b      	streq	r3, [r1, #0]
 80047a0:	6053      	strne	r3, [r2, #4]
 80047a2:	4630      	mov	r0, r6
 80047a4:	f000 f854 	bl	8004850 <__malloc_unlock>
 80047a8:	f104 000b 	add.w	r0, r4, #11
 80047ac:	1d23      	adds	r3, r4, #4
 80047ae:	f020 0007 	bic.w	r0, r0, #7
 80047b2:	1ac2      	subs	r2, r0, r3
 80047b4:	d0cc      	beq.n	8004750 <_malloc_r+0x20>
 80047b6:	1a1b      	subs	r3, r3, r0
 80047b8:	50a3      	str	r3, [r4, r2]
 80047ba:	e7c9      	b.n	8004750 <_malloc_r+0x20>
 80047bc:	4622      	mov	r2, r4
 80047be:	6864      	ldr	r4, [r4, #4]
 80047c0:	e7cc      	b.n	800475c <_malloc_r+0x2c>
 80047c2:	1cc4      	adds	r4, r0, #3
 80047c4:	f024 0403 	bic.w	r4, r4, #3
 80047c8:	42a0      	cmp	r0, r4
 80047ca:	d0e3      	beq.n	8004794 <_malloc_r+0x64>
 80047cc:	1a21      	subs	r1, r4, r0
 80047ce:	4630      	mov	r0, r6
 80047d0:	f000 f808 	bl	80047e4 <_sbrk_r>
 80047d4:	3001      	adds	r0, #1
 80047d6:	d1dd      	bne.n	8004794 <_malloc_r+0x64>
 80047d8:	e7cf      	b.n	800477a <_malloc_r+0x4a>
 80047da:	bf00      	nop
 80047dc:	20000130 	.word	0x20000130
 80047e0:	20000134 	.word	0x20000134

080047e4 <_sbrk_r>:
 80047e4:	b538      	push	{r3, r4, r5, lr}
 80047e6:	2300      	movs	r3, #0
 80047e8:	4d05      	ldr	r5, [pc, #20]	; (8004800 <_sbrk_r+0x1c>)
 80047ea:	4604      	mov	r4, r0
 80047ec:	4608      	mov	r0, r1
 80047ee:	602b      	str	r3, [r5, #0]
 80047f0:	f7fd f90c 	bl	8001a0c <_sbrk>
 80047f4:	1c43      	adds	r3, r0, #1
 80047f6:	d102      	bne.n	80047fe <_sbrk_r+0x1a>
 80047f8:	682b      	ldr	r3, [r5, #0]
 80047fa:	b103      	cbz	r3, 80047fe <_sbrk_r+0x1a>
 80047fc:	6023      	str	r3, [r4, #0]
 80047fe:	bd38      	pop	{r3, r4, r5, pc}
 8004800:	20000258 	.word	0x20000258

08004804 <siprintf>:
 8004804:	b40e      	push	{r1, r2, r3}
 8004806:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800480a:	b500      	push	{lr}
 800480c:	b09c      	sub	sp, #112	; 0x70
 800480e:	ab1d      	add	r3, sp, #116	; 0x74
 8004810:	9002      	str	r0, [sp, #8]
 8004812:	9006      	str	r0, [sp, #24]
 8004814:	9107      	str	r1, [sp, #28]
 8004816:	9104      	str	r1, [sp, #16]
 8004818:	4808      	ldr	r0, [pc, #32]	; (800483c <siprintf+0x38>)
 800481a:	4909      	ldr	r1, [pc, #36]	; (8004840 <siprintf+0x3c>)
 800481c:	f853 2b04 	ldr.w	r2, [r3], #4
 8004820:	9105      	str	r1, [sp, #20]
 8004822:	6800      	ldr	r0, [r0, #0]
 8004824:	a902      	add	r1, sp, #8
 8004826:	9301      	str	r3, [sp, #4]
 8004828:	f000 f874 	bl	8004914 <_svfiprintf_r>
 800482c:	2200      	movs	r2, #0
 800482e:	9b02      	ldr	r3, [sp, #8]
 8004830:	701a      	strb	r2, [r3, #0]
 8004832:	b01c      	add	sp, #112	; 0x70
 8004834:	f85d eb04 	ldr.w	lr, [sp], #4
 8004838:	b003      	add	sp, #12
 800483a:	4770      	bx	lr
 800483c:	2000006c 	.word	0x2000006c
 8004840:	ffff0208 	.word	0xffff0208

08004844 <__malloc_lock>:
 8004844:	4801      	ldr	r0, [pc, #4]	; (800484c <__malloc_lock+0x8>)
 8004846:	f000 bafb 	b.w	8004e40 <__retarget_lock_acquire_recursive>
 800484a:	bf00      	nop
 800484c:	20000260 	.word	0x20000260

08004850 <__malloc_unlock>:
 8004850:	4801      	ldr	r0, [pc, #4]	; (8004858 <__malloc_unlock+0x8>)
 8004852:	f000 baf6 	b.w	8004e42 <__retarget_lock_release_recursive>
 8004856:	bf00      	nop
 8004858:	20000260 	.word	0x20000260

0800485c <__ssputs_r>:
 800485c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004860:	688e      	ldr	r6, [r1, #8]
 8004862:	4682      	mov	sl, r0
 8004864:	429e      	cmp	r6, r3
 8004866:	460c      	mov	r4, r1
 8004868:	4690      	mov	r8, r2
 800486a:	461f      	mov	r7, r3
 800486c:	d838      	bhi.n	80048e0 <__ssputs_r+0x84>
 800486e:	898a      	ldrh	r2, [r1, #12]
 8004870:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004874:	d032      	beq.n	80048dc <__ssputs_r+0x80>
 8004876:	6825      	ldr	r5, [r4, #0]
 8004878:	6909      	ldr	r1, [r1, #16]
 800487a:	3301      	adds	r3, #1
 800487c:	eba5 0901 	sub.w	r9, r5, r1
 8004880:	6965      	ldr	r5, [r4, #20]
 8004882:	444b      	add	r3, r9
 8004884:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004888:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800488c:	106d      	asrs	r5, r5, #1
 800488e:	429d      	cmp	r5, r3
 8004890:	bf38      	it	cc
 8004892:	461d      	movcc	r5, r3
 8004894:	0553      	lsls	r3, r2, #21
 8004896:	d531      	bpl.n	80048fc <__ssputs_r+0xa0>
 8004898:	4629      	mov	r1, r5
 800489a:	f7ff ff49 	bl	8004730 <_malloc_r>
 800489e:	4606      	mov	r6, r0
 80048a0:	b950      	cbnz	r0, 80048b8 <__ssputs_r+0x5c>
 80048a2:	230c      	movs	r3, #12
 80048a4:	f04f 30ff 	mov.w	r0, #4294967295
 80048a8:	f8ca 3000 	str.w	r3, [sl]
 80048ac:	89a3      	ldrh	r3, [r4, #12]
 80048ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80048b2:	81a3      	strh	r3, [r4, #12]
 80048b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80048b8:	464a      	mov	r2, r9
 80048ba:	6921      	ldr	r1, [r4, #16]
 80048bc:	f000 fad0 	bl	8004e60 <memcpy>
 80048c0:	89a3      	ldrh	r3, [r4, #12]
 80048c2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80048c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80048ca:	81a3      	strh	r3, [r4, #12]
 80048cc:	6126      	str	r6, [r4, #16]
 80048ce:	444e      	add	r6, r9
 80048d0:	6026      	str	r6, [r4, #0]
 80048d2:	463e      	mov	r6, r7
 80048d4:	6165      	str	r5, [r4, #20]
 80048d6:	eba5 0509 	sub.w	r5, r5, r9
 80048da:	60a5      	str	r5, [r4, #8]
 80048dc:	42be      	cmp	r6, r7
 80048de:	d900      	bls.n	80048e2 <__ssputs_r+0x86>
 80048e0:	463e      	mov	r6, r7
 80048e2:	4632      	mov	r2, r6
 80048e4:	4641      	mov	r1, r8
 80048e6:	6820      	ldr	r0, [r4, #0]
 80048e8:	f000 fac8 	bl	8004e7c <memmove>
 80048ec:	68a3      	ldr	r3, [r4, #8]
 80048ee:	6822      	ldr	r2, [r4, #0]
 80048f0:	1b9b      	subs	r3, r3, r6
 80048f2:	4432      	add	r2, r6
 80048f4:	2000      	movs	r0, #0
 80048f6:	60a3      	str	r3, [r4, #8]
 80048f8:	6022      	str	r2, [r4, #0]
 80048fa:	e7db      	b.n	80048b4 <__ssputs_r+0x58>
 80048fc:	462a      	mov	r2, r5
 80048fe:	f000 fad7 	bl	8004eb0 <_realloc_r>
 8004902:	4606      	mov	r6, r0
 8004904:	2800      	cmp	r0, #0
 8004906:	d1e1      	bne.n	80048cc <__ssputs_r+0x70>
 8004908:	4650      	mov	r0, sl
 800490a:	6921      	ldr	r1, [r4, #16]
 800490c:	f7ff fec4 	bl	8004698 <_free_r>
 8004910:	e7c7      	b.n	80048a2 <__ssputs_r+0x46>
	...

08004914 <_svfiprintf_r>:
 8004914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004918:	4698      	mov	r8, r3
 800491a:	898b      	ldrh	r3, [r1, #12]
 800491c:	4607      	mov	r7, r0
 800491e:	061b      	lsls	r3, r3, #24
 8004920:	460d      	mov	r5, r1
 8004922:	4614      	mov	r4, r2
 8004924:	b09d      	sub	sp, #116	; 0x74
 8004926:	d50e      	bpl.n	8004946 <_svfiprintf_r+0x32>
 8004928:	690b      	ldr	r3, [r1, #16]
 800492a:	b963      	cbnz	r3, 8004946 <_svfiprintf_r+0x32>
 800492c:	2140      	movs	r1, #64	; 0x40
 800492e:	f7ff feff 	bl	8004730 <_malloc_r>
 8004932:	6028      	str	r0, [r5, #0]
 8004934:	6128      	str	r0, [r5, #16]
 8004936:	b920      	cbnz	r0, 8004942 <_svfiprintf_r+0x2e>
 8004938:	230c      	movs	r3, #12
 800493a:	603b      	str	r3, [r7, #0]
 800493c:	f04f 30ff 	mov.w	r0, #4294967295
 8004940:	e0d1      	b.n	8004ae6 <_svfiprintf_r+0x1d2>
 8004942:	2340      	movs	r3, #64	; 0x40
 8004944:	616b      	str	r3, [r5, #20]
 8004946:	2300      	movs	r3, #0
 8004948:	9309      	str	r3, [sp, #36]	; 0x24
 800494a:	2320      	movs	r3, #32
 800494c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004950:	2330      	movs	r3, #48	; 0x30
 8004952:	f04f 0901 	mov.w	r9, #1
 8004956:	f8cd 800c 	str.w	r8, [sp, #12]
 800495a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004b00 <_svfiprintf_r+0x1ec>
 800495e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004962:	4623      	mov	r3, r4
 8004964:	469a      	mov	sl, r3
 8004966:	f813 2b01 	ldrb.w	r2, [r3], #1
 800496a:	b10a      	cbz	r2, 8004970 <_svfiprintf_r+0x5c>
 800496c:	2a25      	cmp	r2, #37	; 0x25
 800496e:	d1f9      	bne.n	8004964 <_svfiprintf_r+0x50>
 8004970:	ebba 0b04 	subs.w	fp, sl, r4
 8004974:	d00b      	beq.n	800498e <_svfiprintf_r+0x7a>
 8004976:	465b      	mov	r3, fp
 8004978:	4622      	mov	r2, r4
 800497a:	4629      	mov	r1, r5
 800497c:	4638      	mov	r0, r7
 800497e:	f7ff ff6d 	bl	800485c <__ssputs_r>
 8004982:	3001      	adds	r0, #1
 8004984:	f000 80aa 	beq.w	8004adc <_svfiprintf_r+0x1c8>
 8004988:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800498a:	445a      	add	r2, fp
 800498c:	9209      	str	r2, [sp, #36]	; 0x24
 800498e:	f89a 3000 	ldrb.w	r3, [sl]
 8004992:	2b00      	cmp	r3, #0
 8004994:	f000 80a2 	beq.w	8004adc <_svfiprintf_r+0x1c8>
 8004998:	2300      	movs	r3, #0
 800499a:	f04f 32ff 	mov.w	r2, #4294967295
 800499e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80049a2:	f10a 0a01 	add.w	sl, sl, #1
 80049a6:	9304      	str	r3, [sp, #16]
 80049a8:	9307      	str	r3, [sp, #28]
 80049aa:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80049ae:	931a      	str	r3, [sp, #104]	; 0x68
 80049b0:	4654      	mov	r4, sl
 80049b2:	2205      	movs	r2, #5
 80049b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80049b8:	4851      	ldr	r0, [pc, #324]	; (8004b00 <_svfiprintf_r+0x1ec>)
 80049ba:	f000 fa43 	bl	8004e44 <memchr>
 80049be:	9a04      	ldr	r2, [sp, #16]
 80049c0:	b9d8      	cbnz	r0, 80049fa <_svfiprintf_r+0xe6>
 80049c2:	06d0      	lsls	r0, r2, #27
 80049c4:	bf44      	itt	mi
 80049c6:	2320      	movmi	r3, #32
 80049c8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80049cc:	0711      	lsls	r1, r2, #28
 80049ce:	bf44      	itt	mi
 80049d0:	232b      	movmi	r3, #43	; 0x2b
 80049d2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80049d6:	f89a 3000 	ldrb.w	r3, [sl]
 80049da:	2b2a      	cmp	r3, #42	; 0x2a
 80049dc:	d015      	beq.n	8004a0a <_svfiprintf_r+0xf6>
 80049de:	4654      	mov	r4, sl
 80049e0:	2000      	movs	r0, #0
 80049e2:	f04f 0c0a 	mov.w	ip, #10
 80049e6:	9a07      	ldr	r2, [sp, #28]
 80049e8:	4621      	mov	r1, r4
 80049ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80049ee:	3b30      	subs	r3, #48	; 0x30
 80049f0:	2b09      	cmp	r3, #9
 80049f2:	d94e      	bls.n	8004a92 <_svfiprintf_r+0x17e>
 80049f4:	b1b0      	cbz	r0, 8004a24 <_svfiprintf_r+0x110>
 80049f6:	9207      	str	r2, [sp, #28]
 80049f8:	e014      	b.n	8004a24 <_svfiprintf_r+0x110>
 80049fa:	eba0 0308 	sub.w	r3, r0, r8
 80049fe:	fa09 f303 	lsl.w	r3, r9, r3
 8004a02:	4313      	orrs	r3, r2
 8004a04:	46a2      	mov	sl, r4
 8004a06:	9304      	str	r3, [sp, #16]
 8004a08:	e7d2      	b.n	80049b0 <_svfiprintf_r+0x9c>
 8004a0a:	9b03      	ldr	r3, [sp, #12]
 8004a0c:	1d19      	adds	r1, r3, #4
 8004a0e:	681b      	ldr	r3, [r3, #0]
 8004a10:	9103      	str	r1, [sp, #12]
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	bfbb      	ittet	lt
 8004a16:	425b      	neglt	r3, r3
 8004a18:	f042 0202 	orrlt.w	r2, r2, #2
 8004a1c:	9307      	strge	r3, [sp, #28]
 8004a1e:	9307      	strlt	r3, [sp, #28]
 8004a20:	bfb8      	it	lt
 8004a22:	9204      	strlt	r2, [sp, #16]
 8004a24:	7823      	ldrb	r3, [r4, #0]
 8004a26:	2b2e      	cmp	r3, #46	; 0x2e
 8004a28:	d10c      	bne.n	8004a44 <_svfiprintf_r+0x130>
 8004a2a:	7863      	ldrb	r3, [r4, #1]
 8004a2c:	2b2a      	cmp	r3, #42	; 0x2a
 8004a2e:	d135      	bne.n	8004a9c <_svfiprintf_r+0x188>
 8004a30:	9b03      	ldr	r3, [sp, #12]
 8004a32:	3402      	adds	r4, #2
 8004a34:	1d1a      	adds	r2, r3, #4
 8004a36:	681b      	ldr	r3, [r3, #0]
 8004a38:	9203      	str	r2, [sp, #12]
 8004a3a:	2b00      	cmp	r3, #0
 8004a3c:	bfb8      	it	lt
 8004a3e:	f04f 33ff 	movlt.w	r3, #4294967295
 8004a42:	9305      	str	r3, [sp, #20]
 8004a44:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004b10 <_svfiprintf_r+0x1fc>
 8004a48:	2203      	movs	r2, #3
 8004a4a:	4650      	mov	r0, sl
 8004a4c:	7821      	ldrb	r1, [r4, #0]
 8004a4e:	f000 f9f9 	bl	8004e44 <memchr>
 8004a52:	b140      	cbz	r0, 8004a66 <_svfiprintf_r+0x152>
 8004a54:	2340      	movs	r3, #64	; 0x40
 8004a56:	eba0 000a 	sub.w	r0, r0, sl
 8004a5a:	fa03 f000 	lsl.w	r0, r3, r0
 8004a5e:	9b04      	ldr	r3, [sp, #16]
 8004a60:	3401      	adds	r4, #1
 8004a62:	4303      	orrs	r3, r0
 8004a64:	9304      	str	r3, [sp, #16]
 8004a66:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004a6a:	2206      	movs	r2, #6
 8004a6c:	4825      	ldr	r0, [pc, #148]	; (8004b04 <_svfiprintf_r+0x1f0>)
 8004a6e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004a72:	f000 f9e7 	bl	8004e44 <memchr>
 8004a76:	2800      	cmp	r0, #0
 8004a78:	d038      	beq.n	8004aec <_svfiprintf_r+0x1d8>
 8004a7a:	4b23      	ldr	r3, [pc, #140]	; (8004b08 <_svfiprintf_r+0x1f4>)
 8004a7c:	bb1b      	cbnz	r3, 8004ac6 <_svfiprintf_r+0x1b2>
 8004a7e:	9b03      	ldr	r3, [sp, #12]
 8004a80:	3307      	adds	r3, #7
 8004a82:	f023 0307 	bic.w	r3, r3, #7
 8004a86:	3308      	adds	r3, #8
 8004a88:	9303      	str	r3, [sp, #12]
 8004a8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a8c:	4433      	add	r3, r6
 8004a8e:	9309      	str	r3, [sp, #36]	; 0x24
 8004a90:	e767      	b.n	8004962 <_svfiprintf_r+0x4e>
 8004a92:	460c      	mov	r4, r1
 8004a94:	2001      	movs	r0, #1
 8004a96:	fb0c 3202 	mla	r2, ip, r2, r3
 8004a9a:	e7a5      	b.n	80049e8 <_svfiprintf_r+0xd4>
 8004a9c:	2300      	movs	r3, #0
 8004a9e:	f04f 0c0a 	mov.w	ip, #10
 8004aa2:	4619      	mov	r1, r3
 8004aa4:	3401      	adds	r4, #1
 8004aa6:	9305      	str	r3, [sp, #20]
 8004aa8:	4620      	mov	r0, r4
 8004aaa:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004aae:	3a30      	subs	r2, #48	; 0x30
 8004ab0:	2a09      	cmp	r2, #9
 8004ab2:	d903      	bls.n	8004abc <_svfiprintf_r+0x1a8>
 8004ab4:	2b00      	cmp	r3, #0
 8004ab6:	d0c5      	beq.n	8004a44 <_svfiprintf_r+0x130>
 8004ab8:	9105      	str	r1, [sp, #20]
 8004aba:	e7c3      	b.n	8004a44 <_svfiprintf_r+0x130>
 8004abc:	4604      	mov	r4, r0
 8004abe:	2301      	movs	r3, #1
 8004ac0:	fb0c 2101 	mla	r1, ip, r1, r2
 8004ac4:	e7f0      	b.n	8004aa8 <_svfiprintf_r+0x194>
 8004ac6:	ab03      	add	r3, sp, #12
 8004ac8:	9300      	str	r3, [sp, #0]
 8004aca:	462a      	mov	r2, r5
 8004acc:	4638      	mov	r0, r7
 8004ace:	4b0f      	ldr	r3, [pc, #60]	; (8004b0c <_svfiprintf_r+0x1f8>)
 8004ad0:	a904      	add	r1, sp, #16
 8004ad2:	f3af 8000 	nop.w
 8004ad6:	1c42      	adds	r2, r0, #1
 8004ad8:	4606      	mov	r6, r0
 8004ada:	d1d6      	bne.n	8004a8a <_svfiprintf_r+0x176>
 8004adc:	89ab      	ldrh	r3, [r5, #12]
 8004ade:	065b      	lsls	r3, r3, #25
 8004ae0:	f53f af2c 	bmi.w	800493c <_svfiprintf_r+0x28>
 8004ae4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004ae6:	b01d      	add	sp, #116	; 0x74
 8004ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004aec:	ab03      	add	r3, sp, #12
 8004aee:	9300      	str	r3, [sp, #0]
 8004af0:	462a      	mov	r2, r5
 8004af2:	4638      	mov	r0, r7
 8004af4:	4b05      	ldr	r3, [pc, #20]	; (8004b0c <_svfiprintf_r+0x1f8>)
 8004af6:	a904      	add	r1, sp, #16
 8004af8:	f000 f87c 	bl	8004bf4 <_printf_i>
 8004afc:	e7eb      	b.n	8004ad6 <_svfiprintf_r+0x1c2>
 8004afe:	bf00      	nop
 8004b00:	08004f72 	.word	0x08004f72
 8004b04:	08004f7c 	.word	0x08004f7c
 8004b08:	00000000 	.word	0x00000000
 8004b0c:	0800485d 	.word	0x0800485d
 8004b10:	08004f78 	.word	0x08004f78

08004b14 <_printf_common>:
 8004b14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b18:	4616      	mov	r6, r2
 8004b1a:	4699      	mov	r9, r3
 8004b1c:	688a      	ldr	r2, [r1, #8]
 8004b1e:	690b      	ldr	r3, [r1, #16]
 8004b20:	4607      	mov	r7, r0
 8004b22:	4293      	cmp	r3, r2
 8004b24:	bfb8      	it	lt
 8004b26:	4613      	movlt	r3, r2
 8004b28:	6033      	str	r3, [r6, #0]
 8004b2a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004b2e:	460c      	mov	r4, r1
 8004b30:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004b34:	b10a      	cbz	r2, 8004b3a <_printf_common+0x26>
 8004b36:	3301      	adds	r3, #1
 8004b38:	6033      	str	r3, [r6, #0]
 8004b3a:	6823      	ldr	r3, [r4, #0]
 8004b3c:	0699      	lsls	r1, r3, #26
 8004b3e:	bf42      	ittt	mi
 8004b40:	6833      	ldrmi	r3, [r6, #0]
 8004b42:	3302      	addmi	r3, #2
 8004b44:	6033      	strmi	r3, [r6, #0]
 8004b46:	6825      	ldr	r5, [r4, #0]
 8004b48:	f015 0506 	ands.w	r5, r5, #6
 8004b4c:	d106      	bne.n	8004b5c <_printf_common+0x48>
 8004b4e:	f104 0a19 	add.w	sl, r4, #25
 8004b52:	68e3      	ldr	r3, [r4, #12]
 8004b54:	6832      	ldr	r2, [r6, #0]
 8004b56:	1a9b      	subs	r3, r3, r2
 8004b58:	42ab      	cmp	r3, r5
 8004b5a:	dc28      	bgt.n	8004bae <_printf_common+0x9a>
 8004b5c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004b60:	1e13      	subs	r3, r2, #0
 8004b62:	6822      	ldr	r2, [r4, #0]
 8004b64:	bf18      	it	ne
 8004b66:	2301      	movne	r3, #1
 8004b68:	0692      	lsls	r2, r2, #26
 8004b6a:	d42d      	bmi.n	8004bc8 <_printf_common+0xb4>
 8004b6c:	4649      	mov	r1, r9
 8004b6e:	4638      	mov	r0, r7
 8004b70:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004b74:	47c0      	blx	r8
 8004b76:	3001      	adds	r0, #1
 8004b78:	d020      	beq.n	8004bbc <_printf_common+0xa8>
 8004b7a:	6823      	ldr	r3, [r4, #0]
 8004b7c:	68e5      	ldr	r5, [r4, #12]
 8004b7e:	f003 0306 	and.w	r3, r3, #6
 8004b82:	2b04      	cmp	r3, #4
 8004b84:	bf18      	it	ne
 8004b86:	2500      	movne	r5, #0
 8004b88:	6832      	ldr	r2, [r6, #0]
 8004b8a:	f04f 0600 	mov.w	r6, #0
 8004b8e:	68a3      	ldr	r3, [r4, #8]
 8004b90:	bf08      	it	eq
 8004b92:	1aad      	subeq	r5, r5, r2
 8004b94:	6922      	ldr	r2, [r4, #16]
 8004b96:	bf08      	it	eq
 8004b98:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004b9c:	4293      	cmp	r3, r2
 8004b9e:	bfc4      	itt	gt
 8004ba0:	1a9b      	subgt	r3, r3, r2
 8004ba2:	18ed      	addgt	r5, r5, r3
 8004ba4:	341a      	adds	r4, #26
 8004ba6:	42b5      	cmp	r5, r6
 8004ba8:	d11a      	bne.n	8004be0 <_printf_common+0xcc>
 8004baa:	2000      	movs	r0, #0
 8004bac:	e008      	b.n	8004bc0 <_printf_common+0xac>
 8004bae:	2301      	movs	r3, #1
 8004bb0:	4652      	mov	r2, sl
 8004bb2:	4649      	mov	r1, r9
 8004bb4:	4638      	mov	r0, r7
 8004bb6:	47c0      	blx	r8
 8004bb8:	3001      	adds	r0, #1
 8004bba:	d103      	bne.n	8004bc4 <_printf_common+0xb0>
 8004bbc:	f04f 30ff 	mov.w	r0, #4294967295
 8004bc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004bc4:	3501      	adds	r5, #1
 8004bc6:	e7c4      	b.n	8004b52 <_printf_common+0x3e>
 8004bc8:	2030      	movs	r0, #48	; 0x30
 8004bca:	18e1      	adds	r1, r4, r3
 8004bcc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004bd0:	1c5a      	adds	r2, r3, #1
 8004bd2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004bd6:	4422      	add	r2, r4
 8004bd8:	3302      	adds	r3, #2
 8004bda:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004bde:	e7c5      	b.n	8004b6c <_printf_common+0x58>
 8004be0:	2301      	movs	r3, #1
 8004be2:	4622      	mov	r2, r4
 8004be4:	4649      	mov	r1, r9
 8004be6:	4638      	mov	r0, r7
 8004be8:	47c0      	blx	r8
 8004bea:	3001      	adds	r0, #1
 8004bec:	d0e6      	beq.n	8004bbc <_printf_common+0xa8>
 8004bee:	3601      	adds	r6, #1
 8004bf0:	e7d9      	b.n	8004ba6 <_printf_common+0x92>
	...

08004bf4 <_printf_i>:
 8004bf4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004bf8:	460c      	mov	r4, r1
 8004bfa:	7e27      	ldrb	r7, [r4, #24]
 8004bfc:	4691      	mov	r9, r2
 8004bfe:	2f78      	cmp	r7, #120	; 0x78
 8004c00:	4680      	mov	r8, r0
 8004c02:	469a      	mov	sl, r3
 8004c04:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004c06:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004c0a:	d807      	bhi.n	8004c1c <_printf_i+0x28>
 8004c0c:	2f62      	cmp	r7, #98	; 0x62
 8004c0e:	d80a      	bhi.n	8004c26 <_printf_i+0x32>
 8004c10:	2f00      	cmp	r7, #0
 8004c12:	f000 80d9 	beq.w	8004dc8 <_printf_i+0x1d4>
 8004c16:	2f58      	cmp	r7, #88	; 0x58
 8004c18:	f000 80a4 	beq.w	8004d64 <_printf_i+0x170>
 8004c1c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004c20:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004c24:	e03a      	b.n	8004c9c <_printf_i+0xa8>
 8004c26:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004c2a:	2b15      	cmp	r3, #21
 8004c2c:	d8f6      	bhi.n	8004c1c <_printf_i+0x28>
 8004c2e:	a001      	add	r0, pc, #4	; (adr r0, 8004c34 <_printf_i+0x40>)
 8004c30:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004c34:	08004c8d 	.word	0x08004c8d
 8004c38:	08004ca1 	.word	0x08004ca1
 8004c3c:	08004c1d 	.word	0x08004c1d
 8004c40:	08004c1d 	.word	0x08004c1d
 8004c44:	08004c1d 	.word	0x08004c1d
 8004c48:	08004c1d 	.word	0x08004c1d
 8004c4c:	08004ca1 	.word	0x08004ca1
 8004c50:	08004c1d 	.word	0x08004c1d
 8004c54:	08004c1d 	.word	0x08004c1d
 8004c58:	08004c1d 	.word	0x08004c1d
 8004c5c:	08004c1d 	.word	0x08004c1d
 8004c60:	08004daf 	.word	0x08004daf
 8004c64:	08004cd1 	.word	0x08004cd1
 8004c68:	08004d91 	.word	0x08004d91
 8004c6c:	08004c1d 	.word	0x08004c1d
 8004c70:	08004c1d 	.word	0x08004c1d
 8004c74:	08004dd1 	.word	0x08004dd1
 8004c78:	08004c1d 	.word	0x08004c1d
 8004c7c:	08004cd1 	.word	0x08004cd1
 8004c80:	08004c1d 	.word	0x08004c1d
 8004c84:	08004c1d 	.word	0x08004c1d
 8004c88:	08004d99 	.word	0x08004d99
 8004c8c:	680b      	ldr	r3, [r1, #0]
 8004c8e:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004c92:	1d1a      	adds	r2, r3, #4
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	600a      	str	r2, [r1, #0]
 8004c98:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004c9c:	2301      	movs	r3, #1
 8004c9e:	e0a4      	b.n	8004dea <_printf_i+0x1f6>
 8004ca0:	6825      	ldr	r5, [r4, #0]
 8004ca2:	6808      	ldr	r0, [r1, #0]
 8004ca4:	062e      	lsls	r6, r5, #24
 8004ca6:	f100 0304 	add.w	r3, r0, #4
 8004caa:	d50a      	bpl.n	8004cc2 <_printf_i+0xce>
 8004cac:	6805      	ldr	r5, [r0, #0]
 8004cae:	600b      	str	r3, [r1, #0]
 8004cb0:	2d00      	cmp	r5, #0
 8004cb2:	da03      	bge.n	8004cbc <_printf_i+0xc8>
 8004cb4:	232d      	movs	r3, #45	; 0x2d
 8004cb6:	426d      	negs	r5, r5
 8004cb8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004cbc:	230a      	movs	r3, #10
 8004cbe:	485e      	ldr	r0, [pc, #376]	; (8004e38 <_printf_i+0x244>)
 8004cc0:	e019      	b.n	8004cf6 <_printf_i+0x102>
 8004cc2:	f015 0f40 	tst.w	r5, #64	; 0x40
 8004cc6:	6805      	ldr	r5, [r0, #0]
 8004cc8:	600b      	str	r3, [r1, #0]
 8004cca:	bf18      	it	ne
 8004ccc:	b22d      	sxthne	r5, r5
 8004cce:	e7ef      	b.n	8004cb0 <_printf_i+0xbc>
 8004cd0:	680b      	ldr	r3, [r1, #0]
 8004cd2:	6825      	ldr	r5, [r4, #0]
 8004cd4:	1d18      	adds	r0, r3, #4
 8004cd6:	6008      	str	r0, [r1, #0]
 8004cd8:	0628      	lsls	r0, r5, #24
 8004cda:	d501      	bpl.n	8004ce0 <_printf_i+0xec>
 8004cdc:	681d      	ldr	r5, [r3, #0]
 8004cde:	e002      	b.n	8004ce6 <_printf_i+0xf2>
 8004ce0:	0669      	lsls	r1, r5, #25
 8004ce2:	d5fb      	bpl.n	8004cdc <_printf_i+0xe8>
 8004ce4:	881d      	ldrh	r5, [r3, #0]
 8004ce6:	2f6f      	cmp	r7, #111	; 0x6f
 8004ce8:	bf0c      	ite	eq
 8004cea:	2308      	moveq	r3, #8
 8004cec:	230a      	movne	r3, #10
 8004cee:	4852      	ldr	r0, [pc, #328]	; (8004e38 <_printf_i+0x244>)
 8004cf0:	2100      	movs	r1, #0
 8004cf2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004cf6:	6866      	ldr	r6, [r4, #4]
 8004cf8:	2e00      	cmp	r6, #0
 8004cfa:	bfa8      	it	ge
 8004cfc:	6821      	ldrge	r1, [r4, #0]
 8004cfe:	60a6      	str	r6, [r4, #8]
 8004d00:	bfa4      	itt	ge
 8004d02:	f021 0104 	bicge.w	r1, r1, #4
 8004d06:	6021      	strge	r1, [r4, #0]
 8004d08:	b90d      	cbnz	r5, 8004d0e <_printf_i+0x11a>
 8004d0a:	2e00      	cmp	r6, #0
 8004d0c:	d04d      	beq.n	8004daa <_printf_i+0x1b6>
 8004d0e:	4616      	mov	r6, r2
 8004d10:	fbb5 f1f3 	udiv	r1, r5, r3
 8004d14:	fb03 5711 	mls	r7, r3, r1, r5
 8004d18:	5dc7      	ldrb	r7, [r0, r7]
 8004d1a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004d1e:	462f      	mov	r7, r5
 8004d20:	42bb      	cmp	r3, r7
 8004d22:	460d      	mov	r5, r1
 8004d24:	d9f4      	bls.n	8004d10 <_printf_i+0x11c>
 8004d26:	2b08      	cmp	r3, #8
 8004d28:	d10b      	bne.n	8004d42 <_printf_i+0x14e>
 8004d2a:	6823      	ldr	r3, [r4, #0]
 8004d2c:	07df      	lsls	r7, r3, #31
 8004d2e:	d508      	bpl.n	8004d42 <_printf_i+0x14e>
 8004d30:	6923      	ldr	r3, [r4, #16]
 8004d32:	6861      	ldr	r1, [r4, #4]
 8004d34:	4299      	cmp	r1, r3
 8004d36:	bfde      	ittt	le
 8004d38:	2330      	movle	r3, #48	; 0x30
 8004d3a:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004d3e:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004d42:	1b92      	subs	r2, r2, r6
 8004d44:	6122      	str	r2, [r4, #16]
 8004d46:	464b      	mov	r3, r9
 8004d48:	4621      	mov	r1, r4
 8004d4a:	4640      	mov	r0, r8
 8004d4c:	f8cd a000 	str.w	sl, [sp]
 8004d50:	aa03      	add	r2, sp, #12
 8004d52:	f7ff fedf 	bl	8004b14 <_printf_common>
 8004d56:	3001      	adds	r0, #1
 8004d58:	d14c      	bne.n	8004df4 <_printf_i+0x200>
 8004d5a:	f04f 30ff 	mov.w	r0, #4294967295
 8004d5e:	b004      	add	sp, #16
 8004d60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004d64:	4834      	ldr	r0, [pc, #208]	; (8004e38 <_printf_i+0x244>)
 8004d66:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8004d6a:	680e      	ldr	r6, [r1, #0]
 8004d6c:	6823      	ldr	r3, [r4, #0]
 8004d6e:	f856 5b04 	ldr.w	r5, [r6], #4
 8004d72:	061f      	lsls	r7, r3, #24
 8004d74:	600e      	str	r6, [r1, #0]
 8004d76:	d514      	bpl.n	8004da2 <_printf_i+0x1ae>
 8004d78:	07d9      	lsls	r1, r3, #31
 8004d7a:	bf44      	itt	mi
 8004d7c:	f043 0320 	orrmi.w	r3, r3, #32
 8004d80:	6023      	strmi	r3, [r4, #0]
 8004d82:	b91d      	cbnz	r5, 8004d8c <_printf_i+0x198>
 8004d84:	6823      	ldr	r3, [r4, #0]
 8004d86:	f023 0320 	bic.w	r3, r3, #32
 8004d8a:	6023      	str	r3, [r4, #0]
 8004d8c:	2310      	movs	r3, #16
 8004d8e:	e7af      	b.n	8004cf0 <_printf_i+0xfc>
 8004d90:	6823      	ldr	r3, [r4, #0]
 8004d92:	f043 0320 	orr.w	r3, r3, #32
 8004d96:	6023      	str	r3, [r4, #0]
 8004d98:	2378      	movs	r3, #120	; 0x78
 8004d9a:	4828      	ldr	r0, [pc, #160]	; (8004e3c <_printf_i+0x248>)
 8004d9c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004da0:	e7e3      	b.n	8004d6a <_printf_i+0x176>
 8004da2:	065e      	lsls	r6, r3, #25
 8004da4:	bf48      	it	mi
 8004da6:	b2ad      	uxthmi	r5, r5
 8004da8:	e7e6      	b.n	8004d78 <_printf_i+0x184>
 8004daa:	4616      	mov	r6, r2
 8004dac:	e7bb      	b.n	8004d26 <_printf_i+0x132>
 8004dae:	680b      	ldr	r3, [r1, #0]
 8004db0:	6826      	ldr	r6, [r4, #0]
 8004db2:	1d1d      	adds	r5, r3, #4
 8004db4:	6960      	ldr	r0, [r4, #20]
 8004db6:	600d      	str	r5, [r1, #0]
 8004db8:	0635      	lsls	r5, r6, #24
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	d501      	bpl.n	8004dc2 <_printf_i+0x1ce>
 8004dbe:	6018      	str	r0, [r3, #0]
 8004dc0:	e002      	b.n	8004dc8 <_printf_i+0x1d4>
 8004dc2:	0671      	lsls	r1, r6, #25
 8004dc4:	d5fb      	bpl.n	8004dbe <_printf_i+0x1ca>
 8004dc6:	8018      	strh	r0, [r3, #0]
 8004dc8:	2300      	movs	r3, #0
 8004dca:	4616      	mov	r6, r2
 8004dcc:	6123      	str	r3, [r4, #16]
 8004dce:	e7ba      	b.n	8004d46 <_printf_i+0x152>
 8004dd0:	680b      	ldr	r3, [r1, #0]
 8004dd2:	1d1a      	adds	r2, r3, #4
 8004dd4:	600a      	str	r2, [r1, #0]
 8004dd6:	681e      	ldr	r6, [r3, #0]
 8004dd8:	2100      	movs	r1, #0
 8004dda:	4630      	mov	r0, r6
 8004ddc:	6862      	ldr	r2, [r4, #4]
 8004dde:	f000 f831 	bl	8004e44 <memchr>
 8004de2:	b108      	cbz	r0, 8004de8 <_printf_i+0x1f4>
 8004de4:	1b80      	subs	r0, r0, r6
 8004de6:	6060      	str	r0, [r4, #4]
 8004de8:	6863      	ldr	r3, [r4, #4]
 8004dea:	6123      	str	r3, [r4, #16]
 8004dec:	2300      	movs	r3, #0
 8004dee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004df2:	e7a8      	b.n	8004d46 <_printf_i+0x152>
 8004df4:	4632      	mov	r2, r6
 8004df6:	4649      	mov	r1, r9
 8004df8:	4640      	mov	r0, r8
 8004dfa:	6923      	ldr	r3, [r4, #16]
 8004dfc:	47d0      	blx	sl
 8004dfe:	3001      	adds	r0, #1
 8004e00:	d0ab      	beq.n	8004d5a <_printf_i+0x166>
 8004e02:	6823      	ldr	r3, [r4, #0]
 8004e04:	079b      	lsls	r3, r3, #30
 8004e06:	d413      	bmi.n	8004e30 <_printf_i+0x23c>
 8004e08:	68e0      	ldr	r0, [r4, #12]
 8004e0a:	9b03      	ldr	r3, [sp, #12]
 8004e0c:	4298      	cmp	r0, r3
 8004e0e:	bfb8      	it	lt
 8004e10:	4618      	movlt	r0, r3
 8004e12:	e7a4      	b.n	8004d5e <_printf_i+0x16a>
 8004e14:	2301      	movs	r3, #1
 8004e16:	4632      	mov	r2, r6
 8004e18:	4649      	mov	r1, r9
 8004e1a:	4640      	mov	r0, r8
 8004e1c:	47d0      	blx	sl
 8004e1e:	3001      	adds	r0, #1
 8004e20:	d09b      	beq.n	8004d5a <_printf_i+0x166>
 8004e22:	3501      	adds	r5, #1
 8004e24:	68e3      	ldr	r3, [r4, #12]
 8004e26:	9903      	ldr	r1, [sp, #12]
 8004e28:	1a5b      	subs	r3, r3, r1
 8004e2a:	42ab      	cmp	r3, r5
 8004e2c:	dcf2      	bgt.n	8004e14 <_printf_i+0x220>
 8004e2e:	e7eb      	b.n	8004e08 <_printf_i+0x214>
 8004e30:	2500      	movs	r5, #0
 8004e32:	f104 0619 	add.w	r6, r4, #25
 8004e36:	e7f5      	b.n	8004e24 <_printf_i+0x230>
 8004e38:	08004f83 	.word	0x08004f83
 8004e3c:	08004f94 	.word	0x08004f94

08004e40 <__retarget_lock_acquire_recursive>:
 8004e40:	4770      	bx	lr

08004e42 <__retarget_lock_release_recursive>:
 8004e42:	4770      	bx	lr

08004e44 <memchr>:
 8004e44:	4603      	mov	r3, r0
 8004e46:	b510      	push	{r4, lr}
 8004e48:	b2c9      	uxtb	r1, r1
 8004e4a:	4402      	add	r2, r0
 8004e4c:	4293      	cmp	r3, r2
 8004e4e:	4618      	mov	r0, r3
 8004e50:	d101      	bne.n	8004e56 <memchr+0x12>
 8004e52:	2000      	movs	r0, #0
 8004e54:	e003      	b.n	8004e5e <memchr+0x1a>
 8004e56:	7804      	ldrb	r4, [r0, #0]
 8004e58:	3301      	adds	r3, #1
 8004e5a:	428c      	cmp	r4, r1
 8004e5c:	d1f6      	bne.n	8004e4c <memchr+0x8>
 8004e5e:	bd10      	pop	{r4, pc}

08004e60 <memcpy>:
 8004e60:	440a      	add	r2, r1
 8004e62:	4291      	cmp	r1, r2
 8004e64:	f100 33ff 	add.w	r3, r0, #4294967295
 8004e68:	d100      	bne.n	8004e6c <memcpy+0xc>
 8004e6a:	4770      	bx	lr
 8004e6c:	b510      	push	{r4, lr}
 8004e6e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004e72:	4291      	cmp	r1, r2
 8004e74:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004e78:	d1f9      	bne.n	8004e6e <memcpy+0xe>
 8004e7a:	bd10      	pop	{r4, pc}

08004e7c <memmove>:
 8004e7c:	4288      	cmp	r0, r1
 8004e7e:	b510      	push	{r4, lr}
 8004e80:	eb01 0402 	add.w	r4, r1, r2
 8004e84:	d902      	bls.n	8004e8c <memmove+0x10>
 8004e86:	4284      	cmp	r4, r0
 8004e88:	4623      	mov	r3, r4
 8004e8a:	d807      	bhi.n	8004e9c <memmove+0x20>
 8004e8c:	1e43      	subs	r3, r0, #1
 8004e8e:	42a1      	cmp	r1, r4
 8004e90:	d008      	beq.n	8004ea4 <memmove+0x28>
 8004e92:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004e96:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004e9a:	e7f8      	b.n	8004e8e <memmove+0x12>
 8004e9c:	4601      	mov	r1, r0
 8004e9e:	4402      	add	r2, r0
 8004ea0:	428a      	cmp	r2, r1
 8004ea2:	d100      	bne.n	8004ea6 <memmove+0x2a>
 8004ea4:	bd10      	pop	{r4, pc}
 8004ea6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004eaa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004eae:	e7f7      	b.n	8004ea0 <memmove+0x24>

08004eb0 <_realloc_r>:
 8004eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004eb2:	4607      	mov	r7, r0
 8004eb4:	4614      	mov	r4, r2
 8004eb6:	460e      	mov	r6, r1
 8004eb8:	b921      	cbnz	r1, 8004ec4 <_realloc_r+0x14>
 8004eba:	4611      	mov	r1, r2
 8004ebc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004ec0:	f7ff bc36 	b.w	8004730 <_malloc_r>
 8004ec4:	b922      	cbnz	r2, 8004ed0 <_realloc_r+0x20>
 8004ec6:	f7ff fbe7 	bl	8004698 <_free_r>
 8004eca:	4625      	mov	r5, r4
 8004ecc:	4628      	mov	r0, r5
 8004ece:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004ed0:	f000 f814 	bl	8004efc <_malloc_usable_size_r>
 8004ed4:	42a0      	cmp	r0, r4
 8004ed6:	d20f      	bcs.n	8004ef8 <_realloc_r+0x48>
 8004ed8:	4621      	mov	r1, r4
 8004eda:	4638      	mov	r0, r7
 8004edc:	f7ff fc28 	bl	8004730 <_malloc_r>
 8004ee0:	4605      	mov	r5, r0
 8004ee2:	2800      	cmp	r0, #0
 8004ee4:	d0f2      	beq.n	8004ecc <_realloc_r+0x1c>
 8004ee6:	4631      	mov	r1, r6
 8004ee8:	4622      	mov	r2, r4
 8004eea:	f7ff ffb9 	bl	8004e60 <memcpy>
 8004eee:	4631      	mov	r1, r6
 8004ef0:	4638      	mov	r0, r7
 8004ef2:	f7ff fbd1 	bl	8004698 <_free_r>
 8004ef6:	e7e9      	b.n	8004ecc <_realloc_r+0x1c>
 8004ef8:	4635      	mov	r5, r6
 8004efa:	e7e7      	b.n	8004ecc <_realloc_r+0x1c>

08004efc <_malloc_usable_size_r>:
 8004efc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004f00:	1f18      	subs	r0, r3, #4
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	bfbc      	itt	lt
 8004f06:	580b      	ldrlt	r3, [r1, r0]
 8004f08:	18c0      	addlt	r0, r0, r3
 8004f0a:	4770      	bx	lr

08004f0c <_init>:
 8004f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f0e:	bf00      	nop
 8004f10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004f12:	bc08      	pop	{r3}
 8004f14:	469e      	mov	lr, r3
 8004f16:	4770      	bx	lr

08004f18 <_fini>:
 8004f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f1a:	bf00      	nop
 8004f1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004f1e:	bc08      	pop	{r3}
 8004f20:	469e      	mov	lr, r3
 8004f22:	4770      	bx	lr
